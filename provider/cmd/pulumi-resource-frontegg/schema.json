{
    "name": "frontegg",
    "displayName": "Frontegg",
    "description": "A Pulumi package for creating and managing frontegg cloud resources.",
    "keywords": [
        "frontegg",
        "category/cloud"
    ],
    "homepage": "https://github.com/nrf110/pulumi-frontegg",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`frontegg` Terraform Provider](https://github.com/frontegg/terraform-provider-frontegg).",
    "repository": "https://github.com/nrf110/pulumi-frontegg",
    "publisher": "Nick Fisher",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/nrf110/pulumi-frontegg/sdk/go/frontegg",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "pulumi-frontegg",
            "packageDescription": "A Pulumi package for creating and managing frontegg cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/frontegg/terraform-provider-frontegg)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-frontegg` repo](https://github.com/nrf110/pulumi-frontegg/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-frontegg` repo](https://github.com/frontegg/terraform-provider-frontegg/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/frontegg/terraform-provider-frontegg)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-frontegg` repo](https://github.com/nrf110/pulumi-frontegg/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-frontegg` repo](https://github.com/frontegg/terraform-provider-frontegg/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiBaseUrl": {
                "type": "string",
                "description": "The Frontegg api url. Override to change region. Defaults to EU url.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for a Frontegg portal API key.\n"
            },
            "environmentId": {
                "type": "string",
                "description": "The client ID from environment settings.\n",
                "secret": true
            },
            "portalBaseUrl": {
                "type": "string",
                "description": "The Frontegg portal url. Override to change region. Defaults to EU url.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The corresponding secret key for the API key.\n",
                "secret": true
            }
        },
        "defaults": [
            "clientId",
            "secretKey"
        ]
    },
    "types": {
        "frontegg:index/WorkspaceAdminPortal:WorkspaceAdminPortal": {
            "properties": {
                "enableAccountSettings": {
                    "type": "boolean",
                    "description": "Enable access to account settings in the admin portal.\n"
                },
                "enableApiTokens": {
                    "type": "boolean",
                    "description": "Enable access to API tokens in the admin portal.\n"
                },
                "enableAuditLogs": {
                    "type": "boolean",
                    "description": "Enable access to audit logs in the admin portal.\n"
                },
                "enableGroups": {
                    "type": "boolean",
                    "description": "Enable access to groups in the admin portal.\n"
                },
                "enablePersonalApiTokens": {
                    "type": "boolean",
                    "description": "Enable access to personal API tokens in the admin portal.\n"
                },
                "enablePrivacy": {
                    "type": "boolean",
                    "description": "Enable access to privacy settings in the admin portal.\n"
                },
                "enableProfile": {
                    "type": "boolean",
                    "description": "Enable access to profile settings in the admin portal.\n"
                },
                "enableProvisioning": {
                    "type": "boolean",
                    "description": "Enable access to provisioning settings in the admin portal.\n"
                },
                "enableRoles": {
                    "type": "boolean",
                    "description": "Enable access to roles and permissions in the admin portal.\n"
                },
                "enableSecurity": {
                    "type": "boolean",
                    "description": "Enable access to security settings in the admin portal.\n"
                },
                "enableSso": {
                    "type": "boolean",
                    "description": "Enable access to SSO settings in the admin portal.\n"
                },
                "enableSubscriptions": {
                    "type": "boolean",
                    "description": "Enable access to subscription settings in the admin portal.\n"
                },
                "enableUsage": {
                    "type": "boolean",
                    "description": "Enable access to usage information in the admin portal.\n"
                },
                "enableUsers": {
                    "type": "boolean",
                    "description": "Enable access to user management in the admin portal.\n"
                },
                "enableWebhooks": {
                    "type": "boolean",
                    "description": "Enable access to webhooks in the admin portal.\n"
                },
                "palette": {
                    "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPalette:WorkspaceAdminPortalPalette",
                    "description": "Configures the color palette for the admin portal.\n",
                    "deprecationMessage": "Use `palette_admin_portal Or/And palette_login_box` instead."
                },
                "paletteAdminPortal": {
                    "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortal:WorkspaceAdminPortalPaletteAdminPortal",
                    "description": "Configures the color palette for the admin portal.\n"
                },
                "paletteLoginBox": {
                    "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBox:WorkspaceAdminPortalPaletteLoginBox",
                    "description": "Configures the color palette for the admin portal.\n"
                }
            },
            "type": "object",
            "required": [
                "enableAccountSettings",
                "enableApiTokens",
                "enableAuditLogs",
                "enableGroups",
                "enablePersonalApiTokens",
                "enablePrivacy",
                "enableProfile",
                "enableProvisioning",
                "enableRoles",
                "enableSecurity",
                "enableSso",
                "enableSubscriptions",
                "enableUsage",
                "enableUsers",
                "enableWebhooks"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPalette:WorkspaceAdminPortalPalette": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteError:WorkspaceAdminPortalPaletteError"
                    },
                    "description": "Error color.\n"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteInfo:WorkspaceAdminPortalPaletteInfo"
                    },
                    "description": "Info color.\n"
                },
                "primaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPalettePrimary:WorkspaceAdminPortalPalettePrimary"
                    },
                    "description": "Primary color.\n"
                },
                "secondaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteSecondary:WorkspaceAdminPortalPaletteSecondary"
                    },
                    "description": "Secondary color.\n"
                },
                "successes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteSuccess:WorkspaceAdminPortalPaletteSuccess"
                    },
                    "description": "Success color.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteWarning:WorkspaceAdminPortalPaletteWarning"
                    },
                    "description": "Warning color.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortal:WorkspaceAdminPortalPaletteAdminPortal": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalError:WorkspaceAdminPortalPaletteAdminPortalError"
                    },
                    "description": "Error color.\n"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalInfo:WorkspaceAdminPortalPaletteAdminPortalInfo"
                    },
                    "description": "Info color.\n"
                },
                "primaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalPrimary:WorkspaceAdminPortalPaletteAdminPortalPrimary"
                    },
                    "description": "Primary color.\n"
                },
                "secondaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalSecondary:WorkspaceAdminPortalPaletteAdminPortalSecondary"
                    },
                    "description": "Secondary color.\n"
                },
                "successes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalSuccess:WorkspaceAdminPortalPaletteAdminPortalSuccess"
                    },
                    "description": "Success color.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteAdminPortalWarning:WorkspaceAdminPortalPaletteAdminPortalWarning"
                    },
                    "description": "Warning color.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalError:WorkspaceAdminPortalPaletteAdminPortalError": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalInfo:WorkspaceAdminPortalPaletteAdminPortalInfo": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalPrimary:WorkspaceAdminPortalPaletteAdminPortalPrimary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalSecondary:WorkspaceAdminPortalPaletteAdminPortalSecondary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalSuccess:WorkspaceAdminPortalPaletteAdminPortalSuccess": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteAdminPortalWarning:WorkspaceAdminPortalPaletteAdminPortalWarning": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteError:WorkspaceAdminPortalPaletteError": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteInfo:WorkspaceAdminPortalPaletteInfo": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBox:WorkspaceAdminPortalPaletteLoginBox": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxError:WorkspaceAdminPortalPaletteLoginBoxError"
                    },
                    "description": "Error color.\n"
                },
                "infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxInfo:WorkspaceAdminPortalPaletteLoginBoxInfo"
                    },
                    "description": "Info color.\n"
                },
                "primaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxPrimary:WorkspaceAdminPortalPaletteLoginBoxPrimary"
                    },
                    "description": "Primary color.\n"
                },
                "secondaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxSecondary:WorkspaceAdminPortalPaletteLoginBoxSecondary"
                    },
                    "description": "Secondary color.\n"
                },
                "successes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxSuccess:WorkspaceAdminPortalPaletteLoginBoxSuccess"
                    },
                    "description": "Success color.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortalPaletteLoginBoxWarning:WorkspaceAdminPortalPaletteLoginBoxWarning"
                    },
                    "description": "Warning color.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxError:WorkspaceAdminPortalPaletteLoginBoxError": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxInfo:WorkspaceAdminPortalPaletteLoginBoxInfo": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxPrimary:WorkspaceAdminPortalPaletteLoginBoxPrimary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxSecondary:WorkspaceAdminPortalPaletteLoginBoxSecondary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxSuccess:WorkspaceAdminPortalPaletteLoginBoxSuccess": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteLoginBoxWarning:WorkspaceAdminPortalPaletteLoginBoxWarning": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPalettePrimary:WorkspaceAdminPortalPalettePrimary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteSecondary:WorkspaceAdminPortalPaletteSecondary": {
            "properties": {
                "active": {
                    "type": "string",
                    "description": "active color.\n"
                },
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "hover": {
                    "type": "string",
                    "description": "hover color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "contrastText",
                "dark",
                "hover",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteSuccess:WorkspaceAdminPortalPaletteSuccess": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAdminPortalPaletteWarning:WorkspaceAdminPortalPaletteWarning": {
            "properties": {
                "contrastText": {
                    "type": "string",
                    "description": "contrast_text color.\n"
                },
                "dark": {
                    "type": "string",
                    "description": "dark color.\n"
                },
                "light": {
                    "type": "string",
                    "description": "light color.\n"
                },
                "main": {
                    "type": "string",
                    "description": "main color.\n"
                }
            },
            "type": "object",
            "required": [
                "contrastText",
                "dark",
                "light",
                "main"
            ]
        },
        "frontegg:index/WorkspaceAuthPolicy:WorkspaceAuthPolicy": {
            "properties": {
                "allowSignups": {
                    "type": "boolean",
                    "description": "Whether users are allowed to sign up.\n"
                },
                "allowTenantInvitations": {
                    "type": "boolean",
                    "description": "Allow tenants to invite new users via an invitation link.\n"
                },
                "allowUnverifiedUsers": {
                    "type": "boolean",
                    "description": "Whether unverified users are allowed to log in.\n"
                },
                "authStrategy": {
                    "type": "string",
                    "description": "The authentication strategy to use for people logging in.\n\n\tMust be one of \"EmailAndPassword\", \"Code\", \"MagicLink\", \"NoLocalAuthentication\", \"SmsCode\"\n"
                },
                "enableApiTokens": {
                    "type": "boolean",
                    "description": "Whether users can create API tokens.\n"
                },
                "enableRoles": {
                    "type": "boolean",
                    "description": "Whether granular roles and permissions are enabled.\n"
                },
                "jwtAccessTokenExpiration": {
                    "type": "integer",
                    "description": "The expiration time for the JWT access tokens issued by Frontegg.\n"
                },
                "jwtAlgorithm": {
                    "type": "string",
                    "description": "The algorithm Frontegg uses to sign JWT tokens.\n"
                },
                "jwtPublicKey": {
                    "type": "string",
                    "description": "The public key that Frontegg uses to sign JWT tokens.\n"
                },
                "jwtRefreshTokenExpiration": {
                    "type": "integer",
                    "description": "The expiration time for the JWT refresh tokens issued by Frontegg.\n"
                },
                "machineToMachineAuthStrategy": {
                    "type": "string",
                    "description": "Type of tokens users will be able to generate.\n\t\t\t\t\t\t\tMust be one of \"ClientCredentials\" or \"AccessToken\".\n"
                },
                "sameSiteCookiePolicy": {
                    "type": "string",
                    "description": "The SameSite policy to use for Frontegg cookies.\n\n\tMust be one of \"none\", \"lax\", or \"strict\".\n"
                }
            },
            "type": "object",
            "required": [
                "allowSignups",
                "allowTenantInvitations",
                "allowUnverifiedUsers",
                "authStrategy",
                "enableApiTokens",
                "enableRoles",
                "jwtAccessTokenExpiration",
                "jwtRefreshTokenExpiration",
                "sameSiteCookiePolicy"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowSignups",
                        "allowTenantInvitations",
                        "allowUnverifiedUsers",
                        "authStrategy",
                        "enableApiTokens",
                        "enableRoles",
                        "jwtAccessTokenExpiration",
                        "jwtPublicKey",
                        "jwtRefreshTokenExpiration",
                        "sameSiteCookiePolicy"
                    ]
                }
            }
        },
        "frontegg:index/WorkspaceBotDetectionEmail:WorkspaceBotDetectionEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceBruteForceProtectionEmail:WorkspaceBruteForceProtectionEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceBulkTenantsInvitesEmail:WorkspaceBulkTenantsInvitesEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceCaptchaPolicy:WorkspaceCaptchaPolicy": {
            "properties": {
                "ignoredEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses that should be exempt from CAPTCHA checks.\n"
                },
                "minScore": {
                    "type": "number",
                    "description": "The minimum CAPTCHA score to accept. Set to 0.0 to accept all scores.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The reCAPTCHA secret key to use.\n"
                },
                "siteKey": {
                    "type": "string",
                    "description": "The reCAPTCHA site key to use.\n"
                }
            },
            "type": "object",
            "required": [
                "minScore",
                "secretKey",
                "siteKey"
            ]
        },
        "frontegg:index/WorkspaceEmailVerificationEmail:WorkspaceEmailVerificationEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceFacebookSocialLogin:WorkspaceFacebookSocialLogin": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the Facebook application to authenticate with. Required when setting **`customised`** parameter to true.\n"
                },
                "customised": {
                    "type": "boolean",
                    "description": "Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after a successful authentication.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret associated with the Facebook application. Required when setting **`customised`** parameter to true.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "redirectUrl"
            ]
        },
        "frontegg:index/WorkspaceGithubSocialLogin:WorkspaceGithubSocialLogin": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the GitHub application to authenticate with. Required when setting **`customised`** parameter to true.\n"
                },
                "customised": {
                    "type": "boolean",
                    "description": "Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after a successful authentication.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret associated with the GitHub application. Required when setting **`customised`** parameter to true.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "redirectUrl"
            ]
        },
        "frontegg:index/WorkspaceGoogleSocialLogin:WorkspaceGoogleSocialLogin": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the Google application to authenticate with. Required when setting **`customised`** parameter to true.\n"
                },
                "customised": {
                    "type": "boolean",
                    "description": "Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after a successful authentication.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret associated with the Google application. Required when setting **`customised`** parameter to true.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "redirectUrl"
            ]
        },
        "frontegg:index/WorkspaceHostedLogin:WorkspaceHostedLogin": {
            "properties": {
                "allowedRedirectUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed redirect URLs.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceImpossibleTravelEmail:WorkspaceImpossibleTravelEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceLockoutPolicy:WorkspaceLockoutPolicy": {
            "properties": {
                "maxAttempts": {
                    "type": "integer",
                    "description": "The number of failed attempts after which a user will be locked out.\n"
                }
            },
            "type": "object",
            "required": [
                "maxAttempts"
            ]
        },
        "frontegg:index/WorkspaceMagicCodeEmail:WorkspaceMagicCodeEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMagicLinkEmail:WorkspaceMagicLinkEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMfaAuthenticationApp:WorkspaceMfaAuthenticationApp": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The service name to display in the authentication app.\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "frontegg:index/WorkspaceMfaEnrollEmail:WorkspaceMfaEnrollEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMfaOtcEmail:WorkspaceMfaOtcEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMfaPolicy:WorkspaceMfaPolicy": {
            "properties": {
                "allowRememberDevice": {
                    "type": "boolean",
                    "description": "Allow users to remember their MFA devices.\n"
                },
                "deviceExpiration": {
                    "type": "integer",
                    "description": "The number of seconds that MFA devices can be remembered for, if allow_remember_my_device is true.\n"
                },
                "enforce": {
                    "type": "string",
                    "description": "Whether to force use of MFA.\n\n\tMust be one of \"off\", \"on\", or \"unless-saml\".\n"
                }
            },
            "type": "object",
            "required": [
                "allowRememberDevice",
                "deviceExpiration",
                "enforce"
            ]
        },
        "frontegg:index/WorkspaceMfaRecoveryCodeEmail:WorkspaceMfaRecoveryCodeEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMfaUnenrollEmail:WorkspaceMfaUnenrollEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceMicrosoftSocialLogin:WorkspaceMicrosoftSocialLogin": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client ID of the Microsoft application to authenticate with. Required when setting **`customised`** parameter to true.\n"
                },
                "customised": {
                    "type": "boolean",
                    "description": "Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after a successful authentication.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret associated with the Microsoft application. Required when setting **`customised`** parameter to true.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "redirectUrl"
            ]
        },
        "frontegg:index/WorkspaceNewDeviceConnectedEmail:WorkspaceNewDeviceConnectedEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceNewMfaMethodEmail:WorkspaceNewMfaMethodEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceOidc:WorkspaceOidc": {
            "properties": {
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after the OIDC exchange.\n"
                }
            },
            "type": "object",
            "required": [
                "redirectUrl"
            ]
        },
        "frontegg:index/WorkspacePasswordPolicy:WorkspacePasswordPolicy": {
            "properties": {
                "allowPassphrases": {
                    "type": "boolean"
                },
                "history": {
                    "type": "integer",
                    "description": "The number of historical passwords to prevent users from reusing. Set to zero to disable.\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The maximum length of a password.\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The minimum length of a password.\n"
                },
                "minPhraseLength": {
                    "type": "integer"
                },
                "minTests": {
                    "type": "integer",
                    "description": "The minimum number of strength tests the password must meet.\n"
                }
            },
            "type": "object",
            "required": [
                "allowPassphrases",
                "history",
                "maxLength",
                "minLength",
                "minPhraseLength",
                "minTests"
            ]
        },
        "frontegg:index/WorkspacePwnedPasswordEmail:WorkspacePwnedPasswordEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceRemoveMfaMethodEmail:WorkspaceRemoveMfaMethodEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceResetPasswordEmail:WorkspaceResetPasswordEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceResetPhoneNumberEmail:WorkspaceResetPhoneNumberEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceSaml:WorkspaceSaml": {
            "properties": {
                "acsUrl": {
                    "type": "string",
                    "description": "The ACS URL for the SAML authentication flow.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to after the SAML exchange.\n"
                },
                "spEntityId": {
                    "type": "string",
                    "description": "The name of the service provider that will be displayed to users.\n"
                }
            },
            "type": "object",
            "required": [
                "acsUrl",
                "spEntityId"
            ]
        },
        "frontegg:index/WorkspaceSmsAuthenticationEnabledEmail:WorkspaceSmsAuthenticationEnabledEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceSsoDomainPolicy:WorkspaceSsoDomainPolicy": {
            "properties": {
                "allowVerifiedUsersToAddDomains": {
                    "type": "boolean",
                    "description": "Whether to allow users to add their own email domain without validating the domain through DNS.\n"
                },
                "bypassDomainCrossValidation": {
                    "type": "boolean",
                    "description": "Whether to allow users to sign in even via SSO even if the associated domain has not been validated through DNS.\n"
                },
                "skipDomainVerification": {
                    "type": "boolean",
                    "description": "Whether to automatically mark new SSO domains as validated, without validating the domain through DNS.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceSsoMultiTenantPolicy:WorkspaceSsoMultiTenantPolicy": {
            "properties": {
                "unspecifiedTenantStrategy": {
                    "type": "string",
                    "description": "Strategy for logging in nonexisting users that match SSO configurations for multiple tenants when no tenant has been specified. Either BLOCK or FIRST_CREATED.\n"
                },
                "useActiveTenant": {
                    "type": "boolean",
                    "description": "Whether users with existing accounts that match SSO configurations for multiple tenants should be logged in using the SSO for their active (last logged into) account, or whether the unspecified tenant strategy should apply.\n"
                }
            },
            "type": "object"
        },
        "frontegg:index/WorkspaceSuspiciousIpEmail:WorkspaceSuspiciousIpEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceUserActivationEmail:WorkspaceUserActivationEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceUserInvitationEmail:WorkspaceUserInvitationEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        },
        "frontegg:index/WorkspaceUserUsedInvitationEmail:WorkspaceUserUsedInvitationEmail": {
            "properties": {
                "fromAddress": {
                    "type": "string",
                    "description": "The address to use in the \"From\" header of the email.\n"
                },
                "fromName": {
                    "type": "string",
                    "description": "The name to use in the \"From\" header of the email.\n"
                },
                "htmlTemplate": {
                    "type": "string",
                    "description": "The HTML template to use in the email.\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to use, if applicable.\n\n    Access this value as \"\\{\\{redirectURL\\}\\}\" in the template.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email.\n"
                },
                "successRedirectUrl": {
                    "type": "string",
                    "description": "The success redirect URL to use, if applicable.\n"
                }
            },
            "type": "object",
            "required": [
                "fromAddress",
                "fromName",
                "htmlTemplate",
                "subject"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the frontegg package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiBaseUrl": {
                "type": "string",
                "description": "The Frontegg api url. Override to change region. Defaults to EU url.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for a Frontegg portal API key.\n"
            },
            "environmentId": {
                "type": "string",
                "description": "The client ID from environment settings.\n",
                "secret": true
            },
            "portalBaseUrl": {
                "type": "string",
                "description": "The Frontegg portal url. Override to change region. Defaults to EU url.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The corresponding secret key for the API key.\n",
                "secret": true
            }
        },
        "required": [
            "clientId",
            "secretKey"
        ],
        "inputProperties": {
            "apiBaseUrl": {
                "type": "string",
                "description": "The Frontegg api url. Override to change region. Defaults to EU url.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The client ID for a Frontegg portal API key.\n"
            },
            "environmentId": {
                "type": "string",
                "description": "The client ID from environment settings.\n",
                "secret": true
            },
            "portalBaseUrl": {
                "type": "string",
                "description": "The Frontegg portal url. Override to change region. Defaults to EU url.\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The corresponding secret key for the API key.\n",
                "secret": true
            }
        },
        "requiredInputs": [
            "clientId",
            "secretKey"
        ]
    },
    "resources": {
        "frontegg:index/allowedOrigin:AllowedOrigin": {
            "description": "Configures a Frontegg allowed origin.\n",
            "properties": {
                "allowedOrigin": {
                    "type": "string",
                    "description": "The allowed origin URI.\n",
                    "language": {
                        "csharp": {
                            "name": "origin"
                        }
                    }
                }
            },
            "required": [
                "allowedOrigin"
            ],
            "inputProperties": {
                "allowedOrigin": {
                    "type": "string",
                    "description": "The allowed origin URI.\n",
                    "language": {
                        "csharp": {
                            "name": "origin"
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "allowedOrigin"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AllowedOrigin resources.\n",
                "properties": {
                    "allowedOrigin": {
                        "type": "string",
                        "description": "The allowed origin URI.\n",
                        "language": {
                            "csharp": {
                                "name": "origin"
                            }
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/emailProvider:EmailProvider": {
            "description": "Configures a Frontegg Email provider.\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp at which the permission was created.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Required for Mailgun (required only for Mailgun).\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "Provider ID (required only for AWS SES).\n"
                },
                "providerName": {
                    "type": "string",
                    "description": "Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required for AWS SES or Mailgun.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A secret to be included with the event.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The timestamp at which the permission was updated.\n"
                }
            },
            "required": [
                "createdAt",
                "providerName",
                "secret",
                "updatedAt"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "Required for Mailgun (required only for Mailgun).\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "Provider ID (required only for AWS SES).\n"
                },
                "providerName": {
                    "type": "string",
                    "description": "Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).\n"
                },
                "region": {
                    "type": "string",
                    "description": "Required for AWS SES or Mailgun.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A secret to be included with the event.\n"
                }
            },
            "requiredInputs": [
                "providerName",
                "secret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailProvider resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The timestamp at which the permission was created.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Required for Mailgun (required only for Mailgun).\n"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "Provider ID (required only for AWS SES).\n"
                    },
                    "providerName": {
                        "type": "string",
                        "description": "Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Required for AWS SES or Mailgun.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "A secret to be included with the event.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The timestamp at which the permission was updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/permission:Permission": {
            "description": "Configures a Frontegg permission.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst readUsers = frontegg.getPermission({\n    key: \"fe.secure.read.users\",\n});\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nread_users = frontegg.get_permission(key=\"fe.secure.read.users\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var readUsers = Frontegg.GetPermission.Invoke(new()\n    {\n        Key = \"fe.secure.read.users\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := frontegg.LookupPermission(ctx, \u0026frontegg.LookupPermissionArgs{\n\t\t\tKey: \"fe.secure.read.users\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.FronteggFunctions;\nimport com.pulumi.frontegg.inputs.GetPermissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var readUsers = FronteggFunctions.getPermission(GetPermissionArgs.builder()\n            .key(\"fe.secure.read.users\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  readUsers:\n    fn::invoke:\n      function: frontegg:getPermission\n      arguments:\n        key: fe.secure.read.users\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "categoryId": {
                    "type": "string",
                    "description": "The identifier of the category to which this permission belongs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp at which the permission was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the permission.\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the permission.\n"
                }
            },
            "required": [
                "categoryId",
                "createdAt",
                "description",
                "key",
                "name"
            ],
            "inputProperties": {
                "categoryId": {
                    "type": "string",
                    "description": "The identifier of the category to which this permission belongs.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the permission.\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the permission.\n"
                }
            },
            "requiredInputs": [
                "categoryId",
                "description",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Permission resources.\n",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "The identifier of the category to which this permission belongs.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The timestamp at which the permission was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the permission.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A human-readable identifier for the permission.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-readable name for the permission.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/permissionCategory:PermissionCategory": {
            "description": "Configures a Frontegg permission category.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst example = new frontegg.PermissionCategory(\"example\", {\n    name: \"Example\",\n    description: \"An example of a permission category\",\n});\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nexample = frontegg.PermissionCategory(\"example\",\n    name=\"Example\",\n    description=\"An example of a permission category\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Frontegg.PermissionCategory(\"example\", new()\n    {\n        Name = \"Example\",\n        Description = \"An example of a permission category\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := frontegg.NewPermissionCategory(ctx, \"example\", \u0026frontegg.PermissionCategoryArgs{\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tDescription: pulumi.String(\"An example of a permission category\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.PermissionCategory;\nimport com.pulumi.frontegg.PermissionCategoryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PermissionCategory(\"example\", PermissionCategoryArgs.builder()\n            .name(\"Example\")\n            .description(\"An example of a permission category\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: frontegg:PermissionCategory\n    properties:\n      name: Example\n      description: An example of a permission category\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp at which the permission category was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the permission category.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the permission category.\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the permission category.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the permission category.\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionCategory resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The timestamp at which the permission category was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the permission category.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-readable name for the permission category.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/redirectUri:RedirectUri": {
            "description": "Configures a Frontegg Redirect URI.\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The redirect URI key.\n"
                },
                "redirectUri": {
                    "type": "string",
                    "description": "The redirect URI.\n",
                    "language": {
                        "csharp": {
                            "name": "uri"
                        }
                    }
                }
            },
            "required": [
                "key",
                "redirectUri"
            ],
            "inputProperties": {
                "redirectUri": {
                    "type": "string",
                    "description": "The redirect URI.\n",
                    "language": {
                        "csharp": {
                            "name": "uri"
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "redirectUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedirectUri resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The redirect URI key.\n"
                    },
                    "redirectUri": {
                        "type": "string",
                        "description": "The redirect URI.\n",
                        "language": {
                            "csharp": {
                                "name": "uri"
                            }
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/role:Role": {
            "description": "Configures a Frontegg role.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst example = new frontegg.Role(\"example\", {\n    name: \"Example\",\n    key: \"example\",\n    description: \"An example of a role\",\n    \"default\": true,\n    level: 0,\n    permissionIds: [\n        fronteggPermission.example.id,\n        readUsers.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nexample = frontegg.Role(\"example\",\n    name=\"Example\",\n    key=\"example\",\n    description=\"An example of a role\",\n    default=True,\n    level=0,\n    permission_ids=[\n        frontegg_permission[\"example\"][\"id\"],\n        read_users[\"id\"],\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Frontegg.Role(\"example\", new()\n    {\n        Name = \"Example\",\n        Key = \"example\",\n        Description = \"An example of a role\",\n        Default = true,\n        Level = 0,\n        PermissionIds = new[]\n        {\n            fronteggPermission.Example.Id,\n            readUsers.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := frontegg.NewRole(ctx, \"example\", \u0026frontegg.RoleArgs{\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tKey:         pulumi.String(\"example\"),\n\t\t\tDescription: pulumi.String(\"An example of a role\"),\n\t\t\tDefault:     pulumi.Bool(true),\n\t\t\tLevel:       pulumi.Int(0),\n\t\t\tPermissionIds: pulumi.StringArray{\n\t\t\t\tfronteggPermission.Example.Id,\n\t\t\t\treadUsers.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.Role;\nimport com.pulumi.frontegg.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Role(\"example\", RoleArgs.builder()\n            .name(\"Example\")\n            .key(\"example\")\n            .description(\"An example of a role\")\n            .default_(true)\n            .level(0)\n            .permissionIds(            \n                fronteggPermission.example().id(),\n                readUsers.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: frontegg:Role\n    properties:\n      name: Example\n      key: example\n      description: An example of a role\n      default: true\n      level: 0\n      permissionIds:\n        - ${fronteggPermission.example.id}\n        - ${readUsers.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp at which the role was created.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether the role should be applied to new users by default.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the role.\n"
                },
                "firstUser": {
                    "type": "boolean",
                    "description": "Whether the role should be applied to the first user in the tenant (new tenants only).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the role.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the role in the role hierarchy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the role.\n"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the permissions that the role confers to its members.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant that owns the role.\n"
                },
                "vendorId": {
                    "type": "string",
                    "description": "The ID of the vendor that owns the role.\n"
                }
            },
            "required": [
                "createdAt",
                "default",
                "description",
                "key",
                "level",
                "name",
                "permissionIds",
                "vendorId"
            ],
            "inputProperties": {
                "default": {
                    "type": "boolean",
                    "description": "Whether the role should be applied to new users by default.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the role.\n"
                },
                "firstUser": {
                    "type": "boolean",
                    "description": "Whether the role should be applied to the first user in the tenant (new tenants only).\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the role.\n"
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the role in the role hierarchy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the role.\n"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the permissions that the role confers to its members.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant that owns the role.\n"
                }
            },
            "requiredInputs": [
                "default",
                "description",
                "key",
                "level",
                "permissionIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The timestamp at which the role was created.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Whether the role should be applied to new users by default.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the role.\n"
                    },
                    "firstUser": {
                        "type": "boolean",
                        "description": "Whether the role should be applied to the first user in the tenant (new tenants only).\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A human-readable identifier for the role.\n"
                    },
                    "level": {
                        "type": "integer",
                        "description": "The level of the role in the role hierarchy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-readable name for the role.\n"
                    },
                    "permissionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the permissions that the role confers to its members.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The ID of the tenant that owns the role.\n"
                    },
                    "vendorId": {
                        "type": "string",
                        "description": "The ID of the vendor that owns the role.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/tenant:Tenant": {
            "description": "Configures a Frontegg tenant.\n",
            "properties": {
                "applicationUri": {
                    "type": "string",
                    "description": "The application URI for this tenant.\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the tenant.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the tenant.\n"
                },
                "selectedMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "key",
                "name"
            ],
            "inputProperties": {
                "applicationUri": {
                    "type": "string",
                    "description": "The application URI for this tenant.\n"
                },
                "key": {
                    "type": "string",
                    "description": "A human-readable identifier for the tenant.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the tenant.\n"
                },
                "selectedMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "applicationUri": {
                        "type": "string",
                        "description": "The application URI for this tenant.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A human-readable identifier for the tenant.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-readable name for the tenant.\n"
                    },
                    "selectedMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/user:User": {
            "description": "Configures a Frontegg user.\n",
            "properties": {
                "automaticallyVerify": {
                    "type": "boolean",
                    "description": "Whether the user gets verified upon creation.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The user's login password.\n",
                    "secret": true
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the role IDs that the user has in the tenant\n"
                },
                "skipInviteEmail": {
                    "type": "boolean",
                    "description": "Skip sending the invite email. If true, user is automatically verified on creation.\n"
                },
                "superuser": {
                    "type": "boolean",
                    "description": "Whether the user is a super user.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID for this user.\n"
                }
            },
            "required": [
                "email",
                "roleIds",
                "tenantId"
            ],
            "inputProperties": {
                "automaticallyVerify": {
                    "type": "boolean",
                    "description": "Whether the user gets verified upon creation.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The user's login password.\n",
                    "secret": true
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the role IDs that the user has in the tenant\n"
                },
                "skipInviteEmail": {
                    "type": "boolean",
                    "description": "Skip sending the invite email. If true, user is automatically verified on creation.\n"
                },
                "superuser": {
                    "type": "boolean",
                    "description": "Whether the user is a super user.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID for this user.\n"
                }
            },
            "requiredInputs": [
                "email",
                "roleIds",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "automaticallyVerify": {
                        "type": "boolean",
                        "description": "Whether the user gets verified upon creation.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's login password.\n",
                        "secret": true
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the role IDs that the user has in the tenant\n"
                    },
                    "skipInviteEmail": {
                        "type": "boolean",
                        "description": "Skip sending the invite email. If true, user is automatically verified on creation.\n"
                    },
                    "superuser": {
                        "type": "boolean",
                        "description": "Whether the user is a super user.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID for this user.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/webhook:Webhook": {
            "description": "Configures a Frontegg webhook.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst example = new frontegg.Webhook(\"example\", {\n    enabled: true,\n    name: \"Example webhook\",\n    description: \"An example of a webhook\",\n    url: \"https://example.com/webhook\",\n    secret: \"example-secret\",\n    events: [\"frontegg.user.authenticated\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nexample = frontegg.Webhook(\"example\",\n    enabled=True,\n    name=\"Example webhook\",\n    description=\"An example of a webhook\",\n    url=\"https://example.com/webhook\",\n    secret=\"example-secret\",\n    events=[\"frontegg.user.authenticated\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Frontegg.Webhook(\"example\", new()\n    {\n        Enabled = true,\n        Name = \"Example webhook\",\n        Description = \"An example of a webhook\",\n        Url = \"https://example.com/webhook\",\n        Secret = \"example-secret\",\n        Events = new[]\n        {\n            \"frontegg.user.authenticated\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := frontegg.NewWebhook(ctx, \"example\", \u0026frontegg.WebhookArgs{\n\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\tName:        pulumi.String(\"Example webhook\"),\n\t\t\tDescription: pulumi.String(\"An example of a webhook\"),\n\t\t\tUrl:         pulumi.String(\"https://example.com/webhook\"),\n\t\t\tSecret:      pulumi.String(\"example-secret\"),\n\t\t\tEvents: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"frontegg.user.authenticated\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.Webhook;\nimport com.pulumi.frontegg.WebhookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Webhook(\"example\", WebhookArgs.builder()\n            .enabled(true)\n            .name(\"Example webhook\")\n            .description(\"An example of a webhook\")\n            .url(\"https://example.com/webhook\")\n            .secret(\"example-secret\")\n            .events(\"frontegg.user.authenticated\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: frontegg:Webhook\n    properties:\n      enabled: true\n      name: Example webhook\n      description: An example of a webhook\n      url: https://example.com/webhook\n      secret: example-secret\n      events:\n        - frontegg.user.authenticated\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The timestamp at which the webhook was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the webhook.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the events to subscribe to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the webhook.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A secret to include with the event.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send events to.\n"
                },
                "vendorId": {
                    "type": "string",
                    "description": "The ID of the vendor that owns the webhook.\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "enabled",
                "events",
                "name",
                "secret",
                "type",
                "url",
                "vendorId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the webhook.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the events to subscribe to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the webhook.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A secret to include with the event.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send events to.\n"
                }
            },
            "requiredInputs": [
                "description",
                "enabled",
                "events",
                "secret",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The timestamp at which the webhook was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the webhook.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the webhook is enabled.\n"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the events to subscribe to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-readable name for the webhook.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "A secret to include with the event.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the webhook.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL to send events to.\n"
                    },
                    "vendorId": {
                        "type": "string",
                        "description": "The ID of the vendor that owns the webhook.\n"
                    }
                },
                "type": "object"
            }
        },
        "frontegg:index/workspace:Workspace": {
            "description": "Workspace configuration.\n\nThis is a singleton resource. You must only create one frontegg.Workspace resource\nper Frontegg provider.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst example = new frontegg.Workspace(\"example\", {\n    name: \"Your Company\",\n    country: \"US\",\n    backendStack: \"Python\",\n    frontendStack: \"React\",\n    openSaasInstalled: false,\n    fronteggDomain: \"blah.frontegg.com\",\n    allowedOrigins: [\"https://yourcompany.com\"],\n    authPolicy: {\n        allowUnverifiedUsers: true,\n        allowSignups: true,\n        enableApiTokens: true,\n        enableRoles: true,\n        jwtAlgorithm: \"RS256\",\n        machineToMachineAuthStrategy: \"ClientCredentials\",\n        jwtAccessTokenExpiration: 86400,\n        jwtRefreshTokenExpiration: 2592000,\n        sameSiteCookiePolicy: \"strict\",\n        authStrategy: \"EmailAndPassword\",\n        allowTenantInvitations: true,\n    },\n    mfaPolicy: {\n        allowRememberDevice: true,\n        deviceExpiration: 604800,\n        enforce: \"unless-saml\",\n    },\n    mfaAuthenticationApp: {\n        serviceName: \"Your Company\",\n    },\n    lockoutPolicy: {\n        maxAttempts: 10,\n    },\n    passwordPolicy: {\n        allowPassphrases: false,\n        minLength: 10,\n        maxLength: 128,\n        minTests: 2,\n        minPhraseLength: 6,\n        history: 2,\n    },\n    captchaPolicy: {\n        siteKey: \"fake-site-key\",\n        secretKey: \"fake-secret-key\",\n        minScore: 0.5,\n    },\n    hostedLogin: {\n        allowedRedirectUrls: [\n            \"http://example.com/a\",\n            \"http://example.com/b\",\n        ],\n    },\n    facebookSocialLogin: {\n        clientId: \"fake-client-id\",\n        redirectUrl: \"fake-redirect-url\",\n        secret: \"fake-secret\",\n        customised: false,\n    },\n    githubSocialLogin: {\n        clientId: \"fake-client-id\",\n        redirectUrl: \"fake-redirect-url\",\n        secret: \"fake-secret\",\n        customised: false,\n    },\n    googleSocialLogin: {\n        clientId: \"fake-client-id\",\n        redirectUrl: \"fake-redirect-url\",\n        secret: \"fake-secret\",\n        customised: false,\n    },\n    microsoftSocialLogin: {\n        clientId: \"fake-client-id\",\n        redirectUrl: \"fake-redirect-url\",\n        secret: \"fake-secret\",\n        customised: false,\n    },\n    saml: {\n        acsUrl: \"https://mycompany.com/saml\",\n        spEntityId: \"my-company\",\n        redirectUrl: \"http://localhost:3000\",\n    },\n    oidc: {\n        redirectUrl: \"http://localhost:3000\",\n    },\n    resetPasswordEmail: {\n        fromAddress: \"me@company.com\",\n        fromName: \"Your Company\",\n        subject: \"Reset Your Company Password\",\n        htmlTemplate: \"\u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\",\n        redirectUrl: \"https://yourcompany.com/reset\",\n    },\n    adminPortal: {\n        enableAccountSettings: false,\n        enableApiTokens: false,\n        enableAuditLogs: false,\n        enablePersonalApiTokens: false,\n        enablePrivacy: false,\n        enableProfile: false,\n        enableRoles: false,\n        enableSecurity: false,\n        enableSso: false,\n        enableSubscriptions: false,\n        enableUsage: false,\n        enableUsers: false,\n        enableWebhooks: false,\n        enableGroups: false,\n        enableProvisioning: false,\n        palette: {\n            errors: [{\n                contrastText: \"#eeeef0\",\n                dark: \"#ae402c\",\n                light: \"#FFEEEA\",\n                main: \"#E1583E\",\n            }],\n            infos: [{\n                contrastText: \"#eeeef0\",\n                dark: \"#3c6492\",\n                light: \"#E2EEF9\",\n                main: \"#5587C0\",\n            }],\n            primaries: [{\n                active: \"#278854\",\n                contrastText: \"#eeeef0\",\n                dark: \"#36A76A\",\n                hover: \"#32A265\",\n                light: \"#A2E1BF\",\n                main: \"#43BB7A\",\n            }],\n            secondaries: [{\n                active: \"#E6ECF4\",\n                contrastText: \"#eeeef0\",\n                dark: \"#E6ECF4\",\n                hover: \"#F0F3F8\",\n                light: \"#FBFBFC\",\n                main: \"#FBFBFC\",\n            }],\n            successes: [{\n                contrastText: \"#eeeef0\",\n                dark: \"#1d7c30\",\n                light: \"#E1F5E2\",\n                main: \"#2CA744\",\n            }],\n            warnings: [{\n                contrastText: \"#eeeef0\",\n                dark: \"#EAE1C2\",\n                light: \"#F9F4E2\",\n                main: \"#A79D7B\",\n            }],\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nexample = frontegg.Workspace(\"example\",\n    name=\"Your Company\",\n    country=\"US\",\n    backend_stack=\"Python\",\n    frontend_stack=\"React\",\n    open_saas_installed=False,\n    frontegg_domain=\"blah.frontegg.com\",\n    allowed_origins=[\"https://yourcompany.com\"],\n    auth_policy={\n        \"allow_unverified_users\": True,\n        \"allow_signups\": True,\n        \"enable_api_tokens\": True,\n        \"enable_roles\": True,\n        \"jwt_algorithm\": \"RS256\",\n        \"machine_to_machine_auth_strategy\": \"ClientCredentials\",\n        \"jwt_access_token_expiration\": 86400,\n        \"jwt_refresh_token_expiration\": 2592000,\n        \"same_site_cookie_policy\": \"strict\",\n        \"auth_strategy\": \"EmailAndPassword\",\n        \"allow_tenant_invitations\": True,\n    },\n    mfa_policy={\n        \"allow_remember_device\": True,\n        \"device_expiration\": 604800,\n        \"enforce\": \"unless-saml\",\n    },\n    mfa_authentication_app={\n        \"service_name\": \"Your Company\",\n    },\n    lockout_policy={\n        \"max_attempts\": 10,\n    },\n    password_policy={\n        \"allow_passphrases\": False,\n        \"min_length\": 10,\n        \"max_length\": 128,\n        \"min_tests\": 2,\n        \"min_phrase_length\": 6,\n        \"history\": 2,\n    },\n    captcha_policy={\n        \"site_key\": \"fake-site-key\",\n        \"secret_key\": \"fake-secret-key\",\n        \"min_score\": 0.5,\n    },\n    hosted_login={\n        \"allowed_redirect_urls\": [\n            \"http://example.com/a\",\n            \"http://example.com/b\",\n        ],\n    },\n    facebook_social_login={\n        \"client_id\": \"fake-client-id\",\n        \"redirect_url\": \"fake-redirect-url\",\n        \"secret\": \"fake-secret\",\n        \"customised\": False,\n    },\n    github_social_login={\n        \"client_id\": \"fake-client-id\",\n        \"redirect_url\": \"fake-redirect-url\",\n        \"secret\": \"fake-secret\",\n        \"customised\": False,\n    },\n    google_social_login={\n        \"client_id\": \"fake-client-id\",\n        \"redirect_url\": \"fake-redirect-url\",\n        \"secret\": \"fake-secret\",\n        \"customised\": False,\n    },\n    microsoft_social_login={\n        \"client_id\": \"fake-client-id\",\n        \"redirect_url\": \"fake-redirect-url\",\n        \"secret\": \"fake-secret\",\n        \"customised\": False,\n    },\n    saml={\n        \"acs_url\": \"https://mycompany.com/saml\",\n        \"sp_entity_id\": \"my-company\",\n        \"redirect_url\": \"http://localhost:3000\",\n    },\n    oidc={\n        \"redirect_url\": \"http://localhost:3000\",\n    },\n    reset_password_email={\n        \"from_address\": \"me@company.com\",\n        \"from_name\": \"Your Company\",\n        \"subject\": \"Reset Your Company Password\",\n        \"html_template\": \"\u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\",\n        \"redirect_url\": \"https://yourcompany.com/reset\",\n    },\n    admin_portal={\n        \"enable_account_settings\": False,\n        \"enable_api_tokens\": False,\n        \"enable_audit_logs\": False,\n        \"enable_personal_api_tokens\": False,\n        \"enable_privacy\": False,\n        \"enable_profile\": False,\n        \"enable_roles\": False,\n        \"enable_security\": False,\n        \"enable_sso\": False,\n        \"enable_subscriptions\": False,\n        \"enable_usage\": False,\n        \"enable_users\": False,\n        \"enable_webhooks\": False,\n        \"enable_groups\": False,\n        \"enable_provisioning\": False,\n        \"palette\": {\n            \"errors\": [{\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#ae402c\",\n                \"light\": \"#FFEEEA\",\n                \"main\": \"#E1583E\",\n            }],\n            \"infos\": [{\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#3c6492\",\n                \"light\": \"#E2EEF9\",\n                \"main\": \"#5587C0\",\n            }],\n            \"primaries\": [{\n                \"active\": \"#278854\",\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#36A76A\",\n                \"hover\": \"#32A265\",\n                \"light\": \"#A2E1BF\",\n                \"main\": \"#43BB7A\",\n            }],\n            \"secondaries\": [{\n                \"active\": \"#E6ECF4\",\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#E6ECF4\",\n                \"hover\": \"#F0F3F8\",\n                \"light\": \"#FBFBFC\",\n                \"main\": \"#FBFBFC\",\n            }],\n            \"successes\": [{\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#1d7c30\",\n                \"light\": \"#E1F5E2\",\n                \"main\": \"#2CA744\",\n            }],\n            \"warnings\": [{\n                \"contrast_text\": \"#eeeef0\",\n                \"dark\": \"#EAE1C2\",\n                \"light\": \"#F9F4E2\",\n                \"main\": \"#A79D7B\",\n            }],\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Frontegg.Workspace(\"example\", new()\n    {\n        Name = \"Your Company\",\n        Country = \"US\",\n        BackendStack = \"Python\",\n        FrontendStack = \"React\",\n        OpenSaasInstalled = false,\n        FronteggDomain = \"blah.frontegg.com\",\n        AllowedOrigins = new[]\n        {\n            \"https://yourcompany.com\",\n        },\n        AuthPolicy = new Frontegg.Inputs.WorkspaceAuthPolicyArgs\n        {\n            AllowUnverifiedUsers = true,\n            AllowSignups = true,\n            EnableApiTokens = true,\n            EnableRoles = true,\n            JwtAlgorithm = \"RS256\",\n            MachineToMachineAuthStrategy = \"ClientCredentials\",\n            JwtAccessTokenExpiration = 86400,\n            JwtRefreshTokenExpiration = 2592000,\n            SameSiteCookiePolicy = \"strict\",\n            AuthStrategy = \"EmailAndPassword\",\n            AllowTenantInvitations = true,\n        },\n        MfaPolicy = new Frontegg.Inputs.WorkspaceMfaPolicyArgs\n        {\n            AllowRememberDevice = true,\n            DeviceExpiration = 604800,\n            Enforce = \"unless-saml\",\n        },\n        MfaAuthenticationApp = new Frontegg.Inputs.WorkspaceMfaAuthenticationAppArgs\n        {\n            ServiceName = \"Your Company\",\n        },\n        LockoutPolicy = new Frontegg.Inputs.WorkspaceLockoutPolicyArgs\n        {\n            MaxAttempts = 10,\n        },\n        PasswordPolicy = new Frontegg.Inputs.WorkspacePasswordPolicyArgs\n        {\n            AllowPassphrases = false,\n            MinLength = 10,\n            MaxLength = 128,\n            MinTests = 2,\n            MinPhraseLength = 6,\n            History = 2,\n        },\n        CaptchaPolicy = new Frontegg.Inputs.WorkspaceCaptchaPolicyArgs\n        {\n            SiteKey = \"fake-site-key\",\n            SecretKey = \"fake-secret-key\",\n            MinScore = 0.5,\n        },\n        HostedLogin = new Frontegg.Inputs.WorkspaceHostedLoginArgs\n        {\n            AllowedRedirectUrls = new[]\n            {\n                \"http://example.com/a\",\n                \"http://example.com/b\",\n            },\n        },\n        FacebookSocialLogin = new Frontegg.Inputs.WorkspaceFacebookSocialLoginArgs\n        {\n            ClientId = \"fake-client-id\",\n            RedirectUrl = \"fake-redirect-url\",\n            Secret = \"fake-secret\",\n            Customised = false,\n        },\n        GithubSocialLogin = new Frontegg.Inputs.WorkspaceGithubSocialLoginArgs\n        {\n            ClientId = \"fake-client-id\",\n            RedirectUrl = \"fake-redirect-url\",\n            Secret = \"fake-secret\",\n            Customised = false,\n        },\n        GoogleSocialLogin = new Frontegg.Inputs.WorkspaceGoogleSocialLoginArgs\n        {\n            ClientId = \"fake-client-id\",\n            RedirectUrl = \"fake-redirect-url\",\n            Secret = \"fake-secret\",\n            Customised = false,\n        },\n        MicrosoftSocialLogin = new Frontegg.Inputs.WorkspaceMicrosoftSocialLoginArgs\n        {\n            ClientId = \"fake-client-id\",\n            RedirectUrl = \"fake-redirect-url\",\n            Secret = \"fake-secret\",\n            Customised = false,\n        },\n        Saml = new Frontegg.Inputs.WorkspaceSamlArgs\n        {\n            AcsUrl = \"https://mycompany.com/saml\",\n            SpEntityId = \"my-company\",\n            RedirectUrl = \"http://localhost:3000\",\n        },\n        Oidc = new Frontegg.Inputs.WorkspaceOidcArgs\n        {\n            RedirectUrl = \"http://localhost:3000\",\n        },\n        ResetPasswordEmail = new Frontegg.Inputs.WorkspaceResetPasswordEmailArgs\n        {\n            FromAddress = \"me@company.com\",\n            FromName = \"Your Company\",\n            Subject = \"Reset Your Company Password\",\n            HtmlTemplate = \"\u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\",\n            RedirectUrl = \"https://yourcompany.com/reset\",\n        },\n        AdminPortal = new Frontegg.Inputs.WorkspaceAdminPortalArgs\n        {\n            EnableAccountSettings = false,\n            EnableApiTokens = false,\n            EnableAuditLogs = false,\n            EnablePersonalApiTokens = false,\n            EnablePrivacy = false,\n            EnableProfile = false,\n            EnableRoles = false,\n            EnableSecurity = false,\n            EnableSso = false,\n            EnableSubscriptions = false,\n            EnableUsage = false,\n            EnableUsers = false,\n            EnableWebhooks = false,\n            EnableGroups = false,\n            EnableProvisioning = false,\n            Palette = new Frontegg.Inputs.WorkspaceAdminPortalPaletteArgs\n            {\n                Errors = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPaletteErrorArgs\n                    {\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#ae402c\",\n                        Light = \"#FFEEEA\",\n                        Main = \"#E1583E\",\n                    },\n                },\n                Infos = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPaletteInfoArgs\n                    {\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#3c6492\",\n                        Light = \"#E2EEF9\",\n                        Main = \"#5587C0\",\n                    },\n                },\n                Primaries = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPalettePrimaryArgs\n                    {\n                        Active = \"#278854\",\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#36A76A\",\n                        Hover = \"#32A265\",\n                        Light = \"#A2E1BF\",\n                        Main = \"#43BB7A\",\n                    },\n                },\n                Secondaries = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPaletteSecondaryArgs\n                    {\n                        Active = \"#E6ECF4\",\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#E6ECF4\",\n                        Hover = \"#F0F3F8\",\n                        Light = \"#FBFBFC\",\n                        Main = \"#FBFBFC\",\n                    },\n                },\n                Successes = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPaletteSuccessArgs\n                    {\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#1d7c30\",\n                        Light = \"#E1F5E2\",\n                        Main = \"#2CA744\",\n                    },\n                },\n                Warnings = new[]\n                {\n                    new Frontegg.Inputs.WorkspaceAdminPortalPaletteWarningArgs\n                    {\n                        ContrastText = \"#eeeef0\",\n                        Dark = \"#EAE1C2\",\n                        Light = \"#F9F4E2\",\n                        Main = \"#A79D7B\",\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := frontegg.NewWorkspace(ctx, \"example\", \u0026frontegg.WorkspaceArgs{\n\t\t\tName:              pulumi.String(\"Your Company\"),\n\t\t\tCountry:           pulumi.String(\"US\"),\n\t\t\tBackendStack:      pulumi.String(\"Python\"),\n\t\t\tFrontendStack:     pulumi.String(\"React\"),\n\t\t\tOpenSaasInstalled: pulumi.Bool(false),\n\t\t\tFronteggDomain:    pulumi.String(\"blah.frontegg.com\"),\n\t\t\tAllowedOrigins: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://yourcompany.com\"),\n\t\t\t},\n\t\t\tAuthPolicy: \u0026frontegg.WorkspaceAuthPolicyArgs{\n\t\t\t\tAllowUnverifiedUsers:         pulumi.Bool(true),\n\t\t\t\tAllowSignups:                 pulumi.Bool(true),\n\t\t\t\tEnableApiTokens:              pulumi.Bool(true),\n\t\t\t\tEnableRoles:                  pulumi.Bool(true),\n\t\t\t\tJwtAlgorithm:                 pulumi.String(\"RS256\"),\n\t\t\t\tMachineToMachineAuthStrategy: pulumi.String(\"ClientCredentials\"),\n\t\t\t\tJwtAccessTokenExpiration:     pulumi.Int(86400),\n\t\t\t\tJwtRefreshTokenExpiration:    pulumi.Int(2592000),\n\t\t\t\tSameSiteCookiePolicy:         pulumi.String(\"strict\"),\n\t\t\t\tAuthStrategy:                 pulumi.String(\"EmailAndPassword\"),\n\t\t\t\tAllowTenantInvitations:       pulumi.Bool(true),\n\t\t\t},\n\t\t\tMfaPolicy: \u0026frontegg.WorkspaceMfaPolicyArgs{\n\t\t\t\tAllowRememberDevice: pulumi.Bool(true),\n\t\t\t\tDeviceExpiration:    pulumi.Int(604800),\n\t\t\t\tEnforce:             pulumi.String(\"unless-saml\"),\n\t\t\t},\n\t\t\tMfaAuthenticationApp: \u0026frontegg.WorkspaceMfaAuthenticationAppArgs{\n\t\t\t\tServiceName: pulumi.String(\"Your Company\"),\n\t\t\t},\n\t\t\tLockoutPolicy: \u0026frontegg.WorkspaceLockoutPolicyArgs{\n\t\t\t\tMaxAttempts: pulumi.Int(10),\n\t\t\t},\n\t\t\tPasswordPolicy: \u0026frontegg.WorkspacePasswordPolicyArgs{\n\t\t\t\tAllowPassphrases: pulumi.Bool(false),\n\t\t\t\tMinLength:        pulumi.Int(10),\n\t\t\t\tMaxLength:        pulumi.Int(128),\n\t\t\t\tMinTests:         pulumi.Int(2),\n\t\t\t\tMinPhraseLength:  pulumi.Int(6),\n\t\t\t\tHistory:          pulumi.Int(2),\n\t\t\t},\n\t\t\tCaptchaPolicy: \u0026frontegg.WorkspaceCaptchaPolicyArgs{\n\t\t\t\tSiteKey:   pulumi.String(\"fake-site-key\"),\n\t\t\t\tSecretKey: pulumi.String(\"fake-secret-key\"),\n\t\t\t\tMinScore:  pulumi.Float64(0.5),\n\t\t\t},\n\t\t\tHostedLogin: \u0026frontegg.WorkspaceHostedLoginArgs{\n\t\t\t\tAllowedRedirectUrls: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"http://example.com/a\"),\n\t\t\t\t\tpulumi.String(\"http://example.com/b\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFacebookSocialLogin: \u0026frontegg.WorkspaceFacebookSocialLoginArgs{\n\t\t\t\tClientId:    pulumi.String(\"fake-client-id\"),\n\t\t\t\tRedirectUrl: pulumi.String(\"fake-redirect-url\"),\n\t\t\t\tSecret:      pulumi.String(\"fake-secret\"),\n\t\t\t\tCustomised:  pulumi.Bool(false),\n\t\t\t},\n\t\t\tGithubSocialLogin: \u0026frontegg.WorkspaceGithubSocialLoginArgs{\n\t\t\t\tClientId:    pulumi.String(\"fake-client-id\"),\n\t\t\t\tRedirectUrl: pulumi.String(\"fake-redirect-url\"),\n\t\t\t\tSecret:      pulumi.String(\"fake-secret\"),\n\t\t\t\tCustomised:  pulumi.Bool(false),\n\t\t\t},\n\t\t\tGoogleSocialLogin: \u0026frontegg.WorkspaceGoogleSocialLoginArgs{\n\t\t\t\tClientId:    pulumi.String(\"fake-client-id\"),\n\t\t\t\tRedirectUrl: pulumi.String(\"fake-redirect-url\"),\n\t\t\t\tSecret:      pulumi.String(\"fake-secret\"),\n\t\t\t\tCustomised:  pulumi.Bool(false),\n\t\t\t},\n\t\t\tMicrosoftSocialLogin: \u0026frontegg.WorkspaceMicrosoftSocialLoginArgs{\n\t\t\t\tClientId:    pulumi.String(\"fake-client-id\"),\n\t\t\t\tRedirectUrl: pulumi.String(\"fake-redirect-url\"),\n\t\t\t\tSecret:      pulumi.String(\"fake-secret\"),\n\t\t\t\tCustomised:  pulumi.Bool(false),\n\t\t\t},\n\t\t\tSaml: \u0026frontegg.WorkspaceSamlArgs{\n\t\t\t\tAcsUrl:      pulumi.String(\"https://mycompany.com/saml\"),\n\t\t\t\tSpEntityId:  pulumi.String(\"my-company\"),\n\t\t\t\tRedirectUrl: pulumi.String(\"http://localhost:3000\"),\n\t\t\t},\n\t\t\tOidc: \u0026frontegg.WorkspaceOidcArgs{\n\t\t\t\tRedirectUrl: pulumi.String(\"http://localhost:3000\"),\n\t\t\t},\n\t\t\tResetPasswordEmail: \u0026frontegg.WorkspaceResetPasswordEmailArgs{\n\t\t\t\tFromAddress:  pulumi.String(\"me@company.com\"),\n\t\t\t\tFromName:     pulumi.String(\"Your Company\"),\n\t\t\t\tSubject:      pulumi.String(\"Reset Your Company Password\"),\n\t\t\t\tHtmlTemplate: pulumi.String(\"\u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\"),\n\t\t\t\tRedirectUrl:  pulumi.String(\"https://yourcompany.com/reset\"),\n\t\t\t},\n\t\t\tAdminPortal: \u0026frontegg.WorkspaceAdminPortalArgs{\n\t\t\t\tEnableAccountSettings:   pulumi.Bool(false),\n\t\t\t\tEnableApiTokens:         pulumi.Bool(false),\n\t\t\t\tEnableAuditLogs:         pulumi.Bool(false),\n\t\t\t\tEnablePersonalApiTokens: pulumi.Bool(false),\n\t\t\t\tEnablePrivacy:           pulumi.Bool(false),\n\t\t\t\tEnableProfile:           pulumi.Bool(false),\n\t\t\t\tEnableRoles:             pulumi.Bool(false),\n\t\t\t\tEnableSecurity:          pulumi.Bool(false),\n\t\t\t\tEnableSso:               pulumi.Bool(false),\n\t\t\t\tEnableSubscriptions:     pulumi.Bool(false),\n\t\t\t\tEnableUsage:             pulumi.Bool(false),\n\t\t\t\tEnableUsers:             pulumi.Bool(false),\n\t\t\t\tEnableWebhooks:          pulumi.Bool(false),\n\t\t\t\tEnableGroups:            pulumi.Bool(false),\n\t\t\t\tEnableProvisioning:      pulumi.Bool(false),\n\t\t\t\tPalette: \u0026frontegg.WorkspaceAdminPortalPaletteArgs{\n\t\t\t\t\tErrors: frontegg.WorkspaceAdminPortalPaletteErrorArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPaletteErrorArgs{\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#ae402c\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#FFEEEA\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#E1583E\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tInfos: frontegg.WorkspaceAdminPortalPaletteInfoArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPaletteInfoArgs{\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#3c6492\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#E2EEF9\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#5587C0\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tPrimaries: frontegg.WorkspaceAdminPortalPalettePrimaryArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPalettePrimaryArgs{\n\t\t\t\t\t\t\tActive:       pulumi.String(\"#278854\"),\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#36A76A\"),\n\t\t\t\t\t\t\tHover:        pulumi.String(\"#32A265\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#A2E1BF\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#43BB7A\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tSecondaries: frontegg.WorkspaceAdminPortalPaletteSecondaryArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPaletteSecondaryArgs{\n\t\t\t\t\t\t\tActive:       pulumi.String(\"#E6ECF4\"),\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#E6ECF4\"),\n\t\t\t\t\t\t\tHover:        pulumi.String(\"#F0F3F8\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#FBFBFC\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#FBFBFC\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tSuccesses: frontegg.WorkspaceAdminPortalPaletteSuccessArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPaletteSuccessArgs{\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#1d7c30\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#E1F5E2\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#2CA744\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWarnings: frontegg.WorkspaceAdminPortalPaletteWarningArray{\n\t\t\t\t\t\t\u0026frontegg.WorkspaceAdminPortalPaletteWarningArgs{\n\t\t\t\t\t\t\tContrastText: pulumi.String(\"#eeeef0\"),\n\t\t\t\t\t\t\tDark:         pulumi.String(\"#EAE1C2\"),\n\t\t\t\t\t\t\tLight:        pulumi.String(\"#F9F4E2\"),\n\t\t\t\t\t\t\tMain:         pulumi.String(\"#A79D7B\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.Workspace;\nimport com.pulumi.frontegg.WorkspaceArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceAuthPolicyArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceMfaPolicyArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceMfaAuthenticationAppArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceLockoutPolicyArgs;\nimport com.pulumi.frontegg.inputs.WorkspacePasswordPolicyArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceCaptchaPolicyArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceHostedLoginArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceFacebookSocialLoginArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceGithubSocialLoginArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceGoogleSocialLoginArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceMicrosoftSocialLoginArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceSamlArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceOidcArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceResetPasswordEmailArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceAdminPortalArgs;\nimport com.pulumi.frontegg.inputs.WorkspaceAdminPortalPaletteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Workspace(\"example\", WorkspaceArgs.builder()\n            .name(\"Your Company\")\n            .country(\"US\")\n            .backendStack(\"Python\")\n            .frontendStack(\"React\")\n            .openSaasInstalled(false)\n            .fronteggDomain(\"blah.frontegg.com\")\n            .allowedOrigins(\"https://yourcompany.com\")\n            .authPolicy(WorkspaceAuthPolicyArgs.builder()\n                .allowUnverifiedUsers(true)\n                .allowSignups(true)\n                .enableApiTokens(true)\n                .enableRoles(true)\n                .jwtAlgorithm(\"RS256\")\n                .machineToMachineAuthStrategy(\"ClientCredentials\")\n                .jwtAccessTokenExpiration(86400)\n                .jwtRefreshTokenExpiration(2592000)\n                .sameSiteCookiePolicy(\"strict\")\n                .authStrategy(\"EmailAndPassword\")\n                .allowTenantInvitations(true)\n                .build())\n            .mfaPolicy(WorkspaceMfaPolicyArgs.builder()\n                .allowRememberDevice(true)\n                .deviceExpiration(604800)\n                .enforce(\"unless-saml\")\n                .build())\n            .mfaAuthenticationApp(WorkspaceMfaAuthenticationAppArgs.builder()\n                .serviceName(\"Your Company\")\n                .build())\n            .lockoutPolicy(WorkspaceLockoutPolicyArgs.builder()\n                .maxAttempts(10)\n                .build())\n            .passwordPolicy(WorkspacePasswordPolicyArgs.builder()\n                .allowPassphrases(false)\n                .minLength(10)\n                .maxLength(128)\n                .minTests(2)\n                .minPhraseLength(6)\n                .history(2)\n                .build())\n            .captchaPolicy(WorkspaceCaptchaPolicyArgs.builder()\n                .siteKey(\"fake-site-key\")\n                .secretKey(\"fake-secret-key\")\n                .minScore(0.5)\n                .build())\n            .hostedLogin(WorkspaceHostedLoginArgs.builder()\n                .allowedRedirectUrls(                \n                    \"http://example.com/a\",\n                    \"http://example.com/b\")\n                .build())\n            .facebookSocialLogin(WorkspaceFacebookSocialLoginArgs.builder()\n                .clientId(\"fake-client-id\")\n                .redirectUrl(\"fake-redirect-url\")\n                .secret(\"fake-secret\")\n                .customised(false)\n                .build())\n            .githubSocialLogin(WorkspaceGithubSocialLoginArgs.builder()\n                .clientId(\"fake-client-id\")\n                .redirectUrl(\"fake-redirect-url\")\n                .secret(\"fake-secret\")\n                .customised(false)\n                .build())\n            .googleSocialLogin(WorkspaceGoogleSocialLoginArgs.builder()\n                .clientId(\"fake-client-id\")\n                .redirectUrl(\"fake-redirect-url\")\n                .secret(\"fake-secret\")\n                .customised(false)\n                .build())\n            .microsoftSocialLogin(WorkspaceMicrosoftSocialLoginArgs.builder()\n                .clientId(\"fake-client-id\")\n                .redirectUrl(\"fake-redirect-url\")\n                .secret(\"fake-secret\")\n                .customised(false)\n                .build())\n            .saml(WorkspaceSamlArgs.builder()\n                .acsUrl(\"https://mycompany.com/saml\")\n                .spEntityId(\"my-company\")\n                .redirectUrl(\"http://localhost:3000\")\n                .build())\n            .oidc(WorkspaceOidcArgs.builder()\n                .redirectUrl(\"http://localhost:3000\")\n                .build())\n            .resetPasswordEmail(WorkspaceResetPasswordEmailArgs.builder()\n                .fromAddress(\"me@company.com\")\n                .fromName(\"Your Company\")\n                .subject(\"Reset Your Company Password\")\n                .htmlTemplate(\"\u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\")\n                .redirectUrl(\"https://yourcompany.com/reset\")\n                .build())\n            .adminPortal(WorkspaceAdminPortalArgs.builder()\n                .enableAccountSettings(false)\n                .enableApiTokens(false)\n                .enableAuditLogs(false)\n                .enablePersonalApiTokens(false)\n                .enablePrivacy(false)\n                .enableProfile(false)\n                .enableRoles(false)\n                .enableSecurity(false)\n                .enableSso(false)\n                .enableSubscriptions(false)\n                .enableUsage(false)\n                .enableUsers(false)\n                .enableWebhooks(false)\n                .enableGroups(false)\n                .enableProvisioning(false)\n                .palette(WorkspaceAdminPortalPaletteArgs.builder()\n                    .errors(WorkspaceAdminPortalPaletteErrorArgs.builder()\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#ae402c\")\n                        .light(\"#FFEEEA\")\n                        .main(\"#E1583E\")\n                        .build())\n                    .infos(WorkspaceAdminPortalPaletteInfoArgs.builder()\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#3c6492\")\n                        .light(\"#E2EEF9\")\n                        .main(\"#5587C0\")\n                        .build())\n                    .primaries(WorkspaceAdminPortalPalettePrimaryArgs.builder()\n                        .active(\"#278854\")\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#36A76A\")\n                        .hover(\"#32A265\")\n                        .light(\"#A2E1BF\")\n                        .main(\"#43BB7A\")\n                        .build())\n                    .secondaries(WorkspaceAdminPortalPaletteSecondaryArgs.builder()\n                        .active(\"#E6ECF4\")\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#E6ECF4\")\n                        .hover(\"#F0F3F8\")\n                        .light(\"#FBFBFC\")\n                        .main(\"#FBFBFC\")\n                        .build())\n                    .successes(WorkspaceAdminPortalPaletteSuccessArgs.builder()\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#1d7c30\")\n                        .light(\"#E1F5E2\")\n                        .main(\"#2CA744\")\n                        .build())\n                    .warnings(WorkspaceAdminPortalPaletteWarningArgs.builder()\n                        .contrastText(\"#eeeef0\")\n                        .dark(\"#EAE1C2\")\n                        .light(\"#F9F4E2\")\n                        .main(\"#A79D7B\")\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: frontegg:Workspace\n    properties:\n      name: Your Company\n      country: US\n      backendStack: Python\n      frontendStack: React\n      openSaasInstalled: false # If you've configured CNAME record,\n      #   # you can use that custom domain like so:\n      #   # custom_domains = [\"frontegg.yourcompany.com\"]\n      fronteggDomain: blah.frontegg.com\n      allowedOrigins:\n        - https://yourcompany.com\n      authPolicy:\n        allowUnverifiedUsers: true\n        allowSignups: true\n        enableApiTokens: true\n        enableRoles: true\n        jwtAlgorithm: RS256\n        machineToMachineAuthStrategy: ClientCredentials\n        jwtAccessTokenExpiration: 86400\n        jwtRefreshTokenExpiration: 2.592e+06\n        sameSiteCookiePolicy: strict\n        authStrategy: EmailAndPassword\n        allowTenantInvitations: true\n      mfaPolicy:\n        allowRememberDevice: true\n        deviceExpiration: 604800\n        enforce: unless-saml\n      mfaAuthenticationApp:\n        serviceName: Your Company\n      lockoutPolicy:\n        maxAttempts: 10\n      passwordPolicy:\n        allowPassphrases: false\n        minLength: 10\n        maxLength: 128\n        minTests: 2\n        minPhraseLength: 6\n        history: 2\n      captchaPolicy:\n        siteKey: fake-site-key\n        secretKey: fake-secret-key\n        minScore: 0.5\n      hostedLogin:\n        allowedRedirectUrls:\n          - http://example.com/a\n          - http://example.com/b\n      facebookSocialLogin:\n        clientId: fake-client-id\n        redirectUrl: fake-redirect-url\n        secret: fake-secret\n        customised: false\n      githubSocialLogin:\n        clientId: fake-client-id\n        redirectUrl: fake-redirect-url\n        secret: fake-secret\n        customised: false\n      googleSocialLogin:\n        clientId: fake-client-id\n        redirectUrl: fake-redirect-url\n        secret: fake-secret\n        customised: false\n      microsoftSocialLogin:\n        clientId: fake-client-id\n        redirectUrl: fake-redirect-url\n        secret: fake-secret\n        customised: false\n      saml:\n        acsUrl: https://mycompany.com/saml\n        spEntityId: my-company\n        redirectUrl: http://localhost:3000\n      oidc:\n        redirectUrl: http://localhost:3000\n      resetPasswordEmail:\n        fromAddress: me@company.com\n        fromName: Your Company\n        subject: Reset Your Company Password\n        htmlTemplate: \u003cstrong\u003eReset your password! {{redirectURL}}\u003c/strong\u003e\n        redirectUrl: https://yourcompany.com/reset\n      adminPortal:\n        enableAccountSettings: false\n        enableApiTokens: false\n        enableAuditLogs: false\n        enablePersonalApiTokens: false\n        enablePrivacy: false\n        enableProfile: false\n        enableRoles: false\n        enableSecurity: false\n        enableSso: false\n        enableSubscriptions: false\n        enableUsage: false\n        enableUsers: false\n        enableWebhooks: false\n        enableGroups: false\n        enableProvisioning: false\n        palette:\n          errors:\n            - contrastText: '#eeeef0'\n              dark: '#ae402c'\n              light: '#FFEEEA'\n              main: '#E1583E'\n          infos:\n            - contrastText: '#eeeef0'\n              dark: '#3c6492'\n              light: '#E2EEF9'\n              main: '#5587C0'\n          primaries:\n            - active: '#278854'\n              contrastText: '#eeeef0'\n              dark: '#36A76A'\n              hover: '#32A265'\n              light: '#A2E1BF'\n              main: '#43BB7A'\n          secondaries:\n            - active: '#E6ECF4'\n              contrastText: '#eeeef0'\n              dark: '#E6ECF4'\n              hover: '#F0F3F8'\n              light: '#FBFBFC'\n              main: '#FBFBFC'\n          successes:\n            - contrastText: '#eeeef0'\n              dark: '#1d7c30'\n              light: '#E1F5E2'\n              main: '#2CA744'\n          warnings:\n            - contrastText: '#eeeef0'\n              dark: '#EAE1C2'\n              light: '#F9F4E2'\n              main: '#A79D7B'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "adminPortal": {
                    "$ref": "#/types/frontegg:index/WorkspaceAdminPortal:WorkspaceAdminPortal",
                    "description": "Configures the admin portal.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The origins that are allowed to access the workspace. This parameter controls the value of the \"Origin\" header for API\nresponses.\n"
                },
                "authPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceAuthPolicy:WorkspaceAuthPolicy",
                    "description": "Configures the general authentication policy.\n"
                },
                "backendStack": {
                    "type": "string",
                    "description": "The backend stack of the application associated with the workspace.\n"
                },
                "botDetectionEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBotDetectionEmail:WorkspaceBotDetectionEmail",
                    "description": "Configures the bot detection email.\n"
                },
                "bruteForceProtectionEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBruteForceProtectionEmail:WorkspaceBruteForceProtectionEmail",
                    "description": "Configures the brute force protection email.\n"
                },
                "bulkTenantsInvitesEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBulkTenantsInvitesEmail:WorkspaceBulkTenantsInvitesEmail",
                    "description": "Configures the bulk tenants invite email.\n"
                },
                "captchaPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceCaptchaPolicy:WorkspaceCaptchaPolicy",
                    "description": "Configures the CAPTCHA policy in the signup form.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country associated with the workspace.\n"
                },
                "customDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom domains at which Frontegg services will be reachable. You must configure CNAME for each domain, you can\nget record values from the portal.\n"
                },
                "emailVerificationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceEmailVerificationEmail:WorkspaceEmailVerificationEmail",
                    "description": "Configures the verification email.\n"
                },
                "facebookSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceFacebookSocialLogin:WorkspaceFacebookSocialLogin",
                    "description": "Configures social login with Facebook.\n"
                },
                "fronteggDomain": {
                    "type": "string",
                    "description": "The domain at which the Frontegg API is served for this workspace. The domain must end with \".frontegg.com\" or\n\".us.frontegg.com\".\n"
                },
                "frontendStack": {
                    "type": "string",
                    "description": "The frontend stack of the application associated with the worksapce.\n"
                },
                "githubSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceGithubSocialLogin:WorkspaceGithubSocialLogin",
                    "description": "Configures social login with GitHub.\n"
                },
                "googleSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceGoogleSocialLogin:WorkspaceGoogleSocialLogin",
                    "description": "Configures social login with Google.\n"
                },
                "hostedLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceHostedLogin:WorkspaceHostedLogin",
                    "description": "Configures Frontegg-hosted OAuth login.\n"
                },
                "impossibleTravelEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceImpossibleTravelEmail:WorkspaceImpossibleTravelEmail",
                    "description": "Configures the impossible travel email.\n"
                },
                "lockoutPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceLockoutPolicy:WorkspaceLockoutPolicy",
                    "description": "Configures the user lockout policy.\n"
                },
                "magicCodeEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMagicCodeEmail:WorkspaceMagicCodeEmail",
                    "description": "Configures the one time code email.\n"
                },
                "magicLinkEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMagicLinkEmail:WorkspaceMagicLinkEmail",
                    "description": "Configures the magic link email.\n"
                },
                "mfaAuthenticationApp": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaAuthenticationApp:WorkspaceMfaAuthenticationApp",
                    "description": "Configures the multi-factor authentication (MFA) via an authentication app.\n"
                },
                "mfaEnrollEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaEnrollEmail:WorkspaceMfaEnrollEmail",
                    "description": "Configures the MFA enroll email.\n"
                },
                "mfaOtcEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaOtcEmail:WorkspaceMfaOtcEmail",
                    "description": "Configures the account challenge with code email.\n"
                },
                "mfaPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaPolicy:WorkspaceMfaPolicy",
                    "description": "Configures the multi-factor authentication (MFA) policy.\n"
                },
                "mfaRecoveryCodeEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaRecoveryCodeEmail:WorkspaceMfaRecoveryCodeEmail",
                    "description": "Configures the MFA recovery code email.\n"
                },
                "mfaUnenrollEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaUnenrollEmail:WorkspaceMfaUnenrollEmail",
                    "description": "Configures the MFA unenroll email.\n"
                },
                "microsoftSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceMicrosoftSocialLogin:WorkspaceMicrosoftSocialLogin",
                    "description": "Configures social login with Google.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workspace.\n"
                },
                "newDeviceConnectedEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceNewDeviceConnectedEmail:WorkspaceNewDeviceConnectedEmail",
                    "description": "Configures the new device connected email.\n"
                },
                "newMfaMethodEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceNewMfaMethodEmail:WorkspaceNewMfaMethodEmail",
                    "description": "Configures the new MFA method email.\n"
                },
                "oidc": {
                    "$ref": "#/types/frontegg:index/WorkspaceOidc:WorkspaceOidc",
                    "description": "Configures SSO via OIDC.\n"
                },
                "openSaasInstalled": {
                    "type": "boolean",
                    "description": "Whether the application associated with the workspace has OpenSaaS installed.\n"
                },
                "passwordPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspacePasswordPolicy:WorkspacePasswordPolicy",
                    "description": "Configures the password policy.\n"
                },
                "pwnedPasswordEmail": {
                    "$ref": "#/types/frontegg:index/WorkspacePwnedPasswordEmail:WorkspacePwnedPasswordEmail",
                    "description": "Configures the pwned password email.\n"
                },
                "removeMfaMethodEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceRemoveMfaMethodEmail:WorkspaceRemoveMfaMethodEmail",
                    "description": "Configures the remove MFA method email.\n"
                },
                "resetPasswordEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceResetPasswordEmail:WorkspaceResetPasswordEmail",
                    "description": "Configures the password reset email.\n"
                },
                "resetPhoneNumberEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceResetPhoneNumberEmail:WorkspaceResetPhoneNumberEmail",
                    "description": "Configures the reset phone number email.\n"
                },
                "saml": {
                    "$ref": "#/types/frontegg:index/WorkspaceSaml:WorkspaceSaml",
                    "description": "Configures SSO via SAML.\n"
                },
                "smsAuthenticationEnabledEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceSmsAuthenticationEnabledEmail:WorkspaceSmsAuthenticationEnabledEmail",
                    "description": "Configures the SMS authentication enabled email.\n"
                },
                "ssoDomainPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceSsoDomainPolicy:WorkspaceSsoDomainPolicy",
                    "description": "Configures how SSO domains are validated.\n"
                },
                "ssoMultiTenantPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceSsoMultiTenantPolicy:WorkspaceSsoMultiTenantPolicy",
                    "description": "Configures how multiple tenants can claim the same SSO domain.\n"
                },
                "suspiciousIpEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceSuspiciousIpEmail:WorkspaceSuspiciousIpEmail",
                    "description": "Configures the suspicious IP email.\n"
                },
                "userActivationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserActivationEmail:WorkspaceUserActivationEmail",
                    "description": "Configures the user activation email.\n"
                },
                "userInvitationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserInvitationEmail:WorkspaceUserInvitationEmail",
                    "description": "Configures the user invitation email.\n"
                },
                "userUsedInvitationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserUsedInvitationEmail:WorkspaceUserUsedInvitationEmail",
                    "description": "Configures the user used invitation email.\n"
                }
            },
            "required": [
                "adminPortal",
                "allowedOrigins",
                "authPolicy",
                "backendStack",
                "country",
                "fronteggDomain",
                "frontendStack",
                "mfaPolicy",
                "name",
                "openSaasInstalled",
                "passwordPolicy"
            ],
            "inputProperties": {
                "adminPortal": {
                    "$ref": "#/types/frontegg:index/WorkspaceAdminPortal:WorkspaceAdminPortal",
                    "description": "Configures the admin portal.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The origins that are allowed to access the workspace. This parameter controls the value of the \"Origin\" header for API\nresponses.\n"
                },
                "authPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceAuthPolicy:WorkspaceAuthPolicy",
                    "description": "Configures the general authentication policy.\n"
                },
                "backendStack": {
                    "type": "string",
                    "description": "The backend stack of the application associated with the workspace.\n"
                },
                "botDetectionEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBotDetectionEmail:WorkspaceBotDetectionEmail",
                    "description": "Configures the bot detection email.\n"
                },
                "bruteForceProtectionEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBruteForceProtectionEmail:WorkspaceBruteForceProtectionEmail",
                    "description": "Configures the brute force protection email.\n"
                },
                "bulkTenantsInvitesEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceBulkTenantsInvitesEmail:WorkspaceBulkTenantsInvitesEmail",
                    "description": "Configures the bulk tenants invite email.\n"
                },
                "captchaPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceCaptchaPolicy:WorkspaceCaptchaPolicy",
                    "description": "Configures the CAPTCHA policy in the signup form.\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country associated with the workspace.\n"
                },
                "customDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of custom domains at which Frontegg services will be reachable. You must configure CNAME for each domain, you can\nget record values from the portal.\n"
                },
                "emailVerificationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceEmailVerificationEmail:WorkspaceEmailVerificationEmail",
                    "description": "Configures the verification email.\n"
                },
                "facebookSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceFacebookSocialLogin:WorkspaceFacebookSocialLogin",
                    "description": "Configures social login with Facebook.\n"
                },
                "fronteggDomain": {
                    "type": "string",
                    "description": "The domain at which the Frontegg API is served for this workspace. The domain must end with \".frontegg.com\" or\n\".us.frontegg.com\".\n"
                },
                "frontendStack": {
                    "type": "string",
                    "description": "The frontend stack of the application associated with the worksapce.\n"
                },
                "githubSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceGithubSocialLogin:WorkspaceGithubSocialLogin",
                    "description": "Configures social login with GitHub.\n"
                },
                "googleSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceGoogleSocialLogin:WorkspaceGoogleSocialLogin",
                    "description": "Configures social login with Google.\n"
                },
                "hostedLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceHostedLogin:WorkspaceHostedLogin",
                    "description": "Configures Frontegg-hosted OAuth login.\n"
                },
                "impossibleTravelEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceImpossibleTravelEmail:WorkspaceImpossibleTravelEmail",
                    "description": "Configures the impossible travel email.\n"
                },
                "lockoutPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceLockoutPolicy:WorkspaceLockoutPolicy",
                    "description": "Configures the user lockout policy.\n"
                },
                "magicCodeEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMagicCodeEmail:WorkspaceMagicCodeEmail",
                    "description": "Configures the one time code email.\n"
                },
                "magicLinkEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMagicLinkEmail:WorkspaceMagicLinkEmail",
                    "description": "Configures the magic link email.\n"
                },
                "mfaAuthenticationApp": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaAuthenticationApp:WorkspaceMfaAuthenticationApp",
                    "description": "Configures the multi-factor authentication (MFA) via an authentication app.\n"
                },
                "mfaEnrollEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaEnrollEmail:WorkspaceMfaEnrollEmail",
                    "description": "Configures the MFA enroll email.\n"
                },
                "mfaOtcEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaOtcEmail:WorkspaceMfaOtcEmail",
                    "description": "Configures the account challenge with code email.\n"
                },
                "mfaPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaPolicy:WorkspaceMfaPolicy",
                    "description": "Configures the multi-factor authentication (MFA) policy.\n"
                },
                "mfaRecoveryCodeEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaRecoveryCodeEmail:WorkspaceMfaRecoveryCodeEmail",
                    "description": "Configures the MFA recovery code email.\n"
                },
                "mfaUnenrollEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceMfaUnenrollEmail:WorkspaceMfaUnenrollEmail",
                    "description": "Configures the MFA unenroll email.\n"
                },
                "microsoftSocialLogin": {
                    "$ref": "#/types/frontegg:index/WorkspaceMicrosoftSocialLogin:WorkspaceMicrosoftSocialLogin",
                    "description": "Configures social login with Google.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the workspace.\n"
                },
                "newDeviceConnectedEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceNewDeviceConnectedEmail:WorkspaceNewDeviceConnectedEmail",
                    "description": "Configures the new device connected email.\n"
                },
                "newMfaMethodEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceNewMfaMethodEmail:WorkspaceNewMfaMethodEmail",
                    "description": "Configures the new MFA method email.\n"
                },
                "oidc": {
                    "$ref": "#/types/frontegg:index/WorkspaceOidc:WorkspaceOidc",
                    "description": "Configures SSO via OIDC.\n"
                },
                "openSaasInstalled": {
                    "type": "boolean",
                    "description": "Whether the application associated with the workspace has OpenSaaS installed.\n"
                },
                "passwordPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspacePasswordPolicy:WorkspacePasswordPolicy",
                    "description": "Configures the password policy.\n"
                },
                "pwnedPasswordEmail": {
                    "$ref": "#/types/frontegg:index/WorkspacePwnedPasswordEmail:WorkspacePwnedPasswordEmail",
                    "description": "Configures the pwned password email.\n"
                },
                "removeMfaMethodEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceRemoveMfaMethodEmail:WorkspaceRemoveMfaMethodEmail",
                    "description": "Configures the remove MFA method email.\n"
                },
                "resetPasswordEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceResetPasswordEmail:WorkspaceResetPasswordEmail",
                    "description": "Configures the password reset email.\n"
                },
                "resetPhoneNumberEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceResetPhoneNumberEmail:WorkspaceResetPhoneNumberEmail",
                    "description": "Configures the reset phone number email.\n"
                },
                "saml": {
                    "$ref": "#/types/frontegg:index/WorkspaceSaml:WorkspaceSaml",
                    "description": "Configures SSO via SAML.\n"
                },
                "smsAuthenticationEnabledEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceSmsAuthenticationEnabledEmail:WorkspaceSmsAuthenticationEnabledEmail",
                    "description": "Configures the SMS authentication enabled email.\n"
                },
                "ssoDomainPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceSsoDomainPolicy:WorkspaceSsoDomainPolicy",
                    "description": "Configures how SSO domains are validated.\n"
                },
                "ssoMultiTenantPolicy": {
                    "$ref": "#/types/frontegg:index/WorkspaceSsoMultiTenantPolicy:WorkspaceSsoMultiTenantPolicy",
                    "description": "Configures how multiple tenants can claim the same SSO domain.\n"
                },
                "suspiciousIpEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceSuspiciousIpEmail:WorkspaceSuspiciousIpEmail",
                    "description": "Configures the suspicious IP email.\n"
                },
                "userActivationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserActivationEmail:WorkspaceUserActivationEmail",
                    "description": "Configures the user activation email.\n"
                },
                "userInvitationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserInvitationEmail:WorkspaceUserInvitationEmail",
                    "description": "Configures the user invitation email.\n"
                },
                "userUsedInvitationEmail": {
                    "$ref": "#/types/frontegg:index/WorkspaceUserUsedInvitationEmail:WorkspaceUserUsedInvitationEmail",
                    "description": "Configures the user used invitation email.\n"
                }
            },
            "requiredInputs": [
                "adminPortal",
                "allowedOrigins",
                "authPolicy",
                "backendStack",
                "country",
                "fronteggDomain",
                "frontendStack",
                "mfaPolicy",
                "openSaasInstalled",
                "passwordPolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Workspace resources.\n",
                "properties": {
                    "adminPortal": {
                        "$ref": "#/types/frontegg:index/WorkspaceAdminPortal:WorkspaceAdminPortal",
                        "description": "Configures the admin portal.\n"
                    },
                    "allowedOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The origins that are allowed to access the workspace. This parameter controls the value of the \"Origin\" header for API\nresponses.\n"
                    },
                    "authPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceAuthPolicy:WorkspaceAuthPolicy",
                        "description": "Configures the general authentication policy.\n"
                    },
                    "backendStack": {
                        "type": "string",
                        "description": "The backend stack of the application associated with the workspace.\n"
                    },
                    "botDetectionEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceBotDetectionEmail:WorkspaceBotDetectionEmail",
                        "description": "Configures the bot detection email.\n"
                    },
                    "bruteForceProtectionEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceBruteForceProtectionEmail:WorkspaceBruteForceProtectionEmail",
                        "description": "Configures the brute force protection email.\n"
                    },
                    "bulkTenantsInvitesEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceBulkTenantsInvitesEmail:WorkspaceBulkTenantsInvitesEmail",
                        "description": "Configures the bulk tenants invite email.\n"
                    },
                    "captchaPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceCaptchaPolicy:WorkspaceCaptchaPolicy",
                        "description": "Configures the CAPTCHA policy in the signup form.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country associated with the workspace.\n"
                    },
                    "customDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of custom domains at which Frontegg services will be reachable. You must configure CNAME for each domain, you can\nget record values from the portal.\n"
                    },
                    "emailVerificationEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceEmailVerificationEmail:WorkspaceEmailVerificationEmail",
                        "description": "Configures the verification email.\n"
                    },
                    "facebookSocialLogin": {
                        "$ref": "#/types/frontegg:index/WorkspaceFacebookSocialLogin:WorkspaceFacebookSocialLogin",
                        "description": "Configures social login with Facebook.\n"
                    },
                    "fronteggDomain": {
                        "type": "string",
                        "description": "The domain at which the Frontegg API is served for this workspace. The domain must end with \".frontegg.com\" or\n\".us.frontegg.com\".\n"
                    },
                    "frontendStack": {
                        "type": "string",
                        "description": "The frontend stack of the application associated with the worksapce.\n"
                    },
                    "githubSocialLogin": {
                        "$ref": "#/types/frontegg:index/WorkspaceGithubSocialLogin:WorkspaceGithubSocialLogin",
                        "description": "Configures social login with GitHub.\n"
                    },
                    "googleSocialLogin": {
                        "$ref": "#/types/frontegg:index/WorkspaceGoogleSocialLogin:WorkspaceGoogleSocialLogin",
                        "description": "Configures social login with Google.\n"
                    },
                    "hostedLogin": {
                        "$ref": "#/types/frontegg:index/WorkspaceHostedLogin:WorkspaceHostedLogin",
                        "description": "Configures Frontegg-hosted OAuth login.\n"
                    },
                    "impossibleTravelEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceImpossibleTravelEmail:WorkspaceImpossibleTravelEmail",
                        "description": "Configures the impossible travel email.\n"
                    },
                    "lockoutPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceLockoutPolicy:WorkspaceLockoutPolicy",
                        "description": "Configures the user lockout policy.\n"
                    },
                    "magicCodeEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMagicCodeEmail:WorkspaceMagicCodeEmail",
                        "description": "Configures the one time code email.\n"
                    },
                    "magicLinkEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMagicLinkEmail:WorkspaceMagicLinkEmail",
                        "description": "Configures the magic link email.\n"
                    },
                    "mfaAuthenticationApp": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaAuthenticationApp:WorkspaceMfaAuthenticationApp",
                        "description": "Configures the multi-factor authentication (MFA) via an authentication app.\n"
                    },
                    "mfaEnrollEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaEnrollEmail:WorkspaceMfaEnrollEmail",
                        "description": "Configures the MFA enroll email.\n"
                    },
                    "mfaOtcEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaOtcEmail:WorkspaceMfaOtcEmail",
                        "description": "Configures the account challenge with code email.\n"
                    },
                    "mfaPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaPolicy:WorkspaceMfaPolicy",
                        "description": "Configures the multi-factor authentication (MFA) policy.\n"
                    },
                    "mfaRecoveryCodeEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaRecoveryCodeEmail:WorkspaceMfaRecoveryCodeEmail",
                        "description": "Configures the MFA recovery code email.\n"
                    },
                    "mfaUnenrollEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceMfaUnenrollEmail:WorkspaceMfaUnenrollEmail",
                        "description": "Configures the MFA unenroll email.\n"
                    },
                    "microsoftSocialLogin": {
                        "$ref": "#/types/frontegg:index/WorkspaceMicrosoftSocialLogin:WorkspaceMicrosoftSocialLogin",
                        "description": "Configures social login with Google.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workspace.\n"
                    },
                    "newDeviceConnectedEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceNewDeviceConnectedEmail:WorkspaceNewDeviceConnectedEmail",
                        "description": "Configures the new device connected email.\n"
                    },
                    "newMfaMethodEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceNewMfaMethodEmail:WorkspaceNewMfaMethodEmail",
                        "description": "Configures the new MFA method email.\n"
                    },
                    "oidc": {
                        "$ref": "#/types/frontegg:index/WorkspaceOidc:WorkspaceOidc",
                        "description": "Configures SSO via OIDC.\n"
                    },
                    "openSaasInstalled": {
                        "type": "boolean",
                        "description": "Whether the application associated with the workspace has OpenSaaS installed.\n"
                    },
                    "passwordPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspacePasswordPolicy:WorkspacePasswordPolicy",
                        "description": "Configures the password policy.\n"
                    },
                    "pwnedPasswordEmail": {
                        "$ref": "#/types/frontegg:index/WorkspacePwnedPasswordEmail:WorkspacePwnedPasswordEmail",
                        "description": "Configures the pwned password email.\n"
                    },
                    "removeMfaMethodEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceRemoveMfaMethodEmail:WorkspaceRemoveMfaMethodEmail",
                        "description": "Configures the remove MFA method email.\n"
                    },
                    "resetPasswordEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceResetPasswordEmail:WorkspaceResetPasswordEmail",
                        "description": "Configures the password reset email.\n"
                    },
                    "resetPhoneNumberEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceResetPhoneNumberEmail:WorkspaceResetPhoneNumberEmail",
                        "description": "Configures the reset phone number email.\n"
                    },
                    "saml": {
                        "$ref": "#/types/frontegg:index/WorkspaceSaml:WorkspaceSaml",
                        "description": "Configures SSO via SAML.\n"
                    },
                    "smsAuthenticationEnabledEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceSmsAuthenticationEnabledEmail:WorkspaceSmsAuthenticationEnabledEmail",
                        "description": "Configures the SMS authentication enabled email.\n"
                    },
                    "ssoDomainPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceSsoDomainPolicy:WorkspaceSsoDomainPolicy",
                        "description": "Configures how SSO domains are validated.\n"
                    },
                    "ssoMultiTenantPolicy": {
                        "$ref": "#/types/frontegg:index/WorkspaceSsoMultiTenantPolicy:WorkspaceSsoMultiTenantPolicy",
                        "description": "Configures how multiple tenants can claim the same SSO domain.\n"
                    },
                    "suspiciousIpEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceSuspiciousIpEmail:WorkspaceSuspiciousIpEmail",
                        "description": "Configures the suspicious IP email.\n"
                    },
                    "userActivationEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceUserActivationEmail:WorkspaceUserActivationEmail",
                        "description": "Configures the user activation email.\n"
                    },
                    "userInvitationEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceUserInvitationEmail:WorkspaceUserInvitationEmail",
                        "description": "Configures the user invitation email.\n"
                    },
                    "userUsedInvitationEmail": {
                        "$ref": "#/types/frontegg:index/WorkspaceUserUsedInvitationEmail:WorkspaceUserUsedInvitationEmail",
                        "description": "Configures the user used invitation email.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "frontegg:index/getPermission:getPermission": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as frontegg from \"@pulumi/frontegg\";\n\nconst readUsers = frontegg.getPermission({\n    key: \"fe.secure.read.users\",\n});\nexport const permissionId = readUsers.then(readUsers =\u003e readUsers.id);\n```\n```python\nimport pulumi\nimport pulumi_frontegg as frontegg\n\nread_users = frontegg.get_permission(key=\"fe.secure.read.users\")\npulumi.export(\"permissionId\", read_users.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Frontegg = Pulumi.Frontegg;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var readUsers = Frontegg.GetPermission.Invoke(new()\n    {\n        Key = \"fe.secure.read.users\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"permissionId\"] = readUsers.Apply(getPermissionResult =\u003e getPermissionResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treadUsers, err := frontegg.LookupPermission(ctx, \u0026frontegg.LookupPermissionArgs{\n\t\t\tKey: \"fe.secure.read.users\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"permissionId\", readUsers.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.frontegg.FronteggFunctions;\nimport com.pulumi.frontegg.inputs.GetPermissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var readUsers = FronteggFunctions.getPermission(GetPermissionArgs.builder()\n            .key(\"fe.secure.read.users\")\n            .build());\n\n        ctx.export(\"permissionId\", readUsers.applyValue(getPermissionResult -\u003e getPermissionResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  readUsers:\n    fn::invoke:\n      function: frontegg:getPermission\n      arguments:\n        key: fe.secure.read.users\noutputs:\n  permissionId: ${readUsers.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPermission.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "A human-readable identifier for the permission.\n"
                    }
                },
                "type": "object",
                "required": [
                    "key"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPermission.\n",
                "properties": {
                    "categoryId": {
                        "description": "The identifier of the category to which this permission belongs.\n",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "The timestamp at which the permission was created.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "A human-readable description of the permission.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "key": {
                        "description": "A human-readable identifier for the permission.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "A human-readable name for the permission.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "categoryId",
                    "createdAt",
                    "description",
                    "key",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}