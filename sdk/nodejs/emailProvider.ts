// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configures a Frontegg Email provider.
 */
export class EmailProvider extends pulumi.CustomResource {
    /**
     * Get an existing EmailProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailProviderState, opts?: pulumi.CustomResourceOptions): EmailProvider {
        return new EmailProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'frontegg:index/emailProvider:EmailProvider';

    /**
     * Returns true if the given object is an instance of EmailProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailProvider.__pulumiType;
    }

    /**
     * The timestamp at which the permission was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Required for Mailgun (required only for Mailgun).
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * Provider ID (required only for AWS SES).
     */
    public readonly providerId!: pulumi.Output<string | undefined>;
    /**
     * Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
     */
    public readonly providerName!: pulumi.Output<string>;
    /**
     * Required for AWS SES or Mailgun.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * A secret to be included with the event.
     */
    public readonly secret!: pulumi.Output<string>;
    /**
     * The timestamp at which the permission was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a EmailProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailProviderArgs | EmailProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailProviderState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["providerId"] = state ? state.providerId : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as EmailProviderArgs | undefined;
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            if ((!args || args.secret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secret'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["providerId"] = args ? args.providerId : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailProvider resources.
 */
export interface EmailProviderState {
    /**
     * The timestamp at which the permission was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Required for Mailgun (required only for Mailgun).
     */
    domain?: pulumi.Input<string>;
    /**
     * Provider ID (required only for AWS SES).
     */
    providerId?: pulumi.Input<string>;
    /**
     * Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
     */
    providerName?: pulumi.Input<string>;
    /**
     * Required for AWS SES or Mailgun.
     */
    region?: pulumi.Input<string>;
    /**
     * A secret to be included with the event.
     */
    secret?: pulumi.Input<string>;
    /**
     * The timestamp at which the permission was updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmailProvider resource.
 */
export interface EmailProviderArgs {
    /**
     * Required for Mailgun (required only for Mailgun).
     */
    domain?: pulumi.Input<string>;
    /**
     * Provider ID (required only for AWS SES).
     */
    providerId?: pulumi.Input<string>;
    /**
     * Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
     */
    providerName: pulumi.Input<string>;
    /**
     * Required for AWS SES or Mailgun.
     */
    region?: pulumi.Input<string>;
    /**
     * A secret to be included with the event.
     */
    secret: pulumi.Input<string>;
}
