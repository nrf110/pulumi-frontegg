// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package frontegg

import (
	"context"
	"reflect"

	"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type WorkspaceAdminPortal struct {
	// Enable access to account settings in the admin portal.
	EnableAccountSettings bool `pulumi:"enableAccountSettings"`
	// Enable access to API tokens in the admin portal.
	EnableApiTokens bool `pulumi:"enableApiTokens"`
	// Enable access to audit logs in the admin portal.
	EnableAuditLogs bool `pulumi:"enableAuditLogs"`
	// Enable access to groups in the admin portal.
	EnableGroups bool `pulumi:"enableGroups"`
	// Enable access to personal API tokens in the admin portal.
	EnablePersonalApiTokens bool `pulumi:"enablePersonalApiTokens"`
	// Enable access to privacy settings in the admin portal.
	EnablePrivacy bool `pulumi:"enablePrivacy"`
	// Enable access to profile settings in the admin portal.
	EnableProfile bool `pulumi:"enableProfile"`
	// Enable access to provisioning settings in the admin portal.
	EnableProvisioning bool `pulumi:"enableProvisioning"`
	// Enable access to roles and permissions in the admin portal.
	EnableRoles bool `pulumi:"enableRoles"`
	// Enable access to security settings in the admin portal.
	EnableSecurity bool `pulumi:"enableSecurity"`
	// Enable access to SSO settings in the admin portal.
	EnableSso bool `pulumi:"enableSso"`
	// Enable access to subscription settings in the admin portal.
	EnableSubscriptions bool `pulumi:"enableSubscriptions"`
	// Enable access to usage information in the admin portal.
	EnableUsage bool `pulumi:"enableUsage"`
	// Enable access to user management in the admin portal.
	EnableUsers bool `pulumi:"enableUsers"`
	// Enable access to webhooks in the admin portal.
	EnableWebhooks bool `pulumi:"enableWebhooks"`
	// Configures the color palette for the admin portal.
	//
	// Deprecated: Use `paletteAdminPortal Or/And paletteLoginBox` instead.
	Palette *WorkspaceAdminPortalPalette `pulumi:"palette"`
	// Configures the color palette for the admin portal.
	PaletteAdminPortal *WorkspaceAdminPortalPaletteAdminPortal `pulumi:"paletteAdminPortal"`
	// Configures the color palette for the admin portal.
	PaletteLoginBox *WorkspaceAdminPortalPaletteLoginBox `pulumi:"paletteLoginBox"`
}

// WorkspaceAdminPortalInput is an input type that accepts WorkspaceAdminPortalArgs and WorkspaceAdminPortalOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalInput` via:
//
//	WorkspaceAdminPortalArgs{...}
type WorkspaceAdminPortalInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalOutput() WorkspaceAdminPortalOutput
	ToWorkspaceAdminPortalOutputWithContext(context.Context) WorkspaceAdminPortalOutput
}

type WorkspaceAdminPortalArgs struct {
	// Enable access to account settings in the admin portal.
	EnableAccountSettings pulumi.BoolInput `pulumi:"enableAccountSettings"`
	// Enable access to API tokens in the admin portal.
	EnableApiTokens pulumi.BoolInput `pulumi:"enableApiTokens"`
	// Enable access to audit logs in the admin portal.
	EnableAuditLogs pulumi.BoolInput `pulumi:"enableAuditLogs"`
	// Enable access to groups in the admin portal.
	EnableGroups pulumi.BoolInput `pulumi:"enableGroups"`
	// Enable access to personal API tokens in the admin portal.
	EnablePersonalApiTokens pulumi.BoolInput `pulumi:"enablePersonalApiTokens"`
	// Enable access to privacy settings in the admin portal.
	EnablePrivacy pulumi.BoolInput `pulumi:"enablePrivacy"`
	// Enable access to profile settings in the admin portal.
	EnableProfile pulumi.BoolInput `pulumi:"enableProfile"`
	// Enable access to provisioning settings in the admin portal.
	EnableProvisioning pulumi.BoolInput `pulumi:"enableProvisioning"`
	// Enable access to roles and permissions in the admin portal.
	EnableRoles pulumi.BoolInput `pulumi:"enableRoles"`
	// Enable access to security settings in the admin portal.
	EnableSecurity pulumi.BoolInput `pulumi:"enableSecurity"`
	// Enable access to SSO settings in the admin portal.
	EnableSso pulumi.BoolInput `pulumi:"enableSso"`
	// Enable access to subscription settings in the admin portal.
	EnableSubscriptions pulumi.BoolInput `pulumi:"enableSubscriptions"`
	// Enable access to usage information in the admin portal.
	EnableUsage pulumi.BoolInput `pulumi:"enableUsage"`
	// Enable access to user management in the admin portal.
	EnableUsers pulumi.BoolInput `pulumi:"enableUsers"`
	// Enable access to webhooks in the admin portal.
	EnableWebhooks pulumi.BoolInput `pulumi:"enableWebhooks"`
	// Configures the color palette for the admin portal.
	//
	// Deprecated: Use `paletteAdminPortal Or/And paletteLoginBox` instead.
	Palette WorkspaceAdminPortalPalettePtrInput `pulumi:"palette"`
	// Configures the color palette for the admin portal.
	PaletteAdminPortal WorkspaceAdminPortalPaletteAdminPortalPtrInput `pulumi:"paletteAdminPortal"`
	// Configures the color palette for the admin portal.
	PaletteLoginBox WorkspaceAdminPortalPaletteLoginBoxPtrInput `pulumi:"paletteLoginBox"`
}

func (WorkspaceAdminPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortal)(nil)).Elem()
}

func (i WorkspaceAdminPortalArgs) ToWorkspaceAdminPortalOutput() WorkspaceAdminPortalOutput {
	return i.ToWorkspaceAdminPortalOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalArgs) ToWorkspaceAdminPortalOutputWithContext(ctx context.Context) WorkspaceAdminPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalOutput)
}

func (i WorkspaceAdminPortalArgs) ToWorkspaceAdminPortalPtrOutput() WorkspaceAdminPortalPtrOutput {
	return i.ToWorkspaceAdminPortalPtrOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalArgs) ToWorkspaceAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalOutput).ToWorkspaceAdminPortalPtrOutputWithContext(ctx)
}

// WorkspaceAdminPortalPtrInput is an input type that accepts WorkspaceAdminPortalArgs, WorkspaceAdminPortalPtr and WorkspaceAdminPortalPtrOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPtrInput` via:
//
//	        WorkspaceAdminPortalArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAdminPortalPtrInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPtrOutput() WorkspaceAdminPortalPtrOutput
	ToWorkspaceAdminPortalPtrOutputWithContext(context.Context) WorkspaceAdminPortalPtrOutput
}

type workspaceAdminPortalPtrType WorkspaceAdminPortalArgs

func WorkspaceAdminPortalPtr(v *WorkspaceAdminPortalArgs) WorkspaceAdminPortalPtrInput {
	return (*workspaceAdminPortalPtrType)(v)
}

func (*workspaceAdminPortalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortal)(nil)).Elem()
}

func (i *workspaceAdminPortalPtrType) ToWorkspaceAdminPortalPtrOutput() WorkspaceAdminPortalPtrOutput {
	return i.ToWorkspaceAdminPortalPtrOutputWithContext(context.Background())
}

func (i *workspaceAdminPortalPtrType) ToWorkspaceAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPtrOutput)
}

type WorkspaceAdminPortalOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortal)(nil)).Elem()
}

func (o WorkspaceAdminPortalOutput) ToWorkspaceAdminPortalOutput() WorkspaceAdminPortalOutput {
	return o
}

func (o WorkspaceAdminPortalOutput) ToWorkspaceAdminPortalOutputWithContext(ctx context.Context) WorkspaceAdminPortalOutput {
	return o
}

func (o WorkspaceAdminPortalOutput) ToWorkspaceAdminPortalPtrOutput() WorkspaceAdminPortalPtrOutput {
	return o.ToWorkspaceAdminPortalPtrOutputWithContext(context.Background())
}

func (o WorkspaceAdminPortalOutput) ToWorkspaceAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAdminPortal) *WorkspaceAdminPortal {
		return &v
	}).(WorkspaceAdminPortalPtrOutput)
}

// Enable access to account settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableAccountSettings() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableAccountSettings }).(pulumi.BoolOutput)
}

// Enable access to API tokens in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableApiTokens() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableApiTokens }).(pulumi.BoolOutput)
}

// Enable access to audit logs in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableAuditLogs() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableAuditLogs }).(pulumi.BoolOutput)
}

// Enable access to groups in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableGroups }).(pulumi.BoolOutput)
}

// Enable access to personal API tokens in the admin portal.
func (o WorkspaceAdminPortalOutput) EnablePersonalApiTokens() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnablePersonalApiTokens }).(pulumi.BoolOutput)
}

// Enable access to privacy settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnablePrivacy() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnablePrivacy }).(pulumi.BoolOutput)
}

// Enable access to profile settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableProfile }).(pulumi.BoolOutput)
}

// Enable access to provisioning settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableProvisioning() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableProvisioning }).(pulumi.BoolOutput)
}

// Enable access to roles and permissions in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableRoles() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableRoles }).(pulumi.BoolOutput)
}

// Enable access to security settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableSecurity }).(pulumi.BoolOutput)
}

// Enable access to SSO settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableSso() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableSso }).(pulumi.BoolOutput)
}

// Enable access to subscription settings in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableSubscriptions() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableSubscriptions }).(pulumi.BoolOutput)
}

// Enable access to usage information in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableUsage() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableUsage }).(pulumi.BoolOutput)
}

// Enable access to user management in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableUsers }).(pulumi.BoolOutput)
}

// Enable access to webhooks in the admin portal.
func (o WorkspaceAdminPortalOutput) EnableWebhooks() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) bool { return v.EnableWebhooks }).(pulumi.BoolOutput)
}

// Configures the color palette for the admin portal.
//
// Deprecated: Use `paletteAdminPortal Or/And paletteLoginBox` instead.
func (o WorkspaceAdminPortalOutput) Palette() WorkspaceAdminPortalPalettePtrOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) *WorkspaceAdminPortalPalette { return v.Palette }).(WorkspaceAdminPortalPalettePtrOutput)
}

// Configures the color palette for the admin portal.
func (o WorkspaceAdminPortalOutput) PaletteAdminPortal() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) *WorkspaceAdminPortalPaletteAdminPortal { return v.PaletteAdminPortal }).(WorkspaceAdminPortalPaletteAdminPortalPtrOutput)
}

// Configures the color palette for the admin portal.
func (o WorkspaceAdminPortalOutput) PaletteLoginBox() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o.ApplyT(func(v WorkspaceAdminPortal) *WorkspaceAdminPortalPaletteLoginBox { return v.PaletteLoginBox }).(WorkspaceAdminPortalPaletteLoginBoxPtrOutput)
}

type WorkspaceAdminPortalPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortal)(nil)).Elem()
}

func (o WorkspaceAdminPortalPtrOutput) ToWorkspaceAdminPortalPtrOutput() WorkspaceAdminPortalPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPtrOutput) ToWorkspaceAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPtrOutput) Elem() WorkspaceAdminPortalOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) WorkspaceAdminPortal {
		if v != nil {
			return *v
		}
		var ret WorkspaceAdminPortal
		return ret
	}).(WorkspaceAdminPortalOutput)
}

// Enable access to account settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableAccountSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAccountSettings
	}).(pulumi.BoolPtrOutput)
}

// Enable access to API tokens in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableApiTokens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableApiTokens
	}).(pulumi.BoolPtrOutput)
}

// Enable access to audit logs in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableAuditLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAuditLogs
	}).(pulumi.BoolPtrOutput)
}

// Enable access to groups in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableGroups
	}).(pulumi.BoolPtrOutput)
}

// Enable access to personal API tokens in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnablePersonalApiTokens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnablePersonalApiTokens
	}).(pulumi.BoolPtrOutput)
}

// Enable access to privacy settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnablePrivacy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnablePrivacy
	}).(pulumi.BoolPtrOutput)
}

// Enable access to profile settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableProfile
	}).(pulumi.BoolPtrOutput)
}

// Enable access to provisioning settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableProvisioning
	}).(pulumi.BoolPtrOutput)
}

// Enable access to roles and permissions in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableRoles
	}).(pulumi.BoolPtrOutput)
}

// Enable access to security settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableSecurity
	}).(pulumi.BoolPtrOutput)
}

// Enable access to SSO settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableSso() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableSso
	}).(pulumi.BoolPtrOutput)
}

// Enable access to subscription settings in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableSubscriptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableSubscriptions
	}).(pulumi.BoolPtrOutput)
}

// Enable access to usage information in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableUsage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableUsage
	}).(pulumi.BoolPtrOutput)
}

// Enable access to user management in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableUsers
	}).(pulumi.BoolPtrOutput)
}

// Enable access to webhooks in the admin portal.
func (o WorkspaceAdminPortalPtrOutput) EnableWebhooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableWebhooks
	}).(pulumi.BoolPtrOutput)
}

// Configures the color palette for the admin portal.
//
// Deprecated: Use `paletteAdminPortal Or/And paletteLoginBox` instead.
func (o WorkspaceAdminPortalPtrOutput) Palette() WorkspaceAdminPortalPalettePtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *WorkspaceAdminPortalPalette {
		if v == nil {
			return nil
		}
		return v.Palette
	}).(WorkspaceAdminPortalPalettePtrOutput)
}

// Configures the color palette for the admin portal.
func (o WorkspaceAdminPortalPtrOutput) PaletteAdminPortal() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *WorkspaceAdminPortalPaletteAdminPortal {
		if v == nil {
			return nil
		}
		return v.PaletteAdminPortal
	}).(WorkspaceAdminPortalPaletteAdminPortalPtrOutput)
}

// Configures the color palette for the admin portal.
func (o WorkspaceAdminPortalPtrOutput) PaletteLoginBox() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortal) *WorkspaceAdminPortalPaletteLoginBox {
		if v == nil {
			return nil
		}
		return v.PaletteLoginBox
	}).(WorkspaceAdminPortalPaletteLoginBoxPtrOutput)
}

type WorkspaceAdminPortalPalette struct {
	// Error color.
	Errors []WorkspaceAdminPortalPaletteError `pulumi:"errors"`
	// Info color.
	Infos []WorkspaceAdminPortalPaletteInfo `pulumi:"infos"`
	// Primary color.
	Primaries []WorkspaceAdminPortalPalettePrimary `pulumi:"primaries"`
	// Secondary color.
	Secondaries []WorkspaceAdminPortalPaletteSecondary `pulumi:"secondaries"`
	// Success color.
	Successes []WorkspaceAdminPortalPaletteSuccess `pulumi:"successes"`
	// Warning color.
	Warnings []WorkspaceAdminPortalPaletteWarning `pulumi:"warnings"`
}

// WorkspaceAdminPortalPaletteInput is an input type that accepts WorkspaceAdminPortalPaletteArgs and WorkspaceAdminPortalPaletteOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteInput` via:
//
//	WorkspaceAdminPortalPaletteArgs{...}
type WorkspaceAdminPortalPaletteInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteOutput() WorkspaceAdminPortalPaletteOutput
	ToWorkspaceAdminPortalPaletteOutputWithContext(context.Context) WorkspaceAdminPortalPaletteOutput
}

type WorkspaceAdminPortalPaletteArgs struct {
	// Error color.
	Errors WorkspaceAdminPortalPaletteErrorArrayInput `pulumi:"errors"`
	// Info color.
	Infos WorkspaceAdminPortalPaletteInfoArrayInput `pulumi:"infos"`
	// Primary color.
	Primaries WorkspaceAdminPortalPalettePrimaryArrayInput `pulumi:"primaries"`
	// Secondary color.
	Secondaries WorkspaceAdminPortalPaletteSecondaryArrayInput `pulumi:"secondaries"`
	// Success color.
	Successes WorkspaceAdminPortalPaletteSuccessArrayInput `pulumi:"successes"`
	// Warning color.
	Warnings WorkspaceAdminPortalPaletteWarningArrayInput `pulumi:"warnings"`
}

func (WorkspaceAdminPortalPaletteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPalette)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteArgs) ToWorkspaceAdminPortalPaletteOutput() WorkspaceAdminPortalPaletteOutput {
	return i.ToWorkspaceAdminPortalPaletteOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteArgs) ToWorkspaceAdminPortalPaletteOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteOutput)
}

func (i WorkspaceAdminPortalPaletteArgs) ToWorkspaceAdminPortalPalettePtrOutput() WorkspaceAdminPortalPalettePtrOutput {
	return i.ToWorkspaceAdminPortalPalettePtrOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteArgs) ToWorkspaceAdminPortalPalettePtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteOutput).ToWorkspaceAdminPortalPalettePtrOutputWithContext(ctx)
}

// WorkspaceAdminPortalPalettePtrInput is an input type that accepts WorkspaceAdminPortalPaletteArgs, WorkspaceAdminPortalPalettePtr and WorkspaceAdminPortalPalettePtrOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPalettePtrInput` via:
//
//	        WorkspaceAdminPortalPaletteArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAdminPortalPalettePtrInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPalettePtrOutput() WorkspaceAdminPortalPalettePtrOutput
	ToWorkspaceAdminPortalPalettePtrOutputWithContext(context.Context) WorkspaceAdminPortalPalettePtrOutput
}

type workspaceAdminPortalPalettePtrType WorkspaceAdminPortalPaletteArgs

func WorkspaceAdminPortalPalettePtr(v *WorkspaceAdminPortalPaletteArgs) WorkspaceAdminPortalPalettePtrInput {
	return (*workspaceAdminPortalPalettePtrType)(v)
}

func (*workspaceAdminPortalPalettePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPalette)(nil)).Elem()
}

func (i *workspaceAdminPortalPalettePtrType) ToWorkspaceAdminPortalPalettePtrOutput() WorkspaceAdminPortalPalettePtrOutput {
	return i.ToWorkspaceAdminPortalPalettePtrOutputWithContext(context.Background())
}

func (i *workspaceAdminPortalPalettePtrType) ToWorkspaceAdminPortalPalettePtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPalettePtrOutput)
}

type WorkspaceAdminPortalPaletteOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPalette)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteOutput) ToWorkspaceAdminPortalPaletteOutput() WorkspaceAdminPortalPaletteOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteOutput) ToWorkspaceAdminPortalPaletteOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteOutput) ToWorkspaceAdminPortalPalettePtrOutput() WorkspaceAdminPortalPalettePtrOutput {
	return o.ToWorkspaceAdminPortalPalettePtrOutputWithContext(context.Background())
}

func (o WorkspaceAdminPortalPaletteOutput) ToWorkspaceAdminPortalPalettePtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAdminPortalPalette) *WorkspaceAdminPortalPalette {
		return &v
	}).(WorkspaceAdminPortalPalettePtrOutput)
}

// Error color.
func (o WorkspaceAdminPortalPaletteOutput) Errors() WorkspaceAdminPortalPaletteErrorArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteError { return v.Errors }).(WorkspaceAdminPortalPaletteErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPaletteOutput) Infos() WorkspaceAdminPortalPaletteInfoArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteInfo { return v.Infos }).(WorkspaceAdminPortalPaletteInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPaletteOutput) Primaries() WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPalettePrimary { return v.Primaries }).(WorkspaceAdminPortalPalettePrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPaletteOutput) Secondaries() WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteSecondary { return v.Secondaries }).(WorkspaceAdminPortalPaletteSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPaletteOutput) Successes() WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteSuccess { return v.Successes }).(WorkspaceAdminPortalPaletteSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPaletteOutput) Warnings() WorkspaceAdminPortalPaletteWarningArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteWarning { return v.Warnings }).(WorkspaceAdminPortalPaletteWarningArrayOutput)
}

type WorkspaceAdminPortalPalettePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPalettePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPalette)(nil)).Elem()
}

func (o WorkspaceAdminPortalPalettePtrOutput) ToWorkspaceAdminPortalPalettePtrOutput() WorkspaceAdminPortalPalettePtrOutput {
	return o
}

func (o WorkspaceAdminPortalPalettePtrOutput) ToWorkspaceAdminPortalPalettePtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePtrOutput {
	return o
}

func (o WorkspaceAdminPortalPalettePtrOutput) Elem() WorkspaceAdminPortalPaletteOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) WorkspaceAdminPortalPalette {
		if v != nil {
			return *v
		}
		var ret WorkspaceAdminPortalPalette
		return ret
	}).(WorkspaceAdminPortalPaletteOutput)
}

// Error color.
func (o WorkspaceAdminPortalPalettePtrOutput) Errors() WorkspaceAdminPortalPaletteErrorArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteError {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(WorkspaceAdminPortalPaletteErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPalettePtrOutput) Infos() WorkspaceAdminPortalPaletteInfoArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteInfo {
		if v == nil {
			return nil
		}
		return v.Infos
	}).(WorkspaceAdminPortalPaletteInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPalettePtrOutput) Primaries() WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPalettePrimary {
		if v == nil {
			return nil
		}
		return v.Primaries
	}).(WorkspaceAdminPortalPalettePrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPalettePtrOutput) Secondaries() WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteSecondary {
		if v == nil {
			return nil
		}
		return v.Secondaries
	}).(WorkspaceAdminPortalPaletteSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPalettePtrOutput) Successes() WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteSuccess {
		if v == nil {
			return nil
		}
		return v.Successes
	}).(WorkspaceAdminPortalPaletteSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPalettePtrOutput) Warnings() WorkspaceAdminPortalPaletteWarningArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPalette) []WorkspaceAdminPortalPaletteWarning {
		if v == nil {
			return nil
		}
		return v.Warnings
	}).(WorkspaceAdminPortalPaletteWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortal struct {
	// Error color.
	Errors []WorkspaceAdminPortalPaletteAdminPortalError `pulumi:"errors"`
	// Info color.
	Infos []WorkspaceAdminPortalPaletteAdminPortalInfo `pulumi:"infos"`
	// Primary color.
	Primaries []WorkspaceAdminPortalPaletteAdminPortalPrimary `pulumi:"primaries"`
	// Secondary color.
	Secondaries []WorkspaceAdminPortalPaletteAdminPortalSecondary `pulumi:"secondaries"`
	// Success color.
	Successes []WorkspaceAdminPortalPaletteAdminPortalSuccess `pulumi:"successes"`
	// Warning color.
	Warnings []WorkspaceAdminPortalPaletteAdminPortalWarning `pulumi:"warnings"`
}

// WorkspaceAdminPortalPaletteAdminPortalInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalArgs and WorkspaceAdminPortalPaletteAdminPortalOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalOutput() WorkspaceAdminPortalPaletteAdminPortalOutput
	ToWorkspaceAdminPortalPaletteAdminPortalOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalOutput
}

type WorkspaceAdminPortalPaletteAdminPortalArgs struct {
	// Error color.
	Errors WorkspaceAdminPortalPaletteAdminPortalErrorArrayInput `pulumi:"errors"`
	// Info color.
	Infos WorkspaceAdminPortalPaletteAdminPortalInfoArrayInput `pulumi:"infos"`
	// Primary color.
	Primaries WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayInput `pulumi:"primaries"`
	// Secondary color.
	Secondaries WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayInput `pulumi:"secondaries"`
	// Success color.
	Successes WorkspaceAdminPortalPaletteAdminPortalSuccessArrayInput `pulumi:"successes"`
	// Warning color.
	Warnings WorkspaceAdminPortalPaletteAdminPortalWarningArrayInput `pulumi:"warnings"`
}

func (WorkspaceAdminPortalPaletteAdminPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortal)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalArgs) ToWorkspaceAdminPortalPaletteAdminPortalOutput() WorkspaceAdminPortalPaletteAdminPortalOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalArgs) ToWorkspaceAdminPortalPaletteAdminPortalOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalOutput)
}

func (i WorkspaceAdminPortalPaletteAdminPortalArgs) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutput() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalArgs) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalOutput).ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(ctx)
}

// WorkspaceAdminPortalPaletteAdminPortalPtrInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalArgs, WorkspaceAdminPortalPaletteAdminPortalPtr and WorkspaceAdminPortalPaletteAdminPortalPtrOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalPtrInput` via:
//
//	        WorkspaceAdminPortalPaletteAdminPortalArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAdminPortalPaletteAdminPortalPtrInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalPtrOutput() WorkspaceAdminPortalPaletteAdminPortalPtrOutput
	ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalPtrOutput
}

type workspaceAdminPortalPaletteAdminPortalPtrType WorkspaceAdminPortalPaletteAdminPortalArgs

func WorkspaceAdminPortalPaletteAdminPortalPtr(v *WorkspaceAdminPortalPaletteAdminPortalArgs) WorkspaceAdminPortalPaletteAdminPortalPtrInput {
	return (*workspaceAdminPortalPaletteAdminPortalPtrType)(v)
}

func (*workspaceAdminPortalPaletteAdminPortalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPaletteAdminPortal)(nil)).Elem()
}

func (i *workspaceAdminPortalPaletteAdminPortalPtrType) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutput() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(context.Background())
}

func (i *workspaceAdminPortalPaletteAdminPortalPtrType) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalPtrOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortal)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalOutput) ToWorkspaceAdminPortalPaletteAdminPortalOutput() WorkspaceAdminPortalPaletteAdminPortalOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalOutput) ToWorkspaceAdminPortalPaletteAdminPortalOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalOutput) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutput() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o.ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(context.Background())
}

func (o WorkspaceAdminPortalPaletteAdminPortalOutput) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAdminPortalPaletteAdminPortal) *WorkspaceAdminPortalPaletteAdminPortal {
		return &v
	}).(WorkspaceAdminPortalPaletteAdminPortalPtrOutput)
}

// Error color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Errors() WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalError {
		return v.Errors
	}).(WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Infos() WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalInfo {
		return v.Infos
	}).(WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Primaries() WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalPrimary {
		return v.Primaries
	}).(WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Secondaries() WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalSecondary {
		return v.Secondaries
	}).(WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Successes() WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalSuccess {
		return v.Successes
	}).(WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPaletteAdminPortalOutput) Warnings() WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalWarning {
		return v.Warnings
	}).(WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPaletteAdminPortal)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutput() WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) ToWorkspaceAdminPortalPaletteAdminPortalPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Elem() WorkspaceAdminPortalPaletteAdminPortalOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) WorkspaceAdminPortalPaletteAdminPortal {
		if v != nil {
			return *v
		}
		var ret WorkspaceAdminPortalPaletteAdminPortal
		return ret
	}).(WorkspaceAdminPortalPaletteAdminPortalOutput)
}

// Error color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Errors() WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalError {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Infos() WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalInfo {
		if v == nil {
			return nil
		}
		return v.Infos
	}).(WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Primaries() WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalPrimary {
		if v == nil {
			return nil
		}
		return v.Primaries
	}).(WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Secondaries() WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalSecondary {
		if v == nil {
			return nil
		}
		return v.Secondaries
	}).(WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Successes() WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalSuccess {
		if v == nil {
			return nil
		}
		return v.Successes
	}).(WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPaletteAdminPortalPtrOutput) Warnings() WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteAdminPortal) []WorkspaceAdminPortalPaletteAdminPortalWarning {
		if v == nil {
			return nil
		}
		return v.Warnings
	}).(WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalError struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalErrorInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalErrorArgs and WorkspaceAdminPortalPaletteAdminPortalErrorOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalErrorInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalErrorArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalErrorInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalErrorOutput() WorkspaceAdminPortalPaletteAdminPortalErrorOutput
	ToWorkspaceAdminPortalPaletteAdminPortalErrorOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorOutput
}

type WorkspaceAdminPortalPaletteAdminPortalErrorArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalErrorArgs) ToWorkspaceAdminPortalPaletteAdminPortalErrorOutput() WorkspaceAdminPortalPaletteAdminPortalErrorOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalErrorOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalErrorArgs) ToWorkspaceAdminPortalPaletteAdminPortalErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalErrorOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalErrorArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalErrorArray and WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalErrorArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalErrorArray{ WorkspaceAdminPortalPaletteAdminPortalErrorArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalErrorArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput() WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalErrorArray []WorkspaceAdminPortalPaletteAdminPortalErrorInput

func (WorkspaceAdminPortalPaletteAdminPortalErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalErrorArray) ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput() WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalErrorArray) ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalErrorOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) ToWorkspaceAdminPortalPaletteAdminPortalErrorOutput() WorkspaceAdminPortalPaletteAdminPortalErrorOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) ToWorkspaceAdminPortalPaletteAdminPortalErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalError) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalError) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalError) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalErrorOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalError) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput() WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalError {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalError)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalErrorOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalInfo struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalInfoInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalInfoArgs and WorkspaceAdminPortalPaletteAdminPortalInfoOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalInfoInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalInfoArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalInfoInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalInfoOutput() WorkspaceAdminPortalPaletteAdminPortalInfoOutput
	ToWorkspaceAdminPortalPaletteAdminPortalInfoOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoOutput
}

type WorkspaceAdminPortalPaletteAdminPortalInfoArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalInfoArgs) ToWorkspaceAdminPortalPaletteAdminPortalInfoOutput() WorkspaceAdminPortalPaletteAdminPortalInfoOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalInfoOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalInfoArgs) ToWorkspaceAdminPortalPaletteAdminPortalInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalInfoOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalInfoArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalInfoArray and WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalInfoArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalInfoArray{ WorkspaceAdminPortalPaletteAdminPortalInfoArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalInfoArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput() WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalInfoArray []WorkspaceAdminPortalPaletteAdminPortalInfoInput

func (WorkspaceAdminPortalPaletteAdminPortalInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalInfoArray) ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput() WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalInfoArray) ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalInfoOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) ToWorkspaceAdminPortalPaletteAdminPortalInfoOutput() WorkspaceAdminPortalPaletteAdminPortalInfoOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) ToWorkspaceAdminPortalPaletteAdminPortalInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalInfo) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalInfo) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalInfo) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalInfoOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalInfo) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput() WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalInfo {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalInfo)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalInfoOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalPrimary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalPrimaryInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs and WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalPrimaryInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalPrimaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput
	ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput
}

type WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalPrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalPrimaryArray and WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalPrimaryArray{ WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalPrimaryArray []WorkspaceAdminPortalPaletteAdminPortalPrimaryInput

func (WorkspaceAdminPortalPaletteAdminPortalPrimaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalPrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalPrimaryArray) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalPrimaryArray) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalPrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalPrimary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalPrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalPrimary {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalPrimary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSecondary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalSecondaryInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs and WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalSecondaryInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalSecondaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput
	ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput
}

type WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalSecondaryArray and WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalSecondaryArray{ WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalSecondaryArray []WorkspaceAdminPortalPaletteAdminPortalSecondaryInput

func (WorkspaceAdminPortalPaletteAdminPortalSecondaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalSecondaryArray) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalSecondaryArray) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSecondary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalSecondary {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalSecondary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSuccess struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalSuccessInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalSuccessArgs and WorkspaceAdminPortalPaletteAdminPortalSuccessOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalSuccessInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalSuccessArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalSuccessInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessOutput
	ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessOutput
}

type WorkspaceAdminPortalPaletteAdminPortalSuccessArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalSuccessArgs) ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalSuccessArgs) ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalSuccessOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalSuccessArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalSuccessArray and WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalSuccessArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalSuccessArray{ WorkspaceAdminPortalPaletteAdminPortalSuccessArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalSuccessArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalSuccessArray []WorkspaceAdminPortalPaletteAdminPortalSuccessInput

func (WorkspaceAdminPortalPaletteAdminPortalSuccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalSuccessArray) ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalSuccessArray) ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSuccessOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) ToWorkspaceAdminPortalPaletteAdminPortalSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSuccess) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSuccess) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSuccess) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalSuccessOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalSuccess) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput() WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalSuccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalSuccess {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalSuccess)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalSuccessOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalWarning struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteAdminPortalWarningInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalWarningArgs and WorkspaceAdminPortalPaletteAdminPortalWarningOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalWarningInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalWarningArgs{...}
type WorkspaceAdminPortalPaletteAdminPortalWarningInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalWarningOutput() WorkspaceAdminPortalPaletteAdminPortalWarningOutput
	ToWorkspaceAdminPortalPaletteAdminPortalWarningOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningOutput
}

type WorkspaceAdminPortalPaletteAdminPortalWarningArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteAdminPortalWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalWarningArgs) ToWorkspaceAdminPortalPaletteAdminPortalWarningOutput() WorkspaceAdminPortalPaletteAdminPortalWarningOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalWarningOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalWarningArgs) ToWorkspaceAdminPortalPaletteAdminPortalWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalWarningOutput)
}

// WorkspaceAdminPortalPaletteAdminPortalWarningArrayInput is an input type that accepts WorkspaceAdminPortalPaletteAdminPortalWarningArray and WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteAdminPortalWarningArrayInput` via:
//
//	WorkspaceAdminPortalPaletteAdminPortalWarningArray{ WorkspaceAdminPortalPaletteAdminPortalWarningArgs{...} }
type WorkspaceAdminPortalPaletteAdminPortalWarningArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput() WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput
	ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput
}

type WorkspaceAdminPortalPaletteAdminPortalWarningArray []WorkspaceAdminPortalPaletteAdminPortalWarningInput

func (WorkspaceAdminPortalPaletteAdminPortalWarningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteAdminPortalWarningArray) ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput() WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteAdminPortalWarningArray) ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalWarningOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) ToWorkspaceAdminPortalPaletteAdminPortalWarningOutput() WorkspaceAdminPortalPaletteAdminPortalWarningOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) ToWorkspaceAdminPortalPaletteAdminPortalWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalWarning) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalWarning) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalWarning) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteAdminPortalWarningOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteAdminPortalWarning) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteAdminPortalWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput() WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput) ToWorkspaceAdminPortalPaletteAdminPortalWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteAdminPortalWarningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteAdminPortalWarning {
		return vs[0].([]WorkspaceAdminPortalPaletteAdminPortalWarning)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteAdminPortalWarningOutput)
}

type WorkspaceAdminPortalPaletteError struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteErrorInput is an input type that accepts WorkspaceAdminPortalPaletteErrorArgs and WorkspaceAdminPortalPaletteErrorOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteErrorInput` via:
//
//	WorkspaceAdminPortalPaletteErrorArgs{...}
type WorkspaceAdminPortalPaletteErrorInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteErrorOutput() WorkspaceAdminPortalPaletteErrorOutput
	ToWorkspaceAdminPortalPaletteErrorOutputWithContext(context.Context) WorkspaceAdminPortalPaletteErrorOutput
}

type WorkspaceAdminPortalPaletteErrorArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteErrorArgs) ToWorkspaceAdminPortalPaletteErrorOutput() WorkspaceAdminPortalPaletteErrorOutput {
	return i.ToWorkspaceAdminPortalPaletteErrorOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteErrorArgs) ToWorkspaceAdminPortalPaletteErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteErrorOutput)
}

// WorkspaceAdminPortalPaletteErrorArrayInput is an input type that accepts WorkspaceAdminPortalPaletteErrorArray and WorkspaceAdminPortalPaletteErrorArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteErrorArrayInput` via:
//
//	WorkspaceAdminPortalPaletteErrorArray{ WorkspaceAdminPortalPaletteErrorArgs{...} }
type WorkspaceAdminPortalPaletteErrorArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteErrorArrayOutput() WorkspaceAdminPortalPaletteErrorArrayOutput
	ToWorkspaceAdminPortalPaletteErrorArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteErrorArrayOutput
}

type WorkspaceAdminPortalPaletteErrorArray []WorkspaceAdminPortalPaletteErrorInput

func (WorkspaceAdminPortalPaletteErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteErrorArray) ToWorkspaceAdminPortalPaletteErrorArrayOutput() WorkspaceAdminPortalPaletteErrorArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteErrorArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteErrorArray) ToWorkspaceAdminPortalPaletteErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteErrorArrayOutput)
}

type WorkspaceAdminPortalPaletteErrorOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteErrorOutput) ToWorkspaceAdminPortalPaletteErrorOutput() WorkspaceAdminPortalPaletteErrorOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteErrorOutput) ToWorkspaceAdminPortalPaletteErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteErrorOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteErrorOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteError) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteErrorOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteError) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteErrorOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteError) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteErrorOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteError) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteErrorArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteErrorArrayOutput) ToWorkspaceAdminPortalPaletteErrorArrayOutput() WorkspaceAdminPortalPaletteErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteErrorArrayOutput) ToWorkspaceAdminPortalPaletteErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteErrorArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteError {
		return vs[0].([]WorkspaceAdminPortalPaletteError)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteErrorOutput)
}

type WorkspaceAdminPortalPaletteInfo struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteInfoInput is an input type that accepts WorkspaceAdminPortalPaletteInfoArgs and WorkspaceAdminPortalPaletteInfoOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteInfoInput` via:
//
//	WorkspaceAdminPortalPaletteInfoArgs{...}
type WorkspaceAdminPortalPaletteInfoInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteInfoOutput() WorkspaceAdminPortalPaletteInfoOutput
	ToWorkspaceAdminPortalPaletteInfoOutputWithContext(context.Context) WorkspaceAdminPortalPaletteInfoOutput
}

type WorkspaceAdminPortalPaletteInfoArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteInfoArgs) ToWorkspaceAdminPortalPaletteInfoOutput() WorkspaceAdminPortalPaletteInfoOutput {
	return i.ToWorkspaceAdminPortalPaletteInfoOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteInfoArgs) ToWorkspaceAdminPortalPaletteInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteInfoOutput)
}

// WorkspaceAdminPortalPaletteInfoArrayInput is an input type that accepts WorkspaceAdminPortalPaletteInfoArray and WorkspaceAdminPortalPaletteInfoArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteInfoArrayInput` via:
//
//	WorkspaceAdminPortalPaletteInfoArray{ WorkspaceAdminPortalPaletteInfoArgs{...} }
type WorkspaceAdminPortalPaletteInfoArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteInfoArrayOutput() WorkspaceAdminPortalPaletteInfoArrayOutput
	ToWorkspaceAdminPortalPaletteInfoArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteInfoArrayOutput
}

type WorkspaceAdminPortalPaletteInfoArray []WorkspaceAdminPortalPaletteInfoInput

func (WorkspaceAdminPortalPaletteInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteInfoArray) ToWorkspaceAdminPortalPaletteInfoArrayOutput() WorkspaceAdminPortalPaletteInfoArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteInfoArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteInfoArray) ToWorkspaceAdminPortalPaletteInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteInfoArrayOutput)
}

type WorkspaceAdminPortalPaletteInfoOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteInfoOutput) ToWorkspaceAdminPortalPaletteInfoOutput() WorkspaceAdminPortalPaletteInfoOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteInfoOutput) ToWorkspaceAdminPortalPaletteInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteInfoOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteInfoOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteInfo) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteInfoOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteInfo) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteInfoOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteInfo) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteInfoOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteInfo) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteInfoArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteInfoArrayOutput) ToWorkspaceAdminPortalPaletteInfoArrayOutput() WorkspaceAdminPortalPaletteInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteInfoArrayOutput) ToWorkspaceAdminPortalPaletteInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteInfoArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteInfo {
		return vs[0].([]WorkspaceAdminPortalPaletteInfo)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteInfoOutput)
}

type WorkspaceAdminPortalPaletteLoginBox struct {
	// Error color.
	Errors []WorkspaceAdminPortalPaletteLoginBoxError `pulumi:"errors"`
	// Info color.
	Infos []WorkspaceAdminPortalPaletteLoginBoxInfo `pulumi:"infos"`
	// Primary color.
	Primaries []WorkspaceAdminPortalPaletteLoginBoxPrimary `pulumi:"primaries"`
	// Secondary color.
	Secondaries []WorkspaceAdminPortalPaletteLoginBoxSecondary `pulumi:"secondaries"`
	// Success color.
	Successes []WorkspaceAdminPortalPaletteLoginBoxSuccess `pulumi:"successes"`
	// Warning color.
	Warnings []WorkspaceAdminPortalPaletteLoginBoxWarning `pulumi:"warnings"`
}

// WorkspaceAdminPortalPaletteLoginBoxInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxArgs and WorkspaceAdminPortalPaletteLoginBoxOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxOutput() WorkspaceAdminPortalPaletteLoginBoxOutput
	ToWorkspaceAdminPortalPaletteLoginBoxOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxOutput
}

type WorkspaceAdminPortalPaletteLoginBoxArgs struct {
	// Error color.
	Errors WorkspaceAdminPortalPaletteLoginBoxErrorArrayInput `pulumi:"errors"`
	// Info color.
	Infos WorkspaceAdminPortalPaletteLoginBoxInfoArrayInput `pulumi:"infos"`
	// Primary color.
	Primaries WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayInput `pulumi:"primaries"`
	// Secondary color.
	Secondaries WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayInput `pulumi:"secondaries"`
	// Success color.
	Successes WorkspaceAdminPortalPaletteLoginBoxSuccessArrayInput `pulumi:"successes"`
	// Warning color.
	Warnings WorkspaceAdminPortalPaletteLoginBoxWarningArrayInput `pulumi:"warnings"`
}

func (WorkspaceAdminPortalPaletteLoginBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBox)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxArgs) ToWorkspaceAdminPortalPaletteLoginBoxOutput() WorkspaceAdminPortalPaletteLoginBoxOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxArgs) ToWorkspaceAdminPortalPaletteLoginBoxOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxOutput)
}

func (i WorkspaceAdminPortalPaletteLoginBoxArgs) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutput() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxArgs) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxOutput).ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(ctx)
}

// WorkspaceAdminPortalPaletteLoginBoxPtrInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxArgs, WorkspaceAdminPortalPaletteLoginBoxPtr and WorkspaceAdminPortalPaletteLoginBoxPtrOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxPtrInput` via:
//
//	        WorkspaceAdminPortalPaletteLoginBoxArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAdminPortalPaletteLoginBoxPtrInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxPtrOutput() WorkspaceAdminPortalPaletteLoginBoxPtrOutput
	ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxPtrOutput
}

type workspaceAdminPortalPaletteLoginBoxPtrType WorkspaceAdminPortalPaletteLoginBoxArgs

func WorkspaceAdminPortalPaletteLoginBoxPtr(v *WorkspaceAdminPortalPaletteLoginBoxArgs) WorkspaceAdminPortalPaletteLoginBoxPtrInput {
	return (*workspaceAdminPortalPaletteLoginBoxPtrType)(v)
}

func (*workspaceAdminPortalPaletteLoginBoxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPaletteLoginBox)(nil)).Elem()
}

func (i *workspaceAdminPortalPaletteLoginBoxPtrType) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutput() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(context.Background())
}

func (i *workspaceAdminPortalPaletteLoginBoxPtrType) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxPtrOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBox)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxOutput) ToWorkspaceAdminPortalPaletteLoginBoxOutput() WorkspaceAdminPortalPaletteLoginBoxOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxOutput) ToWorkspaceAdminPortalPaletteLoginBoxOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxOutput) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutput() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o.ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(context.Background())
}

func (o WorkspaceAdminPortalPaletteLoginBoxOutput) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAdminPortalPaletteLoginBox) *WorkspaceAdminPortalPaletteLoginBox {
		return &v
	}).(WorkspaceAdminPortalPaletteLoginBoxPtrOutput)
}

// Error color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Errors() WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxError {
		return v.Errors
	}).(WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Infos() WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxInfo { return v.Infos }).(WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Primaries() WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxPrimary {
		return v.Primaries
	}).(WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Secondaries() WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxSecondary {
		return v.Secondaries
	}).(WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Successes() WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxSuccess {
		return v.Successes
	}).(WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPaletteLoginBoxOutput) Warnings() WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxWarning {
		return v.Warnings
	}).(WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAdminPortalPaletteLoginBox)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutput() WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) ToWorkspaceAdminPortalPaletteLoginBoxPtrOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPtrOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Elem() WorkspaceAdminPortalPaletteLoginBoxOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) WorkspaceAdminPortalPaletteLoginBox {
		if v != nil {
			return *v
		}
		var ret WorkspaceAdminPortalPaletteLoginBox
		return ret
	}).(WorkspaceAdminPortalPaletteLoginBoxOutput)
}

// Error color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Errors() WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxError {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput)
}

// Info color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Infos() WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxInfo {
		if v == nil {
			return nil
		}
		return v.Infos
	}).(WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput)
}

// Primary color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Primaries() WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxPrimary {
		if v == nil {
			return nil
		}
		return v.Primaries
	}).(WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput)
}

// Secondary color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Secondaries() WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxSecondary {
		if v == nil {
			return nil
		}
		return v.Secondaries
	}).(WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput)
}

// Success color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Successes() WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxSuccess {
		if v == nil {
			return nil
		}
		return v.Successes
	}).(WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput)
}

// Warning color.
func (o WorkspaceAdminPortalPaletteLoginBoxPtrOutput) Warnings() WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return o.ApplyT(func(v *WorkspaceAdminPortalPaletteLoginBox) []WorkspaceAdminPortalPaletteLoginBoxWarning {
		if v == nil {
			return nil
		}
		return v.Warnings
	}).(WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxError struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxErrorInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxErrorArgs and WorkspaceAdminPortalPaletteLoginBoxErrorOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxErrorInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxErrorArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxErrorInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxErrorOutput() WorkspaceAdminPortalPaletteLoginBoxErrorOutput
	ToWorkspaceAdminPortalPaletteLoginBoxErrorOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorOutput
}

type WorkspaceAdminPortalPaletteLoginBoxErrorArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxErrorArgs) ToWorkspaceAdminPortalPaletteLoginBoxErrorOutput() WorkspaceAdminPortalPaletteLoginBoxErrorOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxErrorOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxErrorArgs) ToWorkspaceAdminPortalPaletteLoginBoxErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxErrorOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxErrorArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxErrorArray and WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxErrorArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxErrorArray{ WorkspaceAdminPortalPaletteLoginBoxErrorArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxErrorArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput() WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxErrorArray []WorkspaceAdminPortalPaletteLoginBoxErrorInput

func (WorkspaceAdminPortalPaletteLoginBoxErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxError)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxErrorArray) ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput() WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxErrorArray) ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxErrorOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) ToWorkspaceAdminPortalPaletteLoginBoxErrorOutput() WorkspaceAdminPortalPaletteLoginBoxErrorOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) ToWorkspaceAdminPortalPaletteLoginBoxErrorOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxError) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxError) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxError) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxErrorOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxError) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxError)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput() WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxErrorArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxError {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxError)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxErrorOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxInfo struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxInfoInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxInfoArgs and WorkspaceAdminPortalPaletteLoginBoxInfoOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxInfoInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxInfoArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxInfoInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxInfoOutput() WorkspaceAdminPortalPaletteLoginBoxInfoOutput
	ToWorkspaceAdminPortalPaletteLoginBoxInfoOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoOutput
}

type WorkspaceAdminPortalPaletteLoginBoxInfoArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxInfoArgs) ToWorkspaceAdminPortalPaletteLoginBoxInfoOutput() WorkspaceAdminPortalPaletteLoginBoxInfoOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxInfoOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxInfoArgs) ToWorkspaceAdminPortalPaletteLoginBoxInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxInfoOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxInfoArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxInfoArray and WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxInfoArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxInfoArray{ WorkspaceAdminPortalPaletteLoginBoxInfoArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxInfoArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput() WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxInfoArray []WorkspaceAdminPortalPaletteLoginBoxInfoInput

func (WorkspaceAdminPortalPaletteLoginBoxInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxInfo)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxInfoArray) ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput() WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxInfoArray) ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxInfoOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) ToWorkspaceAdminPortalPaletteLoginBoxInfoOutput() WorkspaceAdminPortalPaletteLoginBoxInfoOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) ToWorkspaceAdminPortalPaletteLoginBoxInfoOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxInfo) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxInfo) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxInfo) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxInfoOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxInfo) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxInfo)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput() WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxInfoArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxInfo {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxInfo)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxInfoOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxPrimary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxPrimaryInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs and WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxPrimaryInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxPrimaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput
	ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput
}

type WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxPrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxPrimaryArray and WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxPrimaryArray{ WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxPrimaryArray []WorkspaceAdminPortalPaletteLoginBoxPrimaryInput

func (WorkspaceAdminPortalPaletteLoginBoxPrimaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxPrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxPrimaryArray) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxPrimaryArray) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxPrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxPrimary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxPrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxPrimary {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxPrimary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSecondary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxSecondaryInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs and WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxSecondaryInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxSecondaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput
	ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput
}

type WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxSecondaryArray and WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxSecondaryArray{ WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxSecondaryArray []WorkspaceAdminPortalPaletteLoginBoxSecondaryInput

func (WorkspaceAdminPortalPaletteLoginBoxSecondaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxSecondaryArray) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxSecondaryArray) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSecondary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxSecondary {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxSecondary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSuccess struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxSuccessInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxSuccessArgs and WorkspaceAdminPortalPaletteLoginBoxSuccessOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxSuccessInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxSuccessArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxSuccessInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessOutput
	ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessOutput
}

type WorkspaceAdminPortalPaletteLoginBoxSuccessArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxSuccessArgs) ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxSuccessArgs) ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxSuccessOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxSuccessArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxSuccessArray and WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxSuccessArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxSuccessArray{ WorkspaceAdminPortalPaletteLoginBoxSuccessArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxSuccessArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxSuccessArray []WorkspaceAdminPortalPaletteLoginBoxSuccessInput

func (WorkspaceAdminPortalPaletteLoginBoxSuccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxSuccessArray) ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxSuccessArray) ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSuccessOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) ToWorkspaceAdminPortalPaletteLoginBoxSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSuccess) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSuccess) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSuccess) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxSuccessOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxSuccess) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput() WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxSuccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxSuccess {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxSuccess)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxSuccessOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxWarning struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteLoginBoxWarningInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxWarningArgs and WorkspaceAdminPortalPaletteLoginBoxWarningOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxWarningInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxWarningArgs{...}
type WorkspaceAdminPortalPaletteLoginBoxWarningInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxWarningOutput() WorkspaceAdminPortalPaletteLoginBoxWarningOutput
	ToWorkspaceAdminPortalPaletteLoginBoxWarningOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningOutput
}

type WorkspaceAdminPortalPaletteLoginBoxWarningArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteLoginBoxWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxWarningArgs) ToWorkspaceAdminPortalPaletteLoginBoxWarningOutput() WorkspaceAdminPortalPaletteLoginBoxWarningOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxWarningOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxWarningArgs) ToWorkspaceAdminPortalPaletteLoginBoxWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxWarningOutput)
}

// WorkspaceAdminPortalPaletteLoginBoxWarningArrayInput is an input type that accepts WorkspaceAdminPortalPaletteLoginBoxWarningArray and WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteLoginBoxWarningArrayInput` via:
//
//	WorkspaceAdminPortalPaletteLoginBoxWarningArray{ WorkspaceAdminPortalPaletteLoginBoxWarningArgs{...} }
type WorkspaceAdminPortalPaletteLoginBoxWarningArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput() WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput
	ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput
}

type WorkspaceAdminPortalPaletteLoginBoxWarningArray []WorkspaceAdminPortalPaletteLoginBoxWarningInput

func (WorkspaceAdminPortalPaletteLoginBoxWarningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteLoginBoxWarningArray) ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput() WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteLoginBoxWarningArray) ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxWarningOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) ToWorkspaceAdminPortalPaletteLoginBoxWarningOutput() WorkspaceAdminPortalPaletteLoginBoxWarningOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) ToWorkspaceAdminPortalPaletteLoginBoxWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxWarning) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxWarning) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxWarning) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteLoginBoxWarningOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteLoginBoxWarning) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteLoginBoxWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput() WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput) ToWorkspaceAdminPortalPaletteLoginBoxWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteLoginBoxWarningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteLoginBoxWarning {
		return vs[0].([]WorkspaceAdminPortalPaletteLoginBoxWarning)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteLoginBoxWarningOutput)
}

type WorkspaceAdminPortalPalettePrimary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPalettePrimaryInput is an input type that accepts WorkspaceAdminPortalPalettePrimaryArgs and WorkspaceAdminPortalPalettePrimaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPalettePrimaryInput` via:
//
//	WorkspaceAdminPortalPalettePrimaryArgs{...}
type WorkspaceAdminPortalPalettePrimaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPalettePrimaryOutput() WorkspaceAdminPortalPalettePrimaryOutput
	ToWorkspaceAdminPortalPalettePrimaryOutputWithContext(context.Context) WorkspaceAdminPortalPalettePrimaryOutput
}

type WorkspaceAdminPortalPalettePrimaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPalettePrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPalettePrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPalettePrimaryArgs) ToWorkspaceAdminPortalPalettePrimaryOutput() WorkspaceAdminPortalPalettePrimaryOutput {
	return i.ToWorkspaceAdminPortalPalettePrimaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPalettePrimaryArgs) ToWorkspaceAdminPortalPalettePrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPalettePrimaryOutput)
}

// WorkspaceAdminPortalPalettePrimaryArrayInput is an input type that accepts WorkspaceAdminPortalPalettePrimaryArray and WorkspaceAdminPortalPalettePrimaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPalettePrimaryArrayInput` via:
//
//	WorkspaceAdminPortalPalettePrimaryArray{ WorkspaceAdminPortalPalettePrimaryArgs{...} }
type WorkspaceAdminPortalPalettePrimaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPalettePrimaryArrayOutput() WorkspaceAdminPortalPalettePrimaryArrayOutput
	ToWorkspaceAdminPortalPalettePrimaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPalettePrimaryArrayOutput
}

type WorkspaceAdminPortalPalettePrimaryArray []WorkspaceAdminPortalPalettePrimaryInput

func (WorkspaceAdminPortalPalettePrimaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPalettePrimary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPalettePrimaryArray) ToWorkspaceAdminPortalPalettePrimaryArrayOutput() WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return i.ToWorkspaceAdminPortalPalettePrimaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPalettePrimaryArray) ToWorkspaceAdminPortalPalettePrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPalettePrimaryArrayOutput)
}

type WorkspaceAdminPortalPalettePrimaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPalettePrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPalettePrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPalettePrimaryOutput) ToWorkspaceAdminPortalPalettePrimaryOutput() WorkspaceAdminPortalPalettePrimaryOutput {
	return o
}

func (o WorkspaceAdminPortalPalettePrimaryOutput) ToWorkspaceAdminPortalPalettePrimaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePrimaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPalettePrimaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPalettePrimary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPalettePrimaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPalettePrimaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPalettePrimary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPalettePrimaryArrayOutput) ToWorkspaceAdminPortalPalettePrimaryArrayOutput() WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPalettePrimaryArrayOutput) ToWorkspaceAdminPortalPalettePrimaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPalettePrimaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPalettePrimaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPalettePrimaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPalettePrimary {
		return vs[0].([]WorkspaceAdminPortalPalettePrimary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPalettePrimaryOutput)
}

type WorkspaceAdminPortalPaletteSecondary struct {
	// active color.
	Active string `pulumi:"active"`
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// hover color.
	Hover string `pulumi:"hover"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteSecondaryInput is an input type that accepts WorkspaceAdminPortalPaletteSecondaryArgs and WorkspaceAdminPortalPaletteSecondaryOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteSecondaryInput` via:
//
//	WorkspaceAdminPortalPaletteSecondaryArgs{...}
type WorkspaceAdminPortalPaletteSecondaryInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteSecondaryOutput() WorkspaceAdminPortalPaletteSecondaryOutput
	ToWorkspaceAdminPortalPaletteSecondaryOutputWithContext(context.Context) WorkspaceAdminPortalPaletteSecondaryOutput
}

type WorkspaceAdminPortalPaletteSecondaryArgs struct {
	// active color.
	Active pulumi.StringInput `pulumi:"active"`
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// hover color.
	Hover pulumi.StringInput `pulumi:"hover"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteSecondaryArgs) ToWorkspaceAdminPortalPaletteSecondaryOutput() WorkspaceAdminPortalPaletteSecondaryOutput {
	return i.ToWorkspaceAdminPortalPaletteSecondaryOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteSecondaryArgs) ToWorkspaceAdminPortalPaletteSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteSecondaryOutput)
}

// WorkspaceAdminPortalPaletteSecondaryArrayInput is an input type that accepts WorkspaceAdminPortalPaletteSecondaryArray and WorkspaceAdminPortalPaletteSecondaryArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteSecondaryArrayInput` via:
//
//	WorkspaceAdminPortalPaletteSecondaryArray{ WorkspaceAdminPortalPaletteSecondaryArgs{...} }
type WorkspaceAdminPortalPaletteSecondaryArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteSecondaryArrayOutput() WorkspaceAdminPortalPaletteSecondaryArrayOutput
	ToWorkspaceAdminPortalPaletteSecondaryArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteSecondaryArrayOutput
}

type WorkspaceAdminPortalPaletteSecondaryArray []WorkspaceAdminPortalPaletteSecondaryInput

func (WorkspaceAdminPortalPaletteSecondaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteSecondary)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteSecondaryArray) ToWorkspaceAdminPortalPaletteSecondaryArrayOutput() WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteSecondaryArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteSecondaryArray) ToWorkspaceAdminPortalPaletteSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteSecondaryArrayOutput)
}

type WorkspaceAdminPortalPaletteSecondaryOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteSecondaryOutput) ToWorkspaceAdminPortalPaletteSecondaryOutput() WorkspaceAdminPortalPaletteSecondaryOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSecondaryOutput) ToWorkspaceAdminPortalPaletteSecondaryOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSecondaryOutput {
	return o
}

// active color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) Active() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.Active }).(pulumi.StringOutput)
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.Dark }).(pulumi.StringOutput)
}

// hover color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) Hover() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.Hover }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteSecondaryOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSecondary) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteSecondaryArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteSecondaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteSecondary)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteSecondaryArrayOutput() WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSecondaryArrayOutput) ToWorkspaceAdminPortalPaletteSecondaryArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSecondaryArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSecondaryArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteSecondaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteSecondary {
		return vs[0].([]WorkspaceAdminPortalPaletteSecondary)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteSecondaryOutput)
}

type WorkspaceAdminPortalPaletteSuccess struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteSuccessInput is an input type that accepts WorkspaceAdminPortalPaletteSuccessArgs and WorkspaceAdminPortalPaletteSuccessOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteSuccessInput` via:
//
//	WorkspaceAdminPortalPaletteSuccessArgs{...}
type WorkspaceAdminPortalPaletteSuccessInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteSuccessOutput() WorkspaceAdminPortalPaletteSuccessOutput
	ToWorkspaceAdminPortalPaletteSuccessOutputWithContext(context.Context) WorkspaceAdminPortalPaletteSuccessOutput
}

type WorkspaceAdminPortalPaletteSuccessArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteSuccessArgs) ToWorkspaceAdminPortalPaletteSuccessOutput() WorkspaceAdminPortalPaletteSuccessOutput {
	return i.ToWorkspaceAdminPortalPaletteSuccessOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteSuccessArgs) ToWorkspaceAdminPortalPaletteSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteSuccessOutput)
}

// WorkspaceAdminPortalPaletteSuccessArrayInput is an input type that accepts WorkspaceAdminPortalPaletteSuccessArray and WorkspaceAdminPortalPaletteSuccessArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteSuccessArrayInput` via:
//
//	WorkspaceAdminPortalPaletteSuccessArray{ WorkspaceAdminPortalPaletteSuccessArgs{...} }
type WorkspaceAdminPortalPaletteSuccessArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteSuccessArrayOutput() WorkspaceAdminPortalPaletteSuccessArrayOutput
	ToWorkspaceAdminPortalPaletteSuccessArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteSuccessArrayOutput
}

type WorkspaceAdminPortalPaletteSuccessArray []WorkspaceAdminPortalPaletteSuccessInput

func (WorkspaceAdminPortalPaletteSuccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteSuccess)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteSuccessArray) ToWorkspaceAdminPortalPaletteSuccessArrayOutput() WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteSuccessArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteSuccessArray) ToWorkspaceAdminPortalPaletteSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteSuccessArrayOutput)
}

type WorkspaceAdminPortalPaletteSuccessOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteSuccessOutput) ToWorkspaceAdminPortalPaletteSuccessOutput() WorkspaceAdminPortalPaletteSuccessOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSuccessOutput) ToWorkspaceAdminPortalPaletteSuccessOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSuccessOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteSuccessOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSuccess) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteSuccessOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSuccess) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteSuccessOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSuccess) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteSuccessOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteSuccess) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteSuccessArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteSuccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteSuccess)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteSuccessArrayOutput) ToWorkspaceAdminPortalPaletteSuccessArrayOutput() WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSuccessArrayOutput) ToWorkspaceAdminPortalPaletteSuccessArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteSuccessArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteSuccessArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteSuccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteSuccess {
		return vs[0].([]WorkspaceAdminPortalPaletteSuccess)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteSuccessOutput)
}

type WorkspaceAdminPortalPaletteWarning struct {
	// contrast_text color.
	ContrastText string `pulumi:"contrastText"`
	// dark color.
	Dark string `pulumi:"dark"`
	// light color.
	Light string `pulumi:"light"`
	// main color.
	Main string `pulumi:"main"`
}

// WorkspaceAdminPortalPaletteWarningInput is an input type that accepts WorkspaceAdminPortalPaletteWarningArgs and WorkspaceAdminPortalPaletteWarningOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteWarningInput` via:
//
//	WorkspaceAdminPortalPaletteWarningArgs{...}
type WorkspaceAdminPortalPaletteWarningInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteWarningOutput() WorkspaceAdminPortalPaletteWarningOutput
	ToWorkspaceAdminPortalPaletteWarningOutputWithContext(context.Context) WorkspaceAdminPortalPaletteWarningOutput
}

type WorkspaceAdminPortalPaletteWarningArgs struct {
	// contrast_text color.
	ContrastText pulumi.StringInput `pulumi:"contrastText"`
	// dark color.
	Dark pulumi.StringInput `pulumi:"dark"`
	// light color.
	Light pulumi.StringInput `pulumi:"light"`
	// main color.
	Main pulumi.StringInput `pulumi:"main"`
}

func (WorkspaceAdminPortalPaletteWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteWarningArgs) ToWorkspaceAdminPortalPaletteWarningOutput() WorkspaceAdminPortalPaletteWarningOutput {
	return i.ToWorkspaceAdminPortalPaletteWarningOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteWarningArgs) ToWorkspaceAdminPortalPaletteWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteWarningOutput)
}

// WorkspaceAdminPortalPaletteWarningArrayInput is an input type that accepts WorkspaceAdminPortalPaletteWarningArray and WorkspaceAdminPortalPaletteWarningArrayOutput values.
// You can construct a concrete instance of `WorkspaceAdminPortalPaletteWarningArrayInput` via:
//
//	WorkspaceAdminPortalPaletteWarningArray{ WorkspaceAdminPortalPaletteWarningArgs{...} }
type WorkspaceAdminPortalPaletteWarningArrayInput interface {
	pulumi.Input

	ToWorkspaceAdminPortalPaletteWarningArrayOutput() WorkspaceAdminPortalPaletteWarningArrayOutput
	ToWorkspaceAdminPortalPaletteWarningArrayOutputWithContext(context.Context) WorkspaceAdminPortalPaletteWarningArrayOutput
}

type WorkspaceAdminPortalPaletteWarningArray []WorkspaceAdminPortalPaletteWarningInput

func (WorkspaceAdminPortalPaletteWarningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteWarning)(nil)).Elem()
}

func (i WorkspaceAdminPortalPaletteWarningArray) ToWorkspaceAdminPortalPaletteWarningArrayOutput() WorkspaceAdminPortalPaletteWarningArrayOutput {
	return i.ToWorkspaceAdminPortalPaletteWarningArrayOutputWithContext(context.Background())
}

func (i WorkspaceAdminPortalPaletteWarningArray) ToWorkspaceAdminPortalPaletteWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteWarningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAdminPortalPaletteWarningArrayOutput)
}

type WorkspaceAdminPortalPaletteWarningOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAdminPortalPaletteWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteWarningOutput) ToWorkspaceAdminPortalPaletteWarningOutput() WorkspaceAdminPortalPaletteWarningOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteWarningOutput) ToWorkspaceAdminPortalPaletteWarningOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteWarningOutput {
	return o
}

// contrast_text color.
func (o WorkspaceAdminPortalPaletteWarningOutput) ContrastText() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteWarning) string { return v.ContrastText }).(pulumi.StringOutput)
}

// dark color.
func (o WorkspaceAdminPortalPaletteWarningOutput) Dark() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteWarning) string { return v.Dark }).(pulumi.StringOutput)
}

// light color.
func (o WorkspaceAdminPortalPaletteWarningOutput) Light() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteWarning) string { return v.Light }).(pulumi.StringOutput)
}

// main color.
func (o WorkspaceAdminPortalPaletteWarningOutput) Main() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAdminPortalPaletteWarning) string { return v.Main }).(pulumi.StringOutput)
}

type WorkspaceAdminPortalPaletteWarningArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceAdminPortalPaletteWarningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceAdminPortalPaletteWarning)(nil)).Elem()
}

func (o WorkspaceAdminPortalPaletteWarningArrayOutput) ToWorkspaceAdminPortalPaletteWarningArrayOutput() WorkspaceAdminPortalPaletteWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteWarningArrayOutput) ToWorkspaceAdminPortalPaletteWarningArrayOutputWithContext(ctx context.Context) WorkspaceAdminPortalPaletteWarningArrayOutput {
	return o
}

func (o WorkspaceAdminPortalPaletteWarningArrayOutput) Index(i pulumi.IntInput) WorkspaceAdminPortalPaletteWarningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceAdminPortalPaletteWarning {
		return vs[0].([]WorkspaceAdminPortalPaletteWarning)[vs[1].(int)]
	}).(WorkspaceAdminPortalPaletteWarningOutput)
}

type WorkspaceAuthPolicy struct {
	// Whether users are allowed to sign up.
	AllowSignups bool `pulumi:"allowSignups"`
	// Allow tenants to invite new users via an invitation link.
	AllowTenantInvitations bool `pulumi:"allowTenantInvitations"`
	// Whether unverified users are allowed to log in.
	AllowUnverifiedUsers bool `pulumi:"allowUnverifiedUsers"`
	// The authentication strategy to use for people logging in.
	//
	//     Must be one of "EmailAndPassword", "Code", "MagicLink", "NoLocalAuthentication", "SmsCode"
	AuthStrategy string `pulumi:"authStrategy"`
	// Whether users can create API tokens.
	EnableApiTokens bool `pulumi:"enableApiTokens"`
	// Whether granular roles and permissions are enabled.
	EnableRoles bool `pulumi:"enableRoles"`
	// The expiration time for the JWT access tokens issued by Frontegg.
	JwtAccessTokenExpiration int `pulumi:"jwtAccessTokenExpiration"`
	// The algorithm Frontegg uses to sign JWT tokens.
	JwtAlgorithm *string `pulumi:"jwtAlgorithm"`
	// The public key that Frontegg uses to sign JWT tokens.
	JwtPublicKey *string `pulumi:"jwtPublicKey"`
	// The expiration time for the JWT refresh tokens issued by Frontegg.
	JwtRefreshTokenExpiration int `pulumi:"jwtRefreshTokenExpiration"`
	// Type of tokens users will be able to generate.
	// 							Must be one of "ClientCredentials" or "AccessToken".
	MachineToMachineAuthStrategy *string `pulumi:"machineToMachineAuthStrategy"`
	// The SameSite policy to use for Frontegg cookies.
	//
	//     Must be one of "none", "lax", or "strict".
	SameSiteCookiePolicy string `pulumi:"sameSiteCookiePolicy"`
}

// WorkspaceAuthPolicyInput is an input type that accepts WorkspaceAuthPolicyArgs and WorkspaceAuthPolicyOutput values.
// You can construct a concrete instance of `WorkspaceAuthPolicyInput` via:
//
//	WorkspaceAuthPolicyArgs{...}
type WorkspaceAuthPolicyInput interface {
	pulumi.Input

	ToWorkspaceAuthPolicyOutput() WorkspaceAuthPolicyOutput
	ToWorkspaceAuthPolicyOutputWithContext(context.Context) WorkspaceAuthPolicyOutput
}

type WorkspaceAuthPolicyArgs struct {
	// Whether users are allowed to sign up.
	AllowSignups pulumi.BoolInput `pulumi:"allowSignups"`
	// Allow tenants to invite new users via an invitation link.
	AllowTenantInvitations pulumi.BoolInput `pulumi:"allowTenantInvitations"`
	// Whether unverified users are allowed to log in.
	AllowUnverifiedUsers pulumi.BoolInput `pulumi:"allowUnverifiedUsers"`
	// The authentication strategy to use for people logging in.
	//
	//     Must be one of "EmailAndPassword", "Code", "MagicLink", "NoLocalAuthentication", "SmsCode"
	AuthStrategy pulumi.StringInput `pulumi:"authStrategy"`
	// Whether users can create API tokens.
	EnableApiTokens pulumi.BoolInput `pulumi:"enableApiTokens"`
	// Whether granular roles and permissions are enabled.
	EnableRoles pulumi.BoolInput `pulumi:"enableRoles"`
	// The expiration time for the JWT access tokens issued by Frontegg.
	JwtAccessTokenExpiration pulumi.IntInput `pulumi:"jwtAccessTokenExpiration"`
	// The algorithm Frontegg uses to sign JWT tokens.
	JwtAlgorithm pulumi.StringPtrInput `pulumi:"jwtAlgorithm"`
	// The public key that Frontegg uses to sign JWT tokens.
	JwtPublicKey pulumi.StringPtrInput `pulumi:"jwtPublicKey"`
	// The expiration time for the JWT refresh tokens issued by Frontegg.
	JwtRefreshTokenExpiration pulumi.IntInput `pulumi:"jwtRefreshTokenExpiration"`
	// Type of tokens users will be able to generate.
	// 							Must be one of "ClientCredentials" or "AccessToken".
	MachineToMachineAuthStrategy pulumi.StringPtrInput `pulumi:"machineToMachineAuthStrategy"`
	// The SameSite policy to use for Frontegg cookies.
	//
	//     Must be one of "none", "lax", or "strict".
	SameSiteCookiePolicy pulumi.StringInput `pulumi:"sameSiteCookiePolicy"`
}

func (WorkspaceAuthPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAuthPolicy)(nil)).Elem()
}

func (i WorkspaceAuthPolicyArgs) ToWorkspaceAuthPolicyOutput() WorkspaceAuthPolicyOutput {
	return i.ToWorkspaceAuthPolicyOutputWithContext(context.Background())
}

func (i WorkspaceAuthPolicyArgs) ToWorkspaceAuthPolicyOutputWithContext(ctx context.Context) WorkspaceAuthPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAuthPolicyOutput)
}

func (i WorkspaceAuthPolicyArgs) ToWorkspaceAuthPolicyPtrOutput() WorkspaceAuthPolicyPtrOutput {
	return i.ToWorkspaceAuthPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceAuthPolicyArgs) ToWorkspaceAuthPolicyPtrOutputWithContext(ctx context.Context) WorkspaceAuthPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAuthPolicyOutput).ToWorkspaceAuthPolicyPtrOutputWithContext(ctx)
}

// WorkspaceAuthPolicyPtrInput is an input type that accepts WorkspaceAuthPolicyArgs, WorkspaceAuthPolicyPtr and WorkspaceAuthPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceAuthPolicyPtrInput` via:
//
//	        WorkspaceAuthPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAuthPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceAuthPolicyPtrOutput() WorkspaceAuthPolicyPtrOutput
	ToWorkspaceAuthPolicyPtrOutputWithContext(context.Context) WorkspaceAuthPolicyPtrOutput
}

type workspaceAuthPolicyPtrType WorkspaceAuthPolicyArgs

func WorkspaceAuthPolicyPtr(v *WorkspaceAuthPolicyArgs) WorkspaceAuthPolicyPtrInput {
	return (*workspaceAuthPolicyPtrType)(v)
}

func (*workspaceAuthPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAuthPolicy)(nil)).Elem()
}

func (i *workspaceAuthPolicyPtrType) ToWorkspaceAuthPolicyPtrOutput() WorkspaceAuthPolicyPtrOutput {
	return i.ToWorkspaceAuthPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceAuthPolicyPtrType) ToWorkspaceAuthPolicyPtrOutputWithContext(ctx context.Context) WorkspaceAuthPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAuthPolicyPtrOutput)
}

type WorkspaceAuthPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceAuthPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAuthPolicy)(nil)).Elem()
}

func (o WorkspaceAuthPolicyOutput) ToWorkspaceAuthPolicyOutput() WorkspaceAuthPolicyOutput {
	return o
}

func (o WorkspaceAuthPolicyOutput) ToWorkspaceAuthPolicyOutputWithContext(ctx context.Context) WorkspaceAuthPolicyOutput {
	return o
}

func (o WorkspaceAuthPolicyOutput) ToWorkspaceAuthPolicyPtrOutput() WorkspaceAuthPolicyPtrOutput {
	return o.ToWorkspaceAuthPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceAuthPolicyOutput) ToWorkspaceAuthPolicyPtrOutputWithContext(ctx context.Context) WorkspaceAuthPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAuthPolicy) *WorkspaceAuthPolicy {
		return &v
	}).(WorkspaceAuthPolicyPtrOutput)
}

// Whether users are allowed to sign up.
func (o WorkspaceAuthPolicyOutput) AllowSignups() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) bool { return v.AllowSignups }).(pulumi.BoolOutput)
}

// Allow tenants to invite new users via an invitation link.
func (o WorkspaceAuthPolicyOutput) AllowTenantInvitations() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) bool { return v.AllowTenantInvitations }).(pulumi.BoolOutput)
}

// Whether unverified users are allowed to log in.
func (o WorkspaceAuthPolicyOutput) AllowUnverifiedUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) bool { return v.AllowUnverifiedUsers }).(pulumi.BoolOutput)
}

// The authentication strategy to use for people logging in.
//
//	Must be one of "EmailAndPassword", "Code", "MagicLink", "NoLocalAuthentication", "SmsCode"
func (o WorkspaceAuthPolicyOutput) AuthStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) string { return v.AuthStrategy }).(pulumi.StringOutput)
}

// Whether users can create API tokens.
func (o WorkspaceAuthPolicyOutput) EnableApiTokens() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) bool { return v.EnableApiTokens }).(pulumi.BoolOutput)
}

// Whether granular roles and permissions are enabled.
func (o WorkspaceAuthPolicyOutput) EnableRoles() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) bool { return v.EnableRoles }).(pulumi.BoolOutput)
}

// The expiration time for the JWT access tokens issued by Frontegg.
func (o WorkspaceAuthPolicyOutput) JwtAccessTokenExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) int { return v.JwtAccessTokenExpiration }).(pulumi.IntOutput)
}

// The algorithm Frontegg uses to sign JWT tokens.
func (o WorkspaceAuthPolicyOutput) JwtAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) *string { return v.JwtAlgorithm }).(pulumi.StringPtrOutput)
}

// The public key that Frontegg uses to sign JWT tokens.
func (o WorkspaceAuthPolicyOutput) JwtPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) *string { return v.JwtPublicKey }).(pulumi.StringPtrOutput)
}

// The expiration time for the JWT refresh tokens issued by Frontegg.
func (o WorkspaceAuthPolicyOutput) JwtRefreshTokenExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) int { return v.JwtRefreshTokenExpiration }).(pulumi.IntOutput)
}

// Type of tokens users will be able to generate.
//
//	Must be one of "ClientCredentials" or "AccessToken".
func (o WorkspaceAuthPolicyOutput) MachineToMachineAuthStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) *string { return v.MachineToMachineAuthStrategy }).(pulumi.StringPtrOutput)
}

// The SameSite policy to use for Frontegg cookies.
//
//	Must be one of "none", "lax", or "strict".
func (o WorkspaceAuthPolicyOutput) SameSiteCookiePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAuthPolicy) string { return v.SameSiteCookiePolicy }).(pulumi.StringOutput)
}

type WorkspaceAuthPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAuthPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAuthPolicy)(nil)).Elem()
}

func (o WorkspaceAuthPolicyPtrOutput) ToWorkspaceAuthPolicyPtrOutput() WorkspaceAuthPolicyPtrOutput {
	return o
}

func (o WorkspaceAuthPolicyPtrOutput) ToWorkspaceAuthPolicyPtrOutputWithContext(ctx context.Context) WorkspaceAuthPolicyPtrOutput {
	return o
}

func (o WorkspaceAuthPolicyPtrOutput) Elem() WorkspaceAuthPolicyOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) WorkspaceAuthPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceAuthPolicy
		return ret
	}).(WorkspaceAuthPolicyOutput)
}

// Whether users are allowed to sign up.
func (o WorkspaceAuthPolicyPtrOutput) AllowSignups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowSignups
	}).(pulumi.BoolPtrOutput)
}

// Allow tenants to invite new users via an invitation link.
func (o WorkspaceAuthPolicyPtrOutput) AllowTenantInvitations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowTenantInvitations
	}).(pulumi.BoolPtrOutput)
}

// Whether unverified users are allowed to log in.
func (o WorkspaceAuthPolicyPtrOutput) AllowUnverifiedUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowUnverifiedUsers
	}).(pulumi.BoolPtrOutput)
}

// The authentication strategy to use for people logging in.
//
//	Must be one of "EmailAndPassword", "Code", "MagicLink", "NoLocalAuthentication", "SmsCode"
func (o WorkspaceAuthPolicyPtrOutput) AuthStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.AuthStrategy
	}).(pulumi.StringPtrOutput)
}

// Whether users can create API tokens.
func (o WorkspaceAuthPolicyPtrOutput) EnableApiTokens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableApiTokens
	}).(pulumi.BoolPtrOutput)
}

// Whether granular roles and permissions are enabled.
func (o WorkspaceAuthPolicyPtrOutput) EnableRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableRoles
	}).(pulumi.BoolPtrOutput)
}

// The expiration time for the JWT access tokens issued by Frontegg.
func (o WorkspaceAuthPolicyPtrOutput) JwtAccessTokenExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.JwtAccessTokenExpiration
	}).(pulumi.IntPtrOutput)
}

// The algorithm Frontegg uses to sign JWT tokens.
func (o WorkspaceAuthPolicyPtrOutput) JwtAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *string {
		if v == nil {
			return nil
		}
		return v.JwtAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The public key that Frontegg uses to sign JWT tokens.
func (o WorkspaceAuthPolicyPtrOutput) JwtPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *string {
		if v == nil {
			return nil
		}
		return v.JwtPublicKey
	}).(pulumi.StringPtrOutput)
}

// The expiration time for the JWT refresh tokens issued by Frontegg.
func (o WorkspaceAuthPolicyPtrOutput) JwtRefreshTokenExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.JwtRefreshTokenExpiration
	}).(pulumi.IntPtrOutput)
}

// Type of tokens users will be able to generate.
//
//	Must be one of "ClientCredentials" or "AccessToken".
func (o WorkspaceAuthPolicyPtrOutput) MachineToMachineAuthStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MachineToMachineAuthStrategy
	}).(pulumi.StringPtrOutput)
}

// The SameSite policy to use for Frontegg cookies.
//
//	Must be one of "none", "lax", or "strict".
func (o WorkspaceAuthPolicyPtrOutput) SameSiteCookiePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAuthPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SameSiteCookiePolicy
	}).(pulumi.StringPtrOutput)
}

type WorkspaceBotDetectionEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceBotDetectionEmailInput is an input type that accepts WorkspaceBotDetectionEmailArgs and WorkspaceBotDetectionEmailOutput values.
// You can construct a concrete instance of `WorkspaceBotDetectionEmailInput` via:
//
//	WorkspaceBotDetectionEmailArgs{...}
type WorkspaceBotDetectionEmailInput interface {
	pulumi.Input

	ToWorkspaceBotDetectionEmailOutput() WorkspaceBotDetectionEmailOutput
	ToWorkspaceBotDetectionEmailOutputWithContext(context.Context) WorkspaceBotDetectionEmailOutput
}

type WorkspaceBotDetectionEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceBotDetectionEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBotDetectionEmail)(nil)).Elem()
}

func (i WorkspaceBotDetectionEmailArgs) ToWorkspaceBotDetectionEmailOutput() WorkspaceBotDetectionEmailOutput {
	return i.ToWorkspaceBotDetectionEmailOutputWithContext(context.Background())
}

func (i WorkspaceBotDetectionEmailArgs) ToWorkspaceBotDetectionEmailOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBotDetectionEmailOutput)
}

func (i WorkspaceBotDetectionEmailArgs) ToWorkspaceBotDetectionEmailPtrOutput() WorkspaceBotDetectionEmailPtrOutput {
	return i.ToWorkspaceBotDetectionEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceBotDetectionEmailArgs) ToWorkspaceBotDetectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBotDetectionEmailOutput).ToWorkspaceBotDetectionEmailPtrOutputWithContext(ctx)
}

// WorkspaceBotDetectionEmailPtrInput is an input type that accepts WorkspaceBotDetectionEmailArgs, WorkspaceBotDetectionEmailPtr and WorkspaceBotDetectionEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceBotDetectionEmailPtrInput` via:
//
//	        WorkspaceBotDetectionEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceBotDetectionEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceBotDetectionEmailPtrOutput() WorkspaceBotDetectionEmailPtrOutput
	ToWorkspaceBotDetectionEmailPtrOutputWithContext(context.Context) WorkspaceBotDetectionEmailPtrOutput
}

type workspaceBotDetectionEmailPtrType WorkspaceBotDetectionEmailArgs

func WorkspaceBotDetectionEmailPtr(v *WorkspaceBotDetectionEmailArgs) WorkspaceBotDetectionEmailPtrInput {
	return (*workspaceBotDetectionEmailPtrType)(v)
}

func (*workspaceBotDetectionEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBotDetectionEmail)(nil)).Elem()
}

func (i *workspaceBotDetectionEmailPtrType) ToWorkspaceBotDetectionEmailPtrOutput() WorkspaceBotDetectionEmailPtrOutput {
	return i.ToWorkspaceBotDetectionEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceBotDetectionEmailPtrType) ToWorkspaceBotDetectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBotDetectionEmailPtrOutput)
}

type WorkspaceBotDetectionEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceBotDetectionEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBotDetectionEmail)(nil)).Elem()
}

func (o WorkspaceBotDetectionEmailOutput) ToWorkspaceBotDetectionEmailOutput() WorkspaceBotDetectionEmailOutput {
	return o
}

func (o WorkspaceBotDetectionEmailOutput) ToWorkspaceBotDetectionEmailOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailOutput {
	return o
}

func (o WorkspaceBotDetectionEmailOutput) ToWorkspaceBotDetectionEmailPtrOutput() WorkspaceBotDetectionEmailPtrOutput {
	return o.ToWorkspaceBotDetectionEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceBotDetectionEmailOutput) ToWorkspaceBotDetectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceBotDetectionEmail) *WorkspaceBotDetectionEmail {
		return &v
	}).(WorkspaceBotDetectionEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBotDetectionEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBotDetectionEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBotDetectionEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBotDetectionEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBotDetectionEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBotDetectionEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBotDetectionEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceBotDetectionEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceBotDetectionEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBotDetectionEmail)(nil)).Elem()
}

func (o WorkspaceBotDetectionEmailPtrOutput) ToWorkspaceBotDetectionEmailPtrOutput() WorkspaceBotDetectionEmailPtrOutput {
	return o
}

func (o WorkspaceBotDetectionEmailPtrOutput) ToWorkspaceBotDetectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBotDetectionEmailPtrOutput {
	return o
}

func (o WorkspaceBotDetectionEmailPtrOutput) Elem() WorkspaceBotDetectionEmailOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) WorkspaceBotDetectionEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceBotDetectionEmail
		return ret
	}).(WorkspaceBotDetectionEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBotDetectionEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBotDetectionEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBotDetectionEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBotDetectionEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBotDetectionEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBotDetectionEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBotDetectionEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceBruteForceProtectionEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceBruteForceProtectionEmailInput is an input type that accepts WorkspaceBruteForceProtectionEmailArgs and WorkspaceBruteForceProtectionEmailOutput values.
// You can construct a concrete instance of `WorkspaceBruteForceProtectionEmailInput` via:
//
//	WorkspaceBruteForceProtectionEmailArgs{...}
type WorkspaceBruteForceProtectionEmailInput interface {
	pulumi.Input

	ToWorkspaceBruteForceProtectionEmailOutput() WorkspaceBruteForceProtectionEmailOutput
	ToWorkspaceBruteForceProtectionEmailOutputWithContext(context.Context) WorkspaceBruteForceProtectionEmailOutput
}

type WorkspaceBruteForceProtectionEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceBruteForceProtectionEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBruteForceProtectionEmail)(nil)).Elem()
}

func (i WorkspaceBruteForceProtectionEmailArgs) ToWorkspaceBruteForceProtectionEmailOutput() WorkspaceBruteForceProtectionEmailOutput {
	return i.ToWorkspaceBruteForceProtectionEmailOutputWithContext(context.Background())
}

func (i WorkspaceBruteForceProtectionEmailArgs) ToWorkspaceBruteForceProtectionEmailOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBruteForceProtectionEmailOutput)
}

func (i WorkspaceBruteForceProtectionEmailArgs) ToWorkspaceBruteForceProtectionEmailPtrOutput() WorkspaceBruteForceProtectionEmailPtrOutput {
	return i.ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceBruteForceProtectionEmailArgs) ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBruteForceProtectionEmailOutput).ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(ctx)
}

// WorkspaceBruteForceProtectionEmailPtrInput is an input type that accepts WorkspaceBruteForceProtectionEmailArgs, WorkspaceBruteForceProtectionEmailPtr and WorkspaceBruteForceProtectionEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceBruteForceProtectionEmailPtrInput` via:
//
//	        WorkspaceBruteForceProtectionEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceBruteForceProtectionEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceBruteForceProtectionEmailPtrOutput() WorkspaceBruteForceProtectionEmailPtrOutput
	ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(context.Context) WorkspaceBruteForceProtectionEmailPtrOutput
}

type workspaceBruteForceProtectionEmailPtrType WorkspaceBruteForceProtectionEmailArgs

func WorkspaceBruteForceProtectionEmailPtr(v *WorkspaceBruteForceProtectionEmailArgs) WorkspaceBruteForceProtectionEmailPtrInput {
	return (*workspaceBruteForceProtectionEmailPtrType)(v)
}

func (*workspaceBruteForceProtectionEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBruteForceProtectionEmail)(nil)).Elem()
}

func (i *workspaceBruteForceProtectionEmailPtrType) ToWorkspaceBruteForceProtectionEmailPtrOutput() WorkspaceBruteForceProtectionEmailPtrOutput {
	return i.ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceBruteForceProtectionEmailPtrType) ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBruteForceProtectionEmailPtrOutput)
}

type WorkspaceBruteForceProtectionEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceBruteForceProtectionEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBruteForceProtectionEmail)(nil)).Elem()
}

func (o WorkspaceBruteForceProtectionEmailOutput) ToWorkspaceBruteForceProtectionEmailOutput() WorkspaceBruteForceProtectionEmailOutput {
	return o
}

func (o WorkspaceBruteForceProtectionEmailOutput) ToWorkspaceBruteForceProtectionEmailOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailOutput {
	return o
}

func (o WorkspaceBruteForceProtectionEmailOutput) ToWorkspaceBruteForceProtectionEmailPtrOutput() WorkspaceBruteForceProtectionEmailPtrOutput {
	return o.ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceBruteForceProtectionEmailOutput) ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceBruteForceProtectionEmail) *WorkspaceBruteForceProtectionEmail {
		return &v
	}).(WorkspaceBruteForceProtectionEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBruteForceProtectionEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBruteForceProtectionEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBruteForceProtectionEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBruteForceProtectionEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBruteForceProtectionEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBruteForceProtectionEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBruteForceProtectionEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceBruteForceProtectionEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceBruteForceProtectionEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBruteForceProtectionEmail)(nil)).Elem()
}

func (o WorkspaceBruteForceProtectionEmailPtrOutput) ToWorkspaceBruteForceProtectionEmailPtrOutput() WorkspaceBruteForceProtectionEmailPtrOutput {
	return o
}

func (o WorkspaceBruteForceProtectionEmailPtrOutput) ToWorkspaceBruteForceProtectionEmailPtrOutputWithContext(ctx context.Context) WorkspaceBruteForceProtectionEmailPtrOutput {
	return o
}

func (o WorkspaceBruteForceProtectionEmailPtrOutput) Elem() WorkspaceBruteForceProtectionEmailOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) WorkspaceBruteForceProtectionEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceBruteForceProtectionEmail
		return ret
	}).(WorkspaceBruteForceProtectionEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBruteForceProtectionEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBruteForceProtectionEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceBulkTenantsInvitesEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceBulkTenantsInvitesEmailInput is an input type that accepts WorkspaceBulkTenantsInvitesEmailArgs and WorkspaceBulkTenantsInvitesEmailOutput values.
// You can construct a concrete instance of `WorkspaceBulkTenantsInvitesEmailInput` via:
//
//	WorkspaceBulkTenantsInvitesEmailArgs{...}
type WorkspaceBulkTenantsInvitesEmailInput interface {
	pulumi.Input

	ToWorkspaceBulkTenantsInvitesEmailOutput() WorkspaceBulkTenantsInvitesEmailOutput
	ToWorkspaceBulkTenantsInvitesEmailOutputWithContext(context.Context) WorkspaceBulkTenantsInvitesEmailOutput
}

type WorkspaceBulkTenantsInvitesEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceBulkTenantsInvitesEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBulkTenantsInvitesEmail)(nil)).Elem()
}

func (i WorkspaceBulkTenantsInvitesEmailArgs) ToWorkspaceBulkTenantsInvitesEmailOutput() WorkspaceBulkTenantsInvitesEmailOutput {
	return i.ToWorkspaceBulkTenantsInvitesEmailOutputWithContext(context.Background())
}

func (i WorkspaceBulkTenantsInvitesEmailArgs) ToWorkspaceBulkTenantsInvitesEmailOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBulkTenantsInvitesEmailOutput)
}

func (i WorkspaceBulkTenantsInvitesEmailArgs) ToWorkspaceBulkTenantsInvitesEmailPtrOutput() WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return i.ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceBulkTenantsInvitesEmailArgs) ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBulkTenantsInvitesEmailOutput).ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(ctx)
}

// WorkspaceBulkTenantsInvitesEmailPtrInput is an input type that accepts WorkspaceBulkTenantsInvitesEmailArgs, WorkspaceBulkTenantsInvitesEmailPtr and WorkspaceBulkTenantsInvitesEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceBulkTenantsInvitesEmailPtrInput` via:
//
//	        WorkspaceBulkTenantsInvitesEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceBulkTenantsInvitesEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceBulkTenantsInvitesEmailPtrOutput() WorkspaceBulkTenantsInvitesEmailPtrOutput
	ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(context.Context) WorkspaceBulkTenantsInvitesEmailPtrOutput
}

type workspaceBulkTenantsInvitesEmailPtrType WorkspaceBulkTenantsInvitesEmailArgs

func WorkspaceBulkTenantsInvitesEmailPtr(v *WorkspaceBulkTenantsInvitesEmailArgs) WorkspaceBulkTenantsInvitesEmailPtrInput {
	return (*workspaceBulkTenantsInvitesEmailPtrType)(v)
}

func (*workspaceBulkTenantsInvitesEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBulkTenantsInvitesEmail)(nil)).Elem()
}

func (i *workspaceBulkTenantsInvitesEmailPtrType) ToWorkspaceBulkTenantsInvitesEmailPtrOutput() WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return i.ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceBulkTenantsInvitesEmailPtrType) ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceBulkTenantsInvitesEmailPtrOutput)
}

type WorkspaceBulkTenantsInvitesEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceBulkTenantsInvitesEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceBulkTenantsInvitesEmail)(nil)).Elem()
}

func (o WorkspaceBulkTenantsInvitesEmailOutput) ToWorkspaceBulkTenantsInvitesEmailOutput() WorkspaceBulkTenantsInvitesEmailOutput {
	return o
}

func (o WorkspaceBulkTenantsInvitesEmailOutput) ToWorkspaceBulkTenantsInvitesEmailOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailOutput {
	return o
}

func (o WorkspaceBulkTenantsInvitesEmailOutput) ToWorkspaceBulkTenantsInvitesEmailPtrOutput() WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return o.ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceBulkTenantsInvitesEmailOutput) ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceBulkTenantsInvitesEmail) *WorkspaceBulkTenantsInvitesEmail {
		return &v
	}).(WorkspaceBulkTenantsInvitesEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBulkTenantsInvitesEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBulkTenantsInvitesEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBulkTenantsInvitesEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBulkTenantsInvitesEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBulkTenantsInvitesEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBulkTenantsInvitesEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceBulkTenantsInvitesEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceBulkTenantsInvitesEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceBulkTenantsInvitesEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceBulkTenantsInvitesEmail)(nil)).Elem()
}

func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) ToWorkspaceBulkTenantsInvitesEmailPtrOutput() WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return o
}

func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) ToWorkspaceBulkTenantsInvitesEmailPtrOutputWithContext(ctx context.Context) WorkspaceBulkTenantsInvitesEmailPtrOutput {
	return o
}

func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) Elem() WorkspaceBulkTenantsInvitesEmailOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) WorkspaceBulkTenantsInvitesEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceBulkTenantsInvitesEmail
		return ret
	}).(WorkspaceBulkTenantsInvitesEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceBulkTenantsInvitesEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceBulkTenantsInvitesEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceCaptchaPolicy struct {
	// Email addresses that should be exempt from CAPTCHA checks.
	IgnoredEmails []string `pulumi:"ignoredEmails"`
	// The minimum CAPTCHA score to accept. Set to 0.0 to accept all scores.
	MinScore float64 `pulumi:"minScore"`
	// The reCAPTCHA secret key to use.
	SecretKey string `pulumi:"secretKey"`
	// The reCAPTCHA site key to use.
	SiteKey string `pulumi:"siteKey"`
}

// WorkspaceCaptchaPolicyInput is an input type that accepts WorkspaceCaptchaPolicyArgs and WorkspaceCaptchaPolicyOutput values.
// You can construct a concrete instance of `WorkspaceCaptchaPolicyInput` via:
//
//	WorkspaceCaptchaPolicyArgs{...}
type WorkspaceCaptchaPolicyInput interface {
	pulumi.Input

	ToWorkspaceCaptchaPolicyOutput() WorkspaceCaptchaPolicyOutput
	ToWorkspaceCaptchaPolicyOutputWithContext(context.Context) WorkspaceCaptchaPolicyOutput
}

type WorkspaceCaptchaPolicyArgs struct {
	// Email addresses that should be exempt from CAPTCHA checks.
	IgnoredEmails pulumi.StringArrayInput `pulumi:"ignoredEmails"`
	// The minimum CAPTCHA score to accept. Set to 0.0 to accept all scores.
	MinScore pulumi.Float64Input `pulumi:"minScore"`
	// The reCAPTCHA secret key to use.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// The reCAPTCHA site key to use.
	SiteKey pulumi.StringInput `pulumi:"siteKey"`
}

func (WorkspaceCaptchaPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceCaptchaPolicy)(nil)).Elem()
}

func (i WorkspaceCaptchaPolicyArgs) ToWorkspaceCaptchaPolicyOutput() WorkspaceCaptchaPolicyOutput {
	return i.ToWorkspaceCaptchaPolicyOutputWithContext(context.Background())
}

func (i WorkspaceCaptchaPolicyArgs) ToWorkspaceCaptchaPolicyOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCaptchaPolicyOutput)
}

func (i WorkspaceCaptchaPolicyArgs) ToWorkspaceCaptchaPolicyPtrOutput() WorkspaceCaptchaPolicyPtrOutput {
	return i.ToWorkspaceCaptchaPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceCaptchaPolicyArgs) ToWorkspaceCaptchaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCaptchaPolicyOutput).ToWorkspaceCaptchaPolicyPtrOutputWithContext(ctx)
}

// WorkspaceCaptchaPolicyPtrInput is an input type that accepts WorkspaceCaptchaPolicyArgs, WorkspaceCaptchaPolicyPtr and WorkspaceCaptchaPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceCaptchaPolicyPtrInput` via:
//
//	        WorkspaceCaptchaPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceCaptchaPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceCaptchaPolicyPtrOutput() WorkspaceCaptchaPolicyPtrOutput
	ToWorkspaceCaptchaPolicyPtrOutputWithContext(context.Context) WorkspaceCaptchaPolicyPtrOutput
}

type workspaceCaptchaPolicyPtrType WorkspaceCaptchaPolicyArgs

func WorkspaceCaptchaPolicyPtr(v *WorkspaceCaptchaPolicyArgs) WorkspaceCaptchaPolicyPtrInput {
	return (*workspaceCaptchaPolicyPtrType)(v)
}

func (*workspaceCaptchaPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCaptchaPolicy)(nil)).Elem()
}

func (i *workspaceCaptchaPolicyPtrType) ToWorkspaceCaptchaPolicyPtrOutput() WorkspaceCaptchaPolicyPtrOutput {
	return i.ToWorkspaceCaptchaPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceCaptchaPolicyPtrType) ToWorkspaceCaptchaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCaptchaPolicyPtrOutput)
}

type WorkspaceCaptchaPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceCaptchaPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceCaptchaPolicy)(nil)).Elem()
}

func (o WorkspaceCaptchaPolicyOutput) ToWorkspaceCaptchaPolicyOutput() WorkspaceCaptchaPolicyOutput {
	return o
}

func (o WorkspaceCaptchaPolicyOutput) ToWorkspaceCaptchaPolicyOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyOutput {
	return o
}

func (o WorkspaceCaptchaPolicyOutput) ToWorkspaceCaptchaPolicyPtrOutput() WorkspaceCaptchaPolicyPtrOutput {
	return o.ToWorkspaceCaptchaPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceCaptchaPolicyOutput) ToWorkspaceCaptchaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceCaptchaPolicy) *WorkspaceCaptchaPolicy {
		return &v
	}).(WorkspaceCaptchaPolicyPtrOutput)
}

// Email addresses that should be exempt from CAPTCHA checks.
func (o WorkspaceCaptchaPolicyOutput) IgnoredEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceCaptchaPolicy) []string { return v.IgnoredEmails }).(pulumi.StringArrayOutput)
}

// The minimum CAPTCHA score to accept. Set to 0.0 to accept all scores.
func (o WorkspaceCaptchaPolicyOutput) MinScore() pulumi.Float64Output {
	return o.ApplyT(func(v WorkspaceCaptchaPolicy) float64 { return v.MinScore }).(pulumi.Float64Output)
}

// The reCAPTCHA secret key to use.
func (o WorkspaceCaptchaPolicyOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceCaptchaPolicy) string { return v.SecretKey }).(pulumi.StringOutput)
}

// The reCAPTCHA site key to use.
func (o WorkspaceCaptchaPolicyOutput) SiteKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceCaptchaPolicy) string { return v.SiteKey }).(pulumi.StringOutput)
}

type WorkspaceCaptchaPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceCaptchaPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCaptchaPolicy)(nil)).Elem()
}

func (o WorkspaceCaptchaPolicyPtrOutput) ToWorkspaceCaptchaPolicyPtrOutput() WorkspaceCaptchaPolicyPtrOutput {
	return o
}

func (o WorkspaceCaptchaPolicyPtrOutput) ToWorkspaceCaptchaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceCaptchaPolicyPtrOutput {
	return o
}

func (o WorkspaceCaptchaPolicyPtrOutput) Elem() WorkspaceCaptchaPolicyOutput {
	return o.ApplyT(func(v *WorkspaceCaptchaPolicy) WorkspaceCaptchaPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceCaptchaPolicy
		return ret
	}).(WorkspaceCaptchaPolicyOutput)
}

// Email addresses that should be exempt from CAPTCHA checks.
func (o WorkspaceCaptchaPolicyPtrOutput) IgnoredEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceCaptchaPolicy) []string {
		if v == nil {
			return nil
		}
		return v.IgnoredEmails
	}).(pulumi.StringArrayOutput)
}

// The minimum CAPTCHA score to accept. Set to 0.0 to accept all scores.
func (o WorkspaceCaptchaPolicyPtrOutput) MinScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkspaceCaptchaPolicy) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinScore
	}).(pulumi.Float64PtrOutput)
}

// The reCAPTCHA secret key to use.
func (o WorkspaceCaptchaPolicyPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceCaptchaPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// The reCAPTCHA site key to use.
func (o WorkspaceCaptchaPolicyPtrOutput) SiteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceCaptchaPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SiteKey
	}).(pulumi.StringPtrOutput)
}

type WorkspaceEmailVerificationEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceEmailVerificationEmailInput is an input type that accepts WorkspaceEmailVerificationEmailArgs and WorkspaceEmailVerificationEmailOutput values.
// You can construct a concrete instance of `WorkspaceEmailVerificationEmailInput` via:
//
//	WorkspaceEmailVerificationEmailArgs{...}
type WorkspaceEmailVerificationEmailInput interface {
	pulumi.Input

	ToWorkspaceEmailVerificationEmailOutput() WorkspaceEmailVerificationEmailOutput
	ToWorkspaceEmailVerificationEmailOutputWithContext(context.Context) WorkspaceEmailVerificationEmailOutput
}

type WorkspaceEmailVerificationEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceEmailVerificationEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceEmailVerificationEmail)(nil)).Elem()
}

func (i WorkspaceEmailVerificationEmailArgs) ToWorkspaceEmailVerificationEmailOutput() WorkspaceEmailVerificationEmailOutput {
	return i.ToWorkspaceEmailVerificationEmailOutputWithContext(context.Background())
}

func (i WorkspaceEmailVerificationEmailArgs) ToWorkspaceEmailVerificationEmailOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceEmailVerificationEmailOutput)
}

func (i WorkspaceEmailVerificationEmailArgs) ToWorkspaceEmailVerificationEmailPtrOutput() WorkspaceEmailVerificationEmailPtrOutput {
	return i.ToWorkspaceEmailVerificationEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceEmailVerificationEmailArgs) ToWorkspaceEmailVerificationEmailPtrOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceEmailVerificationEmailOutput).ToWorkspaceEmailVerificationEmailPtrOutputWithContext(ctx)
}

// WorkspaceEmailVerificationEmailPtrInput is an input type that accepts WorkspaceEmailVerificationEmailArgs, WorkspaceEmailVerificationEmailPtr and WorkspaceEmailVerificationEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceEmailVerificationEmailPtrInput` via:
//
//	        WorkspaceEmailVerificationEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceEmailVerificationEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceEmailVerificationEmailPtrOutput() WorkspaceEmailVerificationEmailPtrOutput
	ToWorkspaceEmailVerificationEmailPtrOutputWithContext(context.Context) WorkspaceEmailVerificationEmailPtrOutput
}

type workspaceEmailVerificationEmailPtrType WorkspaceEmailVerificationEmailArgs

func WorkspaceEmailVerificationEmailPtr(v *WorkspaceEmailVerificationEmailArgs) WorkspaceEmailVerificationEmailPtrInput {
	return (*workspaceEmailVerificationEmailPtrType)(v)
}

func (*workspaceEmailVerificationEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceEmailVerificationEmail)(nil)).Elem()
}

func (i *workspaceEmailVerificationEmailPtrType) ToWorkspaceEmailVerificationEmailPtrOutput() WorkspaceEmailVerificationEmailPtrOutput {
	return i.ToWorkspaceEmailVerificationEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceEmailVerificationEmailPtrType) ToWorkspaceEmailVerificationEmailPtrOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceEmailVerificationEmailPtrOutput)
}

type WorkspaceEmailVerificationEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceEmailVerificationEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceEmailVerificationEmail)(nil)).Elem()
}

func (o WorkspaceEmailVerificationEmailOutput) ToWorkspaceEmailVerificationEmailOutput() WorkspaceEmailVerificationEmailOutput {
	return o
}

func (o WorkspaceEmailVerificationEmailOutput) ToWorkspaceEmailVerificationEmailOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailOutput {
	return o
}

func (o WorkspaceEmailVerificationEmailOutput) ToWorkspaceEmailVerificationEmailPtrOutput() WorkspaceEmailVerificationEmailPtrOutput {
	return o.ToWorkspaceEmailVerificationEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceEmailVerificationEmailOutput) ToWorkspaceEmailVerificationEmailPtrOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceEmailVerificationEmail) *WorkspaceEmailVerificationEmail {
		return &v
	}).(WorkspaceEmailVerificationEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceEmailVerificationEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceEmailVerificationEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceEmailVerificationEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceEmailVerificationEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceEmailVerificationEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceEmailVerificationEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceEmailVerificationEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceEmailVerificationEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceEmailVerificationEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceEmailVerificationEmail)(nil)).Elem()
}

func (o WorkspaceEmailVerificationEmailPtrOutput) ToWorkspaceEmailVerificationEmailPtrOutput() WorkspaceEmailVerificationEmailPtrOutput {
	return o
}

func (o WorkspaceEmailVerificationEmailPtrOutput) ToWorkspaceEmailVerificationEmailPtrOutputWithContext(ctx context.Context) WorkspaceEmailVerificationEmailPtrOutput {
	return o
}

func (o WorkspaceEmailVerificationEmailPtrOutput) Elem() WorkspaceEmailVerificationEmailOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) WorkspaceEmailVerificationEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceEmailVerificationEmail
		return ret
	}).(WorkspaceEmailVerificationEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceEmailVerificationEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceEmailVerificationEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceEmailVerificationEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceEmailVerificationEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceEmailVerificationEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceEmailVerificationEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceEmailVerificationEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceFacebookSocialLogin struct {
	// The client ID of the Facebook application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId *string `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised *bool `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl string `pulumi:"redirectUrl"`
	// The secret associated with the Facebook application. Required when setting **`customised`** parameter to true.
	Secret *string `pulumi:"secret"`
}

// WorkspaceFacebookSocialLoginInput is an input type that accepts WorkspaceFacebookSocialLoginArgs and WorkspaceFacebookSocialLoginOutput values.
// You can construct a concrete instance of `WorkspaceFacebookSocialLoginInput` via:
//
//	WorkspaceFacebookSocialLoginArgs{...}
type WorkspaceFacebookSocialLoginInput interface {
	pulumi.Input

	ToWorkspaceFacebookSocialLoginOutput() WorkspaceFacebookSocialLoginOutput
	ToWorkspaceFacebookSocialLoginOutputWithContext(context.Context) WorkspaceFacebookSocialLoginOutput
}

type WorkspaceFacebookSocialLoginArgs struct {
	// The client ID of the Facebook application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised pulumi.BoolPtrInput `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// The secret associated with the Facebook application. Required when setting **`customised`** parameter to true.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (WorkspaceFacebookSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceFacebookSocialLogin)(nil)).Elem()
}

func (i WorkspaceFacebookSocialLoginArgs) ToWorkspaceFacebookSocialLoginOutput() WorkspaceFacebookSocialLoginOutput {
	return i.ToWorkspaceFacebookSocialLoginOutputWithContext(context.Background())
}

func (i WorkspaceFacebookSocialLoginArgs) ToWorkspaceFacebookSocialLoginOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFacebookSocialLoginOutput)
}

func (i WorkspaceFacebookSocialLoginArgs) ToWorkspaceFacebookSocialLoginPtrOutput() WorkspaceFacebookSocialLoginPtrOutput {
	return i.ToWorkspaceFacebookSocialLoginPtrOutputWithContext(context.Background())
}

func (i WorkspaceFacebookSocialLoginArgs) ToWorkspaceFacebookSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFacebookSocialLoginOutput).ToWorkspaceFacebookSocialLoginPtrOutputWithContext(ctx)
}

// WorkspaceFacebookSocialLoginPtrInput is an input type that accepts WorkspaceFacebookSocialLoginArgs, WorkspaceFacebookSocialLoginPtr and WorkspaceFacebookSocialLoginPtrOutput values.
// You can construct a concrete instance of `WorkspaceFacebookSocialLoginPtrInput` via:
//
//	        WorkspaceFacebookSocialLoginArgs{...}
//
//	or:
//
//	        nil
type WorkspaceFacebookSocialLoginPtrInput interface {
	pulumi.Input

	ToWorkspaceFacebookSocialLoginPtrOutput() WorkspaceFacebookSocialLoginPtrOutput
	ToWorkspaceFacebookSocialLoginPtrOutputWithContext(context.Context) WorkspaceFacebookSocialLoginPtrOutput
}

type workspaceFacebookSocialLoginPtrType WorkspaceFacebookSocialLoginArgs

func WorkspaceFacebookSocialLoginPtr(v *WorkspaceFacebookSocialLoginArgs) WorkspaceFacebookSocialLoginPtrInput {
	return (*workspaceFacebookSocialLoginPtrType)(v)
}

func (*workspaceFacebookSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceFacebookSocialLogin)(nil)).Elem()
}

func (i *workspaceFacebookSocialLoginPtrType) ToWorkspaceFacebookSocialLoginPtrOutput() WorkspaceFacebookSocialLoginPtrOutput {
	return i.ToWorkspaceFacebookSocialLoginPtrOutputWithContext(context.Background())
}

func (i *workspaceFacebookSocialLoginPtrType) ToWorkspaceFacebookSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFacebookSocialLoginPtrOutput)
}

type WorkspaceFacebookSocialLoginOutput struct{ *pulumi.OutputState }

func (WorkspaceFacebookSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceFacebookSocialLogin)(nil)).Elem()
}

func (o WorkspaceFacebookSocialLoginOutput) ToWorkspaceFacebookSocialLoginOutput() WorkspaceFacebookSocialLoginOutput {
	return o
}

func (o WorkspaceFacebookSocialLoginOutput) ToWorkspaceFacebookSocialLoginOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginOutput {
	return o
}

func (o WorkspaceFacebookSocialLoginOutput) ToWorkspaceFacebookSocialLoginPtrOutput() WorkspaceFacebookSocialLoginPtrOutput {
	return o.ToWorkspaceFacebookSocialLoginPtrOutputWithContext(context.Background())
}

func (o WorkspaceFacebookSocialLoginOutput) ToWorkspaceFacebookSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceFacebookSocialLogin) *WorkspaceFacebookSocialLogin {
		return &v
	}).(WorkspaceFacebookSocialLoginPtrOutput)
}

// The client ID of the Facebook application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceFacebookSocialLoginOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceFacebookSocialLogin) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceFacebookSocialLoginOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceFacebookSocialLogin) *bool { return v.Customised }).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceFacebookSocialLoginOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceFacebookSocialLogin) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// The secret associated with the Facebook application. Required when setting **`customised`** parameter to true.
func (o WorkspaceFacebookSocialLoginOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceFacebookSocialLogin) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type WorkspaceFacebookSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceFacebookSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceFacebookSocialLogin)(nil)).Elem()
}

func (o WorkspaceFacebookSocialLoginPtrOutput) ToWorkspaceFacebookSocialLoginPtrOutput() WorkspaceFacebookSocialLoginPtrOutput {
	return o
}

func (o WorkspaceFacebookSocialLoginPtrOutput) ToWorkspaceFacebookSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceFacebookSocialLoginPtrOutput {
	return o
}

func (o WorkspaceFacebookSocialLoginPtrOutput) Elem() WorkspaceFacebookSocialLoginOutput {
	return o.ApplyT(func(v *WorkspaceFacebookSocialLogin) WorkspaceFacebookSocialLogin {
		if v != nil {
			return *v
		}
		var ret WorkspaceFacebookSocialLogin
		return ret
	}).(WorkspaceFacebookSocialLoginOutput)
}

// The client ID of the Facebook application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceFacebookSocialLoginPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceFacebookSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceFacebookSocialLoginPtrOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceFacebookSocialLogin) *bool {
		if v == nil {
			return nil
		}
		return v.Customised
	}).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceFacebookSocialLoginPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceFacebookSocialLogin) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Facebook application. Required when setting **`customised`** parameter to true.
func (o WorkspaceFacebookSocialLoginPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceFacebookSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type WorkspaceGithubSocialLogin struct {
	// The client ID of the GitHub application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId *string `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised *bool `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl string `pulumi:"redirectUrl"`
	// The secret associated with the GitHub application. Required when setting **`customised`** parameter to true.
	Secret *string `pulumi:"secret"`
}

// WorkspaceGithubSocialLoginInput is an input type that accepts WorkspaceGithubSocialLoginArgs and WorkspaceGithubSocialLoginOutput values.
// You can construct a concrete instance of `WorkspaceGithubSocialLoginInput` via:
//
//	WorkspaceGithubSocialLoginArgs{...}
type WorkspaceGithubSocialLoginInput interface {
	pulumi.Input

	ToWorkspaceGithubSocialLoginOutput() WorkspaceGithubSocialLoginOutput
	ToWorkspaceGithubSocialLoginOutputWithContext(context.Context) WorkspaceGithubSocialLoginOutput
}

type WorkspaceGithubSocialLoginArgs struct {
	// The client ID of the GitHub application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised pulumi.BoolPtrInput `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// The secret associated with the GitHub application. Required when setting **`customised`** parameter to true.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (WorkspaceGithubSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGithubSocialLogin)(nil)).Elem()
}

func (i WorkspaceGithubSocialLoginArgs) ToWorkspaceGithubSocialLoginOutput() WorkspaceGithubSocialLoginOutput {
	return i.ToWorkspaceGithubSocialLoginOutputWithContext(context.Background())
}

func (i WorkspaceGithubSocialLoginArgs) ToWorkspaceGithubSocialLoginOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubSocialLoginOutput)
}

func (i WorkspaceGithubSocialLoginArgs) ToWorkspaceGithubSocialLoginPtrOutput() WorkspaceGithubSocialLoginPtrOutput {
	return i.ToWorkspaceGithubSocialLoginPtrOutputWithContext(context.Background())
}

func (i WorkspaceGithubSocialLoginArgs) ToWorkspaceGithubSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubSocialLoginOutput).ToWorkspaceGithubSocialLoginPtrOutputWithContext(ctx)
}

// WorkspaceGithubSocialLoginPtrInput is an input type that accepts WorkspaceGithubSocialLoginArgs, WorkspaceGithubSocialLoginPtr and WorkspaceGithubSocialLoginPtrOutput values.
// You can construct a concrete instance of `WorkspaceGithubSocialLoginPtrInput` via:
//
//	        WorkspaceGithubSocialLoginArgs{...}
//
//	or:
//
//	        nil
type WorkspaceGithubSocialLoginPtrInput interface {
	pulumi.Input

	ToWorkspaceGithubSocialLoginPtrOutput() WorkspaceGithubSocialLoginPtrOutput
	ToWorkspaceGithubSocialLoginPtrOutputWithContext(context.Context) WorkspaceGithubSocialLoginPtrOutput
}

type workspaceGithubSocialLoginPtrType WorkspaceGithubSocialLoginArgs

func WorkspaceGithubSocialLoginPtr(v *WorkspaceGithubSocialLoginArgs) WorkspaceGithubSocialLoginPtrInput {
	return (*workspaceGithubSocialLoginPtrType)(v)
}

func (*workspaceGithubSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGithubSocialLogin)(nil)).Elem()
}

func (i *workspaceGithubSocialLoginPtrType) ToWorkspaceGithubSocialLoginPtrOutput() WorkspaceGithubSocialLoginPtrOutput {
	return i.ToWorkspaceGithubSocialLoginPtrOutputWithContext(context.Background())
}

func (i *workspaceGithubSocialLoginPtrType) ToWorkspaceGithubSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubSocialLoginPtrOutput)
}

type WorkspaceGithubSocialLoginOutput struct{ *pulumi.OutputState }

func (WorkspaceGithubSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGithubSocialLogin)(nil)).Elem()
}

func (o WorkspaceGithubSocialLoginOutput) ToWorkspaceGithubSocialLoginOutput() WorkspaceGithubSocialLoginOutput {
	return o
}

func (o WorkspaceGithubSocialLoginOutput) ToWorkspaceGithubSocialLoginOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginOutput {
	return o
}

func (o WorkspaceGithubSocialLoginOutput) ToWorkspaceGithubSocialLoginPtrOutput() WorkspaceGithubSocialLoginPtrOutput {
	return o.ToWorkspaceGithubSocialLoginPtrOutputWithContext(context.Background())
}

func (o WorkspaceGithubSocialLoginOutput) ToWorkspaceGithubSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceGithubSocialLogin) *WorkspaceGithubSocialLogin {
		return &v
	}).(WorkspaceGithubSocialLoginPtrOutput)
}

// The client ID of the GitHub application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceGithubSocialLoginOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGithubSocialLogin) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceGithubSocialLoginOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceGithubSocialLogin) *bool { return v.Customised }).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceGithubSocialLoginOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGithubSocialLogin) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// The secret associated with the GitHub application. Required when setting **`customised`** parameter to true.
func (o WorkspaceGithubSocialLoginOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGithubSocialLogin) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type WorkspaceGithubSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceGithubSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGithubSocialLogin)(nil)).Elem()
}

func (o WorkspaceGithubSocialLoginPtrOutput) ToWorkspaceGithubSocialLoginPtrOutput() WorkspaceGithubSocialLoginPtrOutput {
	return o
}

func (o WorkspaceGithubSocialLoginPtrOutput) ToWorkspaceGithubSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGithubSocialLoginPtrOutput {
	return o
}

func (o WorkspaceGithubSocialLoginPtrOutput) Elem() WorkspaceGithubSocialLoginOutput {
	return o.ApplyT(func(v *WorkspaceGithubSocialLogin) WorkspaceGithubSocialLogin {
		if v != nil {
			return *v
		}
		var ret WorkspaceGithubSocialLogin
		return ret
	}).(WorkspaceGithubSocialLoginOutput)
}

// The client ID of the GitHub application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceGithubSocialLoginPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceGithubSocialLoginPtrOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubSocialLogin) *bool {
		if v == nil {
			return nil
		}
		return v.Customised
	}).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceGithubSocialLoginPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubSocialLogin) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the GitHub application. Required when setting **`customised`** parameter to true.
func (o WorkspaceGithubSocialLoginPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type WorkspaceGoogleSocialLogin struct {
	// The client ID of the Google application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId *string `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised *bool `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl string `pulumi:"redirectUrl"`
	// The secret associated with the Google application. Required when setting **`customised`** parameter to true.
	Secret *string `pulumi:"secret"`
}

// WorkspaceGoogleSocialLoginInput is an input type that accepts WorkspaceGoogleSocialLoginArgs and WorkspaceGoogleSocialLoginOutput values.
// You can construct a concrete instance of `WorkspaceGoogleSocialLoginInput` via:
//
//	WorkspaceGoogleSocialLoginArgs{...}
type WorkspaceGoogleSocialLoginInput interface {
	pulumi.Input

	ToWorkspaceGoogleSocialLoginOutput() WorkspaceGoogleSocialLoginOutput
	ToWorkspaceGoogleSocialLoginOutputWithContext(context.Context) WorkspaceGoogleSocialLoginOutput
}

type WorkspaceGoogleSocialLoginArgs struct {
	// The client ID of the Google application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised pulumi.BoolPtrInput `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// The secret associated with the Google application. Required when setting **`customised`** parameter to true.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (WorkspaceGoogleSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGoogleSocialLogin)(nil)).Elem()
}

func (i WorkspaceGoogleSocialLoginArgs) ToWorkspaceGoogleSocialLoginOutput() WorkspaceGoogleSocialLoginOutput {
	return i.ToWorkspaceGoogleSocialLoginOutputWithContext(context.Background())
}

func (i WorkspaceGoogleSocialLoginArgs) ToWorkspaceGoogleSocialLoginOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGoogleSocialLoginOutput)
}

func (i WorkspaceGoogleSocialLoginArgs) ToWorkspaceGoogleSocialLoginPtrOutput() WorkspaceGoogleSocialLoginPtrOutput {
	return i.ToWorkspaceGoogleSocialLoginPtrOutputWithContext(context.Background())
}

func (i WorkspaceGoogleSocialLoginArgs) ToWorkspaceGoogleSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGoogleSocialLoginOutput).ToWorkspaceGoogleSocialLoginPtrOutputWithContext(ctx)
}

// WorkspaceGoogleSocialLoginPtrInput is an input type that accepts WorkspaceGoogleSocialLoginArgs, WorkspaceGoogleSocialLoginPtr and WorkspaceGoogleSocialLoginPtrOutput values.
// You can construct a concrete instance of `WorkspaceGoogleSocialLoginPtrInput` via:
//
//	        WorkspaceGoogleSocialLoginArgs{...}
//
//	or:
//
//	        nil
type WorkspaceGoogleSocialLoginPtrInput interface {
	pulumi.Input

	ToWorkspaceGoogleSocialLoginPtrOutput() WorkspaceGoogleSocialLoginPtrOutput
	ToWorkspaceGoogleSocialLoginPtrOutputWithContext(context.Context) WorkspaceGoogleSocialLoginPtrOutput
}

type workspaceGoogleSocialLoginPtrType WorkspaceGoogleSocialLoginArgs

func WorkspaceGoogleSocialLoginPtr(v *WorkspaceGoogleSocialLoginArgs) WorkspaceGoogleSocialLoginPtrInput {
	return (*workspaceGoogleSocialLoginPtrType)(v)
}

func (*workspaceGoogleSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGoogleSocialLogin)(nil)).Elem()
}

func (i *workspaceGoogleSocialLoginPtrType) ToWorkspaceGoogleSocialLoginPtrOutput() WorkspaceGoogleSocialLoginPtrOutput {
	return i.ToWorkspaceGoogleSocialLoginPtrOutputWithContext(context.Background())
}

func (i *workspaceGoogleSocialLoginPtrType) ToWorkspaceGoogleSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGoogleSocialLoginPtrOutput)
}

type WorkspaceGoogleSocialLoginOutput struct{ *pulumi.OutputState }

func (WorkspaceGoogleSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGoogleSocialLogin)(nil)).Elem()
}

func (o WorkspaceGoogleSocialLoginOutput) ToWorkspaceGoogleSocialLoginOutput() WorkspaceGoogleSocialLoginOutput {
	return o
}

func (o WorkspaceGoogleSocialLoginOutput) ToWorkspaceGoogleSocialLoginOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginOutput {
	return o
}

func (o WorkspaceGoogleSocialLoginOutput) ToWorkspaceGoogleSocialLoginPtrOutput() WorkspaceGoogleSocialLoginPtrOutput {
	return o.ToWorkspaceGoogleSocialLoginPtrOutputWithContext(context.Background())
}

func (o WorkspaceGoogleSocialLoginOutput) ToWorkspaceGoogleSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceGoogleSocialLogin) *WorkspaceGoogleSocialLogin {
		return &v
	}).(WorkspaceGoogleSocialLoginPtrOutput)
}

// The client ID of the Google application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceGoogleSocialLoginOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGoogleSocialLogin) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceGoogleSocialLoginOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceGoogleSocialLogin) *bool { return v.Customised }).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceGoogleSocialLoginOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGoogleSocialLogin) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// The secret associated with the Google application. Required when setting **`customised`** parameter to true.
func (o WorkspaceGoogleSocialLoginOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGoogleSocialLogin) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type WorkspaceGoogleSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceGoogleSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGoogleSocialLogin)(nil)).Elem()
}

func (o WorkspaceGoogleSocialLoginPtrOutput) ToWorkspaceGoogleSocialLoginPtrOutput() WorkspaceGoogleSocialLoginPtrOutput {
	return o
}

func (o WorkspaceGoogleSocialLoginPtrOutput) ToWorkspaceGoogleSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceGoogleSocialLoginPtrOutput {
	return o
}

func (o WorkspaceGoogleSocialLoginPtrOutput) Elem() WorkspaceGoogleSocialLoginOutput {
	return o.ApplyT(func(v *WorkspaceGoogleSocialLogin) WorkspaceGoogleSocialLogin {
		if v != nil {
			return *v
		}
		var ret WorkspaceGoogleSocialLogin
		return ret
	}).(WorkspaceGoogleSocialLoginOutput)
}

// The client ID of the Google application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceGoogleSocialLoginPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGoogleSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceGoogleSocialLoginPtrOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceGoogleSocialLogin) *bool {
		if v == nil {
			return nil
		}
		return v.Customised
	}).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceGoogleSocialLoginPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGoogleSocialLogin) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Google application. Required when setting **`customised`** parameter to true.
func (o WorkspaceGoogleSocialLoginPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGoogleSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type WorkspaceHostedLogin struct {
	// Allowed redirect URLs.
	AllowedRedirectUrls []string `pulumi:"allowedRedirectUrls"`
}

// WorkspaceHostedLoginInput is an input type that accepts WorkspaceHostedLoginArgs and WorkspaceHostedLoginOutput values.
// You can construct a concrete instance of `WorkspaceHostedLoginInput` via:
//
//	WorkspaceHostedLoginArgs{...}
type WorkspaceHostedLoginInput interface {
	pulumi.Input

	ToWorkspaceHostedLoginOutput() WorkspaceHostedLoginOutput
	ToWorkspaceHostedLoginOutputWithContext(context.Context) WorkspaceHostedLoginOutput
}

type WorkspaceHostedLoginArgs struct {
	// Allowed redirect URLs.
	AllowedRedirectUrls pulumi.StringArrayInput `pulumi:"allowedRedirectUrls"`
}

func (WorkspaceHostedLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHostedLogin)(nil)).Elem()
}

func (i WorkspaceHostedLoginArgs) ToWorkspaceHostedLoginOutput() WorkspaceHostedLoginOutput {
	return i.ToWorkspaceHostedLoginOutputWithContext(context.Background())
}

func (i WorkspaceHostedLoginArgs) ToWorkspaceHostedLoginOutputWithContext(ctx context.Context) WorkspaceHostedLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHostedLoginOutput)
}

func (i WorkspaceHostedLoginArgs) ToWorkspaceHostedLoginPtrOutput() WorkspaceHostedLoginPtrOutput {
	return i.ToWorkspaceHostedLoginPtrOutputWithContext(context.Background())
}

func (i WorkspaceHostedLoginArgs) ToWorkspaceHostedLoginPtrOutputWithContext(ctx context.Context) WorkspaceHostedLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHostedLoginOutput).ToWorkspaceHostedLoginPtrOutputWithContext(ctx)
}

// WorkspaceHostedLoginPtrInput is an input type that accepts WorkspaceHostedLoginArgs, WorkspaceHostedLoginPtr and WorkspaceHostedLoginPtrOutput values.
// You can construct a concrete instance of `WorkspaceHostedLoginPtrInput` via:
//
//	        WorkspaceHostedLoginArgs{...}
//
//	or:
//
//	        nil
type WorkspaceHostedLoginPtrInput interface {
	pulumi.Input

	ToWorkspaceHostedLoginPtrOutput() WorkspaceHostedLoginPtrOutput
	ToWorkspaceHostedLoginPtrOutputWithContext(context.Context) WorkspaceHostedLoginPtrOutput
}

type workspaceHostedLoginPtrType WorkspaceHostedLoginArgs

func WorkspaceHostedLoginPtr(v *WorkspaceHostedLoginArgs) WorkspaceHostedLoginPtrInput {
	return (*workspaceHostedLoginPtrType)(v)
}

func (*workspaceHostedLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHostedLogin)(nil)).Elem()
}

func (i *workspaceHostedLoginPtrType) ToWorkspaceHostedLoginPtrOutput() WorkspaceHostedLoginPtrOutput {
	return i.ToWorkspaceHostedLoginPtrOutputWithContext(context.Background())
}

func (i *workspaceHostedLoginPtrType) ToWorkspaceHostedLoginPtrOutputWithContext(ctx context.Context) WorkspaceHostedLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHostedLoginPtrOutput)
}

type WorkspaceHostedLoginOutput struct{ *pulumi.OutputState }

func (WorkspaceHostedLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHostedLogin)(nil)).Elem()
}

func (o WorkspaceHostedLoginOutput) ToWorkspaceHostedLoginOutput() WorkspaceHostedLoginOutput {
	return o
}

func (o WorkspaceHostedLoginOutput) ToWorkspaceHostedLoginOutputWithContext(ctx context.Context) WorkspaceHostedLoginOutput {
	return o
}

func (o WorkspaceHostedLoginOutput) ToWorkspaceHostedLoginPtrOutput() WorkspaceHostedLoginPtrOutput {
	return o.ToWorkspaceHostedLoginPtrOutputWithContext(context.Background())
}

func (o WorkspaceHostedLoginOutput) ToWorkspaceHostedLoginPtrOutputWithContext(ctx context.Context) WorkspaceHostedLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceHostedLogin) *WorkspaceHostedLogin {
		return &v
	}).(WorkspaceHostedLoginPtrOutput)
}

// Allowed redirect URLs.
func (o WorkspaceHostedLoginOutput) AllowedRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceHostedLogin) []string { return v.AllowedRedirectUrls }).(pulumi.StringArrayOutput)
}

type WorkspaceHostedLoginPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceHostedLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHostedLogin)(nil)).Elem()
}

func (o WorkspaceHostedLoginPtrOutput) ToWorkspaceHostedLoginPtrOutput() WorkspaceHostedLoginPtrOutput {
	return o
}

func (o WorkspaceHostedLoginPtrOutput) ToWorkspaceHostedLoginPtrOutputWithContext(ctx context.Context) WorkspaceHostedLoginPtrOutput {
	return o
}

func (o WorkspaceHostedLoginPtrOutput) Elem() WorkspaceHostedLoginOutput {
	return o.ApplyT(func(v *WorkspaceHostedLogin) WorkspaceHostedLogin {
		if v != nil {
			return *v
		}
		var ret WorkspaceHostedLogin
		return ret
	}).(WorkspaceHostedLoginOutput)
}

// Allowed redirect URLs.
func (o WorkspaceHostedLoginPtrOutput) AllowedRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceHostedLogin) []string {
		if v == nil {
			return nil
		}
		return v.AllowedRedirectUrls
	}).(pulumi.StringArrayOutput)
}

type WorkspaceImpossibleTravelEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceImpossibleTravelEmailInput is an input type that accepts WorkspaceImpossibleTravelEmailArgs and WorkspaceImpossibleTravelEmailOutput values.
// You can construct a concrete instance of `WorkspaceImpossibleTravelEmailInput` via:
//
//	WorkspaceImpossibleTravelEmailArgs{...}
type WorkspaceImpossibleTravelEmailInput interface {
	pulumi.Input

	ToWorkspaceImpossibleTravelEmailOutput() WorkspaceImpossibleTravelEmailOutput
	ToWorkspaceImpossibleTravelEmailOutputWithContext(context.Context) WorkspaceImpossibleTravelEmailOutput
}

type WorkspaceImpossibleTravelEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceImpossibleTravelEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceImpossibleTravelEmail)(nil)).Elem()
}

func (i WorkspaceImpossibleTravelEmailArgs) ToWorkspaceImpossibleTravelEmailOutput() WorkspaceImpossibleTravelEmailOutput {
	return i.ToWorkspaceImpossibleTravelEmailOutputWithContext(context.Background())
}

func (i WorkspaceImpossibleTravelEmailArgs) ToWorkspaceImpossibleTravelEmailOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceImpossibleTravelEmailOutput)
}

func (i WorkspaceImpossibleTravelEmailArgs) ToWorkspaceImpossibleTravelEmailPtrOutput() WorkspaceImpossibleTravelEmailPtrOutput {
	return i.ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceImpossibleTravelEmailArgs) ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceImpossibleTravelEmailOutput).ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(ctx)
}

// WorkspaceImpossibleTravelEmailPtrInput is an input type that accepts WorkspaceImpossibleTravelEmailArgs, WorkspaceImpossibleTravelEmailPtr and WorkspaceImpossibleTravelEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceImpossibleTravelEmailPtrInput` via:
//
//	        WorkspaceImpossibleTravelEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceImpossibleTravelEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceImpossibleTravelEmailPtrOutput() WorkspaceImpossibleTravelEmailPtrOutput
	ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(context.Context) WorkspaceImpossibleTravelEmailPtrOutput
}

type workspaceImpossibleTravelEmailPtrType WorkspaceImpossibleTravelEmailArgs

func WorkspaceImpossibleTravelEmailPtr(v *WorkspaceImpossibleTravelEmailArgs) WorkspaceImpossibleTravelEmailPtrInput {
	return (*workspaceImpossibleTravelEmailPtrType)(v)
}

func (*workspaceImpossibleTravelEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceImpossibleTravelEmail)(nil)).Elem()
}

func (i *workspaceImpossibleTravelEmailPtrType) ToWorkspaceImpossibleTravelEmailPtrOutput() WorkspaceImpossibleTravelEmailPtrOutput {
	return i.ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceImpossibleTravelEmailPtrType) ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceImpossibleTravelEmailPtrOutput)
}

type WorkspaceImpossibleTravelEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceImpossibleTravelEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceImpossibleTravelEmail)(nil)).Elem()
}

func (o WorkspaceImpossibleTravelEmailOutput) ToWorkspaceImpossibleTravelEmailOutput() WorkspaceImpossibleTravelEmailOutput {
	return o
}

func (o WorkspaceImpossibleTravelEmailOutput) ToWorkspaceImpossibleTravelEmailOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailOutput {
	return o
}

func (o WorkspaceImpossibleTravelEmailOutput) ToWorkspaceImpossibleTravelEmailPtrOutput() WorkspaceImpossibleTravelEmailPtrOutput {
	return o.ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceImpossibleTravelEmailOutput) ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceImpossibleTravelEmail) *WorkspaceImpossibleTravelEmail {
		return &v
	}).(WorkspaceImpossibleTravelEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceImpossibleTravelEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceImpossibleTravelEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceImpossibleTravelEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceImpossibleTravelEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceImpossibleTravelEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceImpossibleTravelEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceImpossibleTravelEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceImpossibleTravelEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceImpossibleTravelEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceImpossibleTravelEmail)(nil)).Elem()
}

func (o WorkspaceImpossibleTravelEmailPtrOutput) ToWorkspaceImpossibleTravelEmailPtrOutput() WorkspaceImpossibleTravelEmailPtrOutput {
	return o
}

func (o WorkspaceImpossibleTravelEmailPtrOutput) ToWorkspaceImpossibleTravelEmailPtrOutputWithContext(ctx context.Context) WorkspaceImpossibleTravelEmailPtrOutput {
	return o
}

func (o WorkspaceImpossibleTravelEmailPtrOutput) Elem() WorkspaceImpossibleTravelEmailOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) WorkspaceImpossibleTravelEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceImpossibleTravelEmail
		return ret
	}).(WorkspaceImpossibleTravelEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceImpossibleTravelEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceImpossibleTravelEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceImpossibleTravelEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceImpossibleTravelEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceImpossibleTravelEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceImpossibleTravelEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceImpossibleTravelEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceLockoutPolicy struct {
	// The number of failed attempts after which a user will be locked out.
	MaxAttempts int `pulumi:"maxAttempts"`
}

// WorkspaceLockoutPolicyInput is an input type that accepts WorkspaceLockoutPolicyArgs and WorkspaceLockoutPolicyOutput values.
// You can construct a concrete instance of `WorkspaceLockoutPolicyInput` via:
//
//	WorkspaceLockoutPolicyArgs{...}
type WorkspaceLockoutPolicyInput interface {
	pulumi.Input

	ToWorkspaceLockoutPolicyOutput() WorkspaceLockoutPolicyOutput
	ToWorkspaceLockoutPolicyOutputWithContext(context.Context) WorkspaceLockoutPolicyOutput
}

type WorkspaceLockoutPolicyArgs struct {
	// The number of failed attempts after which a user will be locked out.
	MaxAttempts pulumi.IntInput `pulumi:"maxAttempts"`
}

func (WorkspaceLockoutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceLockoutPolicy)(nil)).Elem()
}

func (i WorkspaceLockoutPolicyArgs) ToWorkspaceLockoutPolicyOutput() WorkspaceLockoutPolicyOutput {
	return i.ToWorkspaceLockoutPolicyOutputWithContext(context.Background())
}

func (i WorkspaceLockoutPolicyArgs) ToWorkspaceLockoutPolicyOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceLockoutPolicyOutput)
}

func (i WorkspaceLockoutPolicyArgs) ToWorkspaceLockoutPolicyPtrOutput() WorkspaceLockoutPolicyPtrOutput {
	return i.ToWorkspaceLockoutPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceLockoutPolicyArgs) ToWorkspaceLockoutPolicyPtrOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceLockoutPolicyOutput).ToWorkspaceLockoutPolicyPtrOutputWithContext(ctx)
}

// WorkspaceLockoutPolicyPtrInput is an input type that accepts WorkspaceLockoutPolicyArgs, WorkspaceLockoutPolicyPtr and WorkspaceLockoutPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceLockoutPolicyPtrInput` via:
//
//	        WorkspaceLockoutPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceLockoutPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceLockoutPolicyPtrOutput() WorkspaceLockoutPolicyPtrOutput
	ToWorkspaceLockoutPolicyPtrOutputWithContext(context.Context) WorkspaceLockoutPolicyPtrOutput
}

type workspaceLockoutPolicyPtrType WorkspaceLockoutPolicyArgs

func WorkspaceLockoutPolicyPtr(v *WorkspaceLockoutPolicyArgs) WorkspaceLockoutPolicyPtrInput {
	return (*workspaceLockoutPolicyPtrType)(v)
}

func (*workspaceLockoutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceLockoutPolicy)(nil)).Elem()
}

func (i *workspaceLockoutPolicyPtrType) ToWorkspaceLockoutPolicyPtrOutput() WorkspaceLockoutPolicyPtrOutput {
	return i.ToWorkspaceLockoutPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceLockoutPolicyPtrType) ToWorkspaceLockoutPolicyPtrOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceLockoutPolicyPtrOutput)
}

type WorkspaceLockoutPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceLockoutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceLockoutPolicy)(nil)).Elem()
}

func (o WorkspaceLockoutPolicyOutput) ToWorkspaceLockoutPolicyOutput() WorkspaceLockoutPolicyOutput {
	return o
}

func (o WorkspaceLockoutPolicyOutput) ToWorkspaceLockoutPolicyOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyOutput {
	return o
}

func (o WorkspaceLockoutPolicyOutput) ToWorkspaceLockoutPolicyPtrOutput() WorkspaceLockoutPolicyPtrOutput {
	return o.ToWorkspaceLockoutPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceLockoutPolicyOutput) ToWorkspaceLockoutPolicyPtrOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceLockoutPolicy) *WorkspaceLockoutPolicy {
		return &v
	}).(WorkspaceLockoutPolicyPtrOutput)
}

// The number of failed attempts after which a user will be locked out.
func (o WorkspaceLockoutPolicyOutput) MaxAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspaceLockoutPolicy) int { return v.MaxAttempts }).(pulumi.IntOutput)
}

type WorkspaceLockoutPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceLockoutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceLockoutPolicy)(nil)).Elem()
}

func (o WorkspaceLockoutPolicyPtrOutput) ToWorkspaceLockoutPolicyPtrOutput() WorkspaceLockoutPolicyPtrOutput {
	return o
}

func (o WorkspaceLockoutPolicyPtrOutput) ToWorkspaceLockoutPolicyPtrOutputWithContext(ctx context.Context) WorkspaceLockoutPolicyPtrOutput {
	return o
}

func (o WorkspaceLockoutPolicyPtrOutput) Elem() WorkspaceLockoutPolicyOutput {
	return o.ApplyT(func(v *WorkspaceLockoutPolicy) WorkspaceLockoutPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceLockoutPolicy
		return ret
	}).(WorkspaceLockoutPolicyOutput)
}

// The number of failed attempts after which a user will be locked out.
func (o WorkspaceLockoutPolicyPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceLockoutPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

type WorkspaceMagicCodeEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMagicCodeEmailInput is an input type that accepts WorkspaceMagicCodeEmailArgs and WorkspaceMagicCodeEmailOutput values.
// You can construct a concrete instance of `WorkspaceMagicCodeEmailInput` via:
//
//	WorkspaceMagicCodeEmailArgs{...}
type WorkspaceMagicCodeEmailInput interface {
	pulumi.Input

	ToWorkspaceMagicCodeEmailOutput() WorkspaceMagicCodeEmailOutput
	ToWorkspaceMagicCodeEmailOutputWithContext(context.Context) WorkspaceMagicCodeEmailOutput
}

type WorkspaceMagicCodeEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMagicCodeEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMagicCodeEmail)(nil)).Elem()
}

func (i WorkspaceMagicCodeEmailArgs) ToWorkspaceMagicCodeEmailOutput() WorkspaceMagicCodeEmailOutput {
	return i.ToWorkspaceMagicCodeEmailOutputWithContext(context.Background())
}

func (i WorkspaceMagicCodeEmailArgs) ToWorkspaceMagicCodeEmailOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicCodeEmailOutput)
}

func (i WorkspaceMagicCodeEmailArgs) ToWorkspaceMagicCodeEmailPtrOutput() WorkspaceMagicCodeEmailPtrOutput {
	return i.ToWorkspaceMagicCodeEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMagicCodeEmailArgs) ToWorkspaceMagicCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicCodeEmailOutput).ToWorkspaceMagicCodeEmailPtrOutputWithContext(ctx)
}

// WorkspaceMagicCodeEmailPtrInput is an input type that accepts WorkspaceMagicCodeEmailArgs, WorkspaceMagicCodeEmailPtr and WorkspaceMagicCodeEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMagicCodeEmailPtrInput` via:
//
//	        WorkspaceMagicCodeEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMagicCodeEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMagicCodeEmailPtrOutput() WorkspaceMagicCodeEmailPtrOutput
	ToWorkspaceMagicCodeEmailPtrOutputWithContext(context.Context) WorkspaceMagicCodeEmailPtrOutput
}

type workspaceMagicCodeEmailPtrType WorkspaceMagicCodeEmailArgs

func WorkspaceMagicCodeEmailPtr(v *WorkspaceMagicCodeEmailArgs) WorkspaceMagicCodeEmailPtrInput {
	return (*workspaceMagicCodeEmailPtrType)(v)
}

func (*workspaceMagicCodeEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMagicCodeEmail)(nil)).Elem()
}

func (i *workspaceMagicCodeEmailPtrType) ToWorkspaceMagicCodeEmailPtrOutput() WorkspaceMagicCodeEmailPtrOutput {
	return i.ToWorkspaceMagicCodeEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMagicCodeEmailPtrType) ToWorkspaceMagicCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicCodeEmailPtrOutput)
}

type WorkspaceMagicCodeEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMagicCodeEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMagicCodeEmail)(nil)).Elem()
}

func (o WorkspaceMagicCodeEmailOutput) ToWorkspaceMagicCodeEmailOutput() WorkspaceMagicCodeEmailOutput {
	return o
}

func (o WorkspaceMagicCodeEmailOutput) ToWorkspaceMagicCodeEmailOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailOutput {
	return o
}

func (o WorkspaceMagicCodeEmailOutput) ToWorkspaceMagicCodeEmailPtrOutput() WorkspaceMagicCodeEmailPtrOutput {
	return o.ToWorkspaceMagicCodeEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMagicCodeEmailOutput) ToWorkspaceMagicCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMagicCodeEmail) *WorkspaceMagicCodeEmail {
		return &v
	}).(WorkspaceMagicCodeEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMagicCodeEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMagicCodeEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMagicCodeEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMagicCodeEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMagicCodeEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMagicCodeEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMagicCodeEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMagicCodeEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMagicCodeEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMagicCodeEmail)(nil)).Elem()
}

func (o WorkspaceMagicCodeEmailPtrOutput) ToWorkspaceMagicCodeEmailPtrOutput() WorkspaceMagicCodeEmailPtrOutput {
	return o
}

func (o WorkspaceMagicCodeEmailPtrOutput) ToWorkspaceMagicCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicCodeEmailPtrOutput {
	return o
}

func (o WorkspaceMagicCodeEmailPtrOutput) Elem() WorkspaceMagicCodeEmailOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) WorkspaceMagicCodeEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMagicCodeEmail
		return ret
	}).(WorkspaceMagicCodeEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMagicCodeEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMagicCodeEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMagicCodeEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMagicCodeEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMagicCodeEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMagicCodeEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicCodeEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMagicLinkEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMagicLinkEmailInput is an input type that accepts WorkspaceMagicLinkEmailArgs and WorkspaceMagicLinkEmailOutput values.
// You can construct a concrete instance of `WorkspaceMagicLinkEmailInput` via:
//
//	WorkspaceMagicLinkEmailArgs{...}
type WorkspaceMagicLinkEmailInput interface {
	pulumi.Input

	ToWorkspaceMagicLinkEmailOutput() WorkspaceMagicLinkEmailOutput
	ToWorkspaceMagicLinkEmailOutputWithContext(context.Context) WorkspaceMagicLinkEmailOutput
}

type WorkspaceMagicLinkEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMagicLinkEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMagicLinkEmail)(nil)).Elem()
}

func (i WorkspaceMagicLinkEmailArgs) ToWorkspaceMagicLinkEmailOutput() WorkspaceMagicLinkEmailOutput {
	return i.ToWorkspaceMagicLinkEmailOutputWithContext(context.Background())
}

func (i WorkspaceMagicLinkEmailArgs) ToWorkspaceMagicLinkEmailOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicLinkEmailOutput)
}

func (i WorkspaceMagicLinkEmailArgs) ToWorkspaceMagicLinkEmailPtrOutput() WorkspaceMagicLinkEmailPtrOutput {
	return i.ToWorkspaceMagicLinkEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMagicLinkEmailArgs) ToWorkspaceMagicLinkEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicLinkEmailOutput).ToWorkspaceMagicLinkEmailPtrOutputWithContext(ctx)
}

// WorkspaceMagicLinkEmailPtrInput is an input type that accepts WorkspaceMagicLinkEmailArgs, WorkspaceMagicLinkEmailPtr and WorkspaceMagicLinkEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMagicLinkEmailPtrInput` via:
//
//	        WorkspaceMagicLinkEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMagicLinkEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMagicLinkEmailPtrOutput() WorkspaceMagicLinkEmailPtrOutput
	ToWorkspaceMagicLinkEmailPtrOutputWithContext(context.Context) WorkspaceMagicLinkEmailPtrOutput
}

type workspaceMagicLinkEmailPtrType WorkspaceMagicLinkEmailArgs

func WorkspaceMagicLinkEmailPtr(v *WorkspaceMagicLinkEmailArgs) WorkspaceMagicLinkEmailPtrInput {
	return (*workspaceMagicLinkEmailPtrType)(v)
}

func (*workspaceMagicLinkEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMagicLinkEmail)(nil)).Elem()
}

func (i *workspaceMagicLinkEmailPtrType) ToWorkspaceMagicLinkEmailPtrOutput() WorkspaceMagicLinkEmailPtrOutput {
	return i.ToWorkspaceMagicLinkEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMagicLinkEmailPtrType) ToWorkspaceMagicLinkEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMagicLinkEmailPtrOutput)
}

type WorkspaceMagicLinkEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMagicLinkEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMagicLinkEmail)(nil)).Elem()
}

func (o WorkspaceMagicLinkEmailOutput) ToWorkspaceMagicLinkEmailOutput() WorkspaceMagicLinkEmailOutput {
	return o
}

func (o WorkspaceMagicLinkEmailOutput) ToWorkspaceMagicLinkEmailOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailOutput {
	return o
}

func (o WorkspaceMagicLinkEmailOutput) ToWorkspaceMagicLinkEmailPtrOutput() WorkspaceMagicLinkEmailPtrOutput {
	return o.ToWorkspaceMagicLinkEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMagicLinkEmailOutput) ToWorkspaceMagicLinkEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMagicLinkEmail) *WorkspaceMagicLinkEmail {
		return &v
	}).(WorkspaceMagicLinkEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMagicLinkEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMagicLinkEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMagicLinkEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMagicLinkEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMagicLinkEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMagicLinkEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMagicLinkEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMagicLinkEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMagicLinkEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMagicLinkEmail)(nil)).Elem()
}

func (o WorkspaceMagicLinkEmailPtrOutput) ToWorkspaceMagicLinkEmailPtrOutput() WorkspaceMagicLinkEmailPtrOutput {
	return o
}

func (o WorkspaceMagicLinkEmailPtrOutput) ToWorkspaceMagicLinkEmailPtrOutputWithContext(ctx context.Context) WorkspaceMagicLinkEmailPtrOutput {
	return o
}

func (o WorkspaceMagicLinkEmailPtrOutput) Elem() WorkspaceMagicLinkEmailOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) WorkspaceMagicLinkEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMagicLinkEmail
		return ret
	}).(WorkspaceMagicLinkEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMagicLinkEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMagicLinkEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMagicLinkEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMagicLinkEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMagicLinkEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMagicLinkEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMagicLinkEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaAuthenticationApp struct {
	// The service name to display in the authentication app.
	ServiceName string `pulumi:"serviceName"`
}

// WorkspaceMfaAuthenticationAppInput is an input type that accepts WorkspaceMfaAuthenticationAppArgs and WorkspaceMfaAuthenticationAppOutput values.
// You can construct a concrete instance of `WorkspaceMfaAuthenticationAppInput` via:
//
//	WorkspaceMfaAuthenticationAppArgs{...}
type WorkspaceMfaAuthenticationAppInput interface {
	pulumi.Input

	ToWorkspaceMfaAuthenticationAppOutput() WorkspaceMfaAuthenticationAppOutput
	ToWorkspaceMfaAuthenticationAppOutputWithContext(context.Context) WorkspaceMfaAuthenticationAppOutput
}

type WorkspaceMfaAuthenticationAppArgs struct {
	// The service name to display in the authentication app.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (WorkspaceMfaAuthenticationAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaAuthenticationApp)(nil)).Elem()
}

func (i WorkspaceMfaAuthenticationAppArgs) ToWorkspaceMfaAuthenticationAppOutput() WorkspaceMfaAuthenticationAppOutput {
	return i.ToWorkspaceMfaAuthenticationAppOutputWithContext(context.Background())
}

func (i WorkspaceMfaAuthenticationAppArgs) ToWorkspaceMfaAuthenticationAppOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaAuthenticationAppOutput)
}

func (i WorkspaceMfaAuthenticationAppArgs) ToWorkspaceMfaAuthenticationAppPtrOutput() WorkspaceMfaAuthenticationAppPtrOutput {
	return i.ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaAuthenticationAppArgs) ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaAuthenticationAppOutput).ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(ctx)
}

// WorkspaceMfaAuthenticationAppPtrInput is an input type that accepts WorkspaceMfaAuthenticationAppArgs, WorkspaceMfaAuthenticationAppPtr and WorkspaceMfaAuthenticationAppPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaAuthenticationAppPtrInput` via:
//
//	        WorkspaceMfaAuthenticationAppArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaAuthenticationAppPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaAuthenticationAppPtrOutput() WorkspaceMfaAuthenticationAppPtrOutput
	ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(context.Context) WorkspaceMfaAuthenticationAppPtrOutput
}

type workspaceMfaAuthenticationAppPtrType WorkspaceMfaAuthenticationAppArgs

func WorkspaceMfaAuthenticationAppPtr(v *WorkspaceMfaAuthenticationAppArgs) WorkspaceMfaAuthenticationAppPtrInput {
	return (*workspaceMfaAuthenticationAppPtrType)(v)
}

func (*workspaceMfaAuthenticationAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaAuthenticationApp)(nil)).Elem()
}

func (i *workspaceMfaAuthenticationAppPtrType) ToWorkspaceMfaAuthenticationAppPtrOutput() WorkspaceMfaAuthenticationAppPtrOutput {
	return i.ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaAuthenticationAppPtrType) ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaAuthenticationAppPtrOutput)
}

type WorkspaceMfaAuthenticationAppOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaAuthenticationAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaAuthenticationApp)(nil)).Elem()
}

func (o WorkspaceMfaAuthenticationAppOutput) ToWorkspaceMfaAuthenticationAppOutput() WorkspaceMfaAuthenticationAppOutput {
	return o
}

func (o WorkspaceMfaAuthenticationAppOutput) ToWorkspaceMfaAuthenticationAppOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppOutput {
	return o
}

func (o WorkspaceMfaAuthenticationAppOutput) ToWorkspaceMfaAuthenticationAppPtrOutput() WorkspaceMfaAuthenticationAppPtrOutput {
	return o.ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaAuthenticationAppOutput) ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaAuthenticationApp) *WorkspaceMfaAuthenticationApp {
		return &v
	}).(WorkspaceMfaAuthenticationAppPtrOutput)
}

// The service name to display in the authentication app.
func (o WorkspaceMfaAuthenticationAppOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaAuthenticationApp) string { return v.ServiceName }).(pulumi.StringOutput)
}

type WorkspaceMfaAuthenticationAppPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaAuthenticationAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaAuthenticationApp)(nil)).Elem()
}

func (o WorkspaceMfaAuthenticationAppPtrOutput) ToWorkspaceMfaAuthenticationAppPtrOutput() WorkspaceMfaAuthenticationAppPtrOutput {
	return o
}

func (o WorkspaceMfaAuthenticationAppPtrOutput) ToWorkspaceMfaAuthenticationAppPtrOutputWithContext(ctx context.Context) WorkspaceMfaAuthenticationAppPtrOutput {
	return o
}

func (o WorkspaceMfaAuthenticationAppPtrOutput) Elem() WorkspaceMfaAuthenticationAppOutput {
	return o.ApplyT(func(v *WorkspaceMfaAuthenticationApp) WorkspaceMfaAuthenticationApp {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaAuthenticationApp
		return ret
	}).(WorkspaceMfaAuthenticationAppOutput)
}

// The service name to display in the authentication app.
func (o WorkspaceMfaAuthenticationAppPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaAuthenticationApp) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaEnrollEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMfaEnrollEmailInput is an input type that accepts WorkspaceMfaEnrollEmailArgs and WorkspaceMfaEnrollEmailOutput values.
// You can construct a concrete instance of `WorkspaceMfaEnrollEmailInput` via:
//
//	WorkspaceMfaEnrollEmailArgs{...}
type WorkspaceMfaEnrollEmailInput interface {
	pulumi.Input

	ToWorkspaceMfaEnrollEmailOutput() WorkspaceMfaEnrollEmailOutput
	ToWorkspaceMfaEnrollEmailOutputWithContext(context.Context) WorkspaceMfaEnrollEmailOutput
}

type WorkspaceMfaEnrollEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMfaEnrollEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaEnrollEmail)(nil)).Elem()
}

func (i WorkspaceMfaEnrollEmailArgs) ToWorkspaceMfaEnrollEmailOutput() WorkspaceMfaEnrollEmailOutput {
	return i.ToWorkspaceMfaEnrollEmailOutputWithContext(context.Background())
}

func (i WorkspaceMfaEnrollEmailArgs) ToWorkspaceMfaEnrollEmailOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaEnrollEmailOutput)
}

func (i WorkspaceMfaEnrollEmailArgs) ToWorkspaceMfaEnrollEmailPtrOutput() WorkspaceMfaEnrollEmailPtrOutput {
	return i.ToWorkspaceMfaEnrollEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaEnrollEmailArgs) ToWorkspaceMfaEnrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaEnrollEmailOutput).ToWorkspaceMfaEnrollEmailPtrOutputWithContext(ctx)
}

// WorkspaceMfaEnrollEmailPtrInput is an input type that accepts WorkspaceMfaEnrollEmailArgs, WorkspaceMfaEnrollEmailPtr and WorkspaceMfaEnrollEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaEnrollEmailPtrInput` via:
//
//	        WorkspaceMfaEnrollEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaEnrollEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaEnrollEmailPtrOutput() WorkspaceMfaEnrollEmailPtrOutput
	ToWorkspaceMfaEnrollEmailPtrOutputWithContext(context.Context) WorkspaceMfaEnrollEmailPtrOutput
}

type workspaceMfaEnrollEmailPtrType WorkspaceMfaEnrollEmailArgs

func WorkspaceMfaEnrollEmailPtr(v *WorkspaceMfaEnrollEmailArgs) WorkspaceMfaEnrollEmailPtrInput {
	return (*workspaceMfaEnrollEmailPtrType)(v)
}

func (*workspaceMfaEnrollEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaEnrollEmail)(nil)).Elem()
}

func (i *workspaceMfaEnrollEmailPtrType) ToWorkspaceMfaEnrollEmailPtrOutput() WorkspaceMfaEnrollEmailPtrOutput {
	return i.ToWorkspaceMfaEnrollEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaEnrollEmailPtrType) ToWorkspaceMfaEnrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaEnrollEmailPtrOutput)
}

type WorkspaceMfaEnrollEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaEnrollEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaEnrollEmail)(nil)).Elem()
}

func (o WorkspaceMfaEnrollEmailOutput) ToWorkspaceMfaEnrollEmailOutput() WorkspaceMfaEnrollEmailOutput {
	return o
}

func (o WorkspaceMfaEnrollEmailOutput) ToWorkspaceMfaEnrollEmailOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailOutput {
	return o
}

func (o WorkspaceMfaEnrollEmailOutput) ToWorkspaceMfaEnrollEmailPtrOutput() WorkspaceMfaEnrollEmailPtrOutput {
	return o.ToWorkspaceMfaEnrollEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaEnrollEmailOutput) ToWorkspaceMfaEnrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaEnrollEmail) *WorkspaceMfaEnrollEmail {
		return &v
	}).(WorkspaceMfaEnrollEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaEnrollEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaEnrollEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaEnrollEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaEnrollEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaEnrollEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaEnrollEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaEnrollEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMfaEnrollEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaEnrollEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaEnrollEmail)(nil)).Elem()
}

func (o WorkspaceMfaEnrollEmailPtrOutput) ToWorkspaceMfaEnrollEmailPtrOutput() WorkspaceMfaEnrollEmailPtrOutput {
	return o
}

func (o WorkspaceMfaEnrollEmailPtrOutput) ToWorkspaceMfaEnrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaEnrollEmailPtrOutput {
	return o
}

func (o WorkspaceMfaEnrollEmailPtrOutput) Elem() WorkspaceMfaEnrollEmailOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) WorkspaceMfaEnrollEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaEnrollEmail
		return ret
	}).(WorkspaceMfaEnrollEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaEnrollEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaEnrollEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaEnrollEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaEnrollEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaEnrollEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaEnrollEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaEnrollEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaOtcEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMfaOtcEmailInput is an input type that accepts WorkspaceMfaOtcEmailArgs and WorkspaceMfaOtcEmailOutput values.
// You can construct a concrete instance of `WorkspaceMfaOtcEmailInput` via:
//
//	WorkspaceMfaOtcEmailArgs{...}
type WorkspaceMfaOtcEmailInput interface {
	pulumi.Input

	ToWorkspaceMfaOtcEmailOutput() WorkspaceMfaOtcEmailOutput
	ToWorkspaceMfaOtcEmailOutputWithContext(context.Context) WorkspaceMfaOtcEmailOutput
}

type WorkspaceMfaOtcEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMfaOtcEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaOtcEmail)(nil)).Elem()
}

func (i WorkspaceMfaOtcEmailArgs) ToWorkspaceMfaOtcEmailOutput() WorkspaceMfaOtcEmailOutput {
	return i.ToWorkspaceMfaOtcEmailOutputWithContext(context.Background())
}

func (i WorkspaceMfaOtcEmailArgs) ToWorkspaceMfaOtcEmailOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaOtcEmailOutput)
}

func (i WorkspaceMfaOtcEmailArgs) ToWorkspaceMfaOtcEmailPtrOutput() WorkspaceMfaOtcEmailPtrOutput {
	return i.ToWorkspaceMfaOtcEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaOtcEmailArgs) ToWorkspaceMfaOtcEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaOtcEmailOutput).ToWorkspaceMfaOtcEmailPtrOutputWithContext(ctx)
}

// WorkspaceMfaOtcEmailPtrInput is an input type that accepts WorkspaceMfaOtcEmailArgs, WorkspaceMfaOtcEmailPtr and WorkspaceMfaOtcEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaOtcEmailPtrInput` via:
//
//	        WorkspaceMfaOtcEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaOtcEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaOtcEmailPtrOutput() WorkspaceMfaOtcEmailPtrOutput
	ToWorkspaceMfaOtcEmailPtrOutputWithContext(context.Context) WorkspaceMfaOtcEmailPtrOutput
}

type workspaceMfaOtcEmailPtrType WorkspaceMfaOtcEmailArgs

func WorkspaceMfaOtcEmailPtr(v *WorkspaceMfaOtcEmailArgs) WorkspaceMfaOtcEmailPtrInput {
	return (*workspaceMfaOtcEmailPtrType)(v)
}

func (*workspaceMfaOtcEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaOtcEmail)(nil)).Elem()
}

func (i *workspaceMfaOtcEmailPtrType) ToWorkspaceMfaOtcEmailPtrOutput() WorkspaceMfaOtcEmailPtrOutput {
	return i.ToWorkspaceMfaOtcEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaOtcEmailPtrType) ToWorkspaceMfaOtcEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaOtcEmailPtrOutput)
}

type WorkspaceMfaOtcEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaOtcEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaOtcEmail)(nil)).Elem()
}

func (o WorkspaceMfaOtcEmailOutput) ToWorkspaceMfaOtcEmailOutput() WorkspaceMfaOtcEmailOutput {
	return o
}

func (o WorkspaceMfaOtcEmailOutput) ToWorkspaceMfaOtcEmailOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailOutput {
	return o
}

func (o WorkspaceMfaOtcEmailOutput) ToWorkspaceMfaOtcEmailPtrOutput() WorkspaceMfaOtcEmailPtrOutput {
	return o.ToWorkspaceMfaOtcEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaOtcEmailOutput) ToWorkspaceMfaOtcEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaOtcEmail) *WorkspaceMfaOtcEmail {
		return &v
	}).(WorkspaceMfaOtcEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaOtcEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaOtcEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaOtcEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaOtcEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaOtcEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaOtcEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaOtcEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMfaOtcEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaOtcEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaOtcEmail)(nil)).Elem()
}

func (o WorkspaceMfaOtcEmailPtrOutput) ToWorkspaceMfaOtcEmailPtrOutput() WorkspaceMfaOtcEmailPtrOutput {
	return o
}

func (o WorkspaceMfaOtcEmailPtrOutput) ToWorkspaceMfaOtcEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaOtcEmailPtrOutput {
	return o
}

func (o WorkspaceMfaOtcEmailPtrOutput) Elem() WorkspaceMfaOtcEmailOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) WorkspaceMfaOtcEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaOtcEmail
		return ret
	}).(WorkspaceMfaOtcEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaOtcEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaOtcEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaOtcEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaOtcEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaOtcEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaOtcEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaOtcEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaPolicy struct {
	// Allow users to remember their MFA devices.
	AllowRememberDevice bool `pulumi:"allowRememberDevice"`
	// The number of seconds that MFA devices can be remembered for, if allowRememberMyDevice is true.
	DeviceExpiration int `pulumi:"deviceExpiration"`
	// Whether to force use of MFA.
	//
	//     Must be one of "off", "on", or "unless-saml".
	Enforce string `pulumi:"enforce"`
}

// WorkspaceMfaPolicyInput is an input type that accepts WorkspaceMfaPolicyArgs and WorkspaceMfaPolicyOutput values.
// You can construct a concrete instance of `WorkspaceMfaPolicyInput` via:
//
//	WorkspaceMfaPolicyArgs{...}
type WorkspaceMfaPolicyInput interface {
	pulumi.Input

	ToWorkspaceMfaPolicyOutput() WorkspaceMfaPolicyOutput
	ToWorkspaceMfaPolicyOutputWithContext(context.Context) WorkspaceMfaPolicyOutput
}

type WorkspaceMfaPolicyArgs struct {
	// Allow users to remember their MFA devices.
	AllowRememberDevice pulumi.BoolInput `pulumi:"allowRememberDevice"`
	// The number of seconds that MFA devices can be remembered for, if allowRememberMyDevice is true.
	DeviceExpiration pulumi.IntInput `pulumi:"deviceExpiration"`
	// Whether to force use of MFA.
	//
	//     Must be one of "off", "on", or "unless-saml".
	Enforce pulumi.StringInput `pulumi:"enforce"`
}

func (WorkspaceMfaPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaPolicy)(nil)).Elem()
}

func (i WorkspaceMfaPolicyArgs) ToWorkspaceMfaPolicyOutput() WorkspaceMfaPolicyOutput {
	return i.ToWorkspaceMfaPolicyOutputWithContext(context.Background())
}

func (i WorkspaceMfaPolicyArgs) ToWorkspaceMfaPolicyOutputWithContext(ctx context.Context) WorkspaceMfaPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaPolicyOutput)
}

func (i WorkspaceMfaPolicyArgs) ToWorkspaceMfaPolicyPtrOutput() WorkspaceMfaPolicyPtrOutput {
	return i.ToWorkspaceMfaPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaPolicyArgs) ToWorkspaceMfaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceMfaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaPolicyOutput).ToWorkspaceMfaPolicyPtrOutputWithContext(ctx)
}

// WorkspaceMfaPolicyPtrInput is an input type that accepts WorkspaceMfaPolicyArgs, WorkspaceMfaPolicyPtr and WorkspaceMfaPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaPolicyPtrInput` via:
//
//	        WorkspaceMfaPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaPolicyPtrOutput() WorkspaceMfaPolicyPtrOutput
	ToWorkspaceMfaPolicyPtrOutputWithContext(context.Context) WorkspaceMfaPolicyPtrOutput
}

type workspaceMfaPolicyPtrType WorkspaceMfaPolicyArgs

func WorkspaceMfaPolicyPtr(v *WorkspaceMfaPolicyArgs) WorkspaceMfaPolicyPtrInput {
	return (*workspaceMfaPolicyPtrType)(v)
}

func (*workspaceMfaPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaPolicy)(nil)).Elem()
}

func (i *workspaceMfaPolicyPtrType) ToWorkspaceMfaPolicyPtrOutput() WorkspaceMfaPolicyPtrOutput {
	return i.ToWorkspaceMfaPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaPolicyPtrType) ToWorkspaceMfaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceMfaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaPolicyPtrOutput)
}

type WorkspaceMfaPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaPolicy)(nil)).Elem()
}

func (o WorkspaceMfaPolicyOutput) ToWorkspaceMfaPolicyOutput() WorkspaceMfaPolicyOutput {
	return o
}

func (o WorkspaceMfaPolicyOutput) ToWorkspaceMfaPolicyOutputWithContext(ctx context.Context) WorkspaceMfaPolicyOutput {
	return o
}

func (o WorkspaceMfaPolicyOutput) ToWorkspaceMfaPolicyPtrOutput() WorkspaceMfaPolicyPtrOutput {
	return o.ToWorkspaceMfaPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaPolicyOutput) ToWorkspaceMfaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceMfaPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaPolicy) *WorkspaceMfaPolicy {
		return &v
	}).(WorkspaceMfaPolicyPtrOutput)
}

// Allow users to remember their MFA devices.
func (o WorkspaceMfaPolicyOutput) AllowRememberDevice() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspaceMfaPolicy) bool { return v.AllowRememberDevice }).(pulumi.BoolOutput)
}

// The number of seconds that MFA devices can be remembered for, if allowRememberMyDevice is true.
func (o WorkspaceMfaPolicyOutput) DeviceExpiration() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspaceMfaPolicy) int { return v.DeviceExpiration }).(pulumi.IntOutput)
}

// Whether to force use of MFA.
//
//	Must be one of "off", "on", or "unless-saml".
func (o WorkspaceMfaPolicyOutput) Enforce() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaPolicy) string { return v.Enforce }).(pulumi.StringOutput)
}

type WorkspaceMfaPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaPolicy)(nil)).Elem()
}

func (o WorkspaceMfaPolicyPtrOutput) ToWorkspaceMfaPolicyPtrOutput() WorkspaceMfaPolicyPtrOutput {
	return o
}

func (o WorkspaceMfaPolicyPtrOutput) ToWorkspaceMfaPolicyPtrOutputWithContext(ctx context.Context) WorkspaceMfaPolicyPtrOutput {
	return o
}

func (o WorkspaceMfaPolicyPtrOutput) Elem() WorkspaceMfaPolicyOutput {
	return o.ApplyT(func(v *WorkspaceMfaPolicy) WorkspaceMfaPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaPolicy
		return ret
	}).(WorkspaceMfaPolicyOutput)
}

// Allow users to remember their MFA devices.
func (o WorkspaceMfaPolicyPtrOutput) AllowRememberDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowRememberDevice
	}).(pulumi.BoolPtrOutput)
}

// The number of seconds that MFA devices can be remembered for, if allowRememberMyDevice is true.
func (o WorkspaceMfaPolicyPtrOutput) DeviceExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.DeviceExpiration
	}).(pulumi.IntPtrOutput)
}

// Whether to force use of MFA.
//
//	Must be one of "off", "on", or "unless-saml".
func (o WorkspaceMfaPolicyPtrOutput) Enforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Enforce
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaRecoveryCodeEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMfaRecoveryCodeEmailInput is an input type that accepts WorkspaceMfaRecoveryCodeEmailArgs and WorkspaceMfaRecoveryCodeEmailOutput values.
// You can construct a concrete instance of `WorkspaceMfaRecoveryCodeEmailInput` via:
//
//	WorkspaceMfaRecoveryCodeEmailArgs{...}
type WorkspaceMfaRecoveryCodeEmailInput interface {
	pulumi.Input

	ToWorkspaceMfaRecoveryCodeEmailOutput() WorkspaceMfaRecoveryCodeEmailOutput
	ToWorkspaceMfaRecoveryCodeEmailOutputWithContext(context.Context) WorkspaceMfaRecoveryCodeEmailOutput
}

type WorkspaceMfaRecoveryCodeEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMfaRecoveryCodeEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaRecoveryCodeEmail)(nil)).Elem()
}

func (i WorkspaceMfaRecoveryCodeEmailArgs) ToWorkspaceMfaRecoveryCodeEmailOutput() WorkspaceMfaRecoveryCodeEmailOutput {
	return i.ToWorkspaceMfaRecoveryCodeEmailOutputWithContext(context.Background())
}

func (i WorkspaceMfaRecoveryCodeEmailArgs) ToWorkspaceMfaRecoveryCodeEmailOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaRecoveryCodeEmailOutput)
}

func (i WorkspaceMfaRecoveryCodeEmailArgs) ToWorkspaceMfaRecoveryCodeEmailPtrOutput() WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return i.ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaRecoveryCodeEmailArgs) ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaRecoveryCodeEmailOutput).ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(ctx)
}

// WorkspaceMfaRecoveryCodeEmailPtrInput is an input type that accepts WorkspaceMfaRecoveryCodeEmailArgs, WorkspaceMfaRecoveryCodeEmailPtr and WorkspaceMfaRecoveryCodeEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaRecoveryCodeEmailPtrInput` via:
//
//	        WorkspaceMfaRecoveryCodeEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaRecoveryCodeEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaRecoveryCodeEmailPtrOutput() WorkspaceMfaRecoveryCodeEmailPtrOutput
	ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(context.Context) WorkspaceMfaRecoveryCodeEmailPtrOutput
}

type workspaceMfaRecoveryCodeEmailPtrType WorkspaceMfaRecoveryCodeEmailArgs

func WorkspaceMfaRecoveryCodeEmailPtr(v *WorkspaceMfaRecoveryCodeEmailArgs) WorkspaceMfaRecoveryCodeEmailPtrInput {
	return (*workspaceMfaRecoveryCodeEmailPtrType)(v)
}

func (*workspaceMfaRecoveryCodeEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaRecoveryCodeEmail)(nil)).Elem()
}

func (i *workspaceMfaRecoveryCodeEmailPtrType) ToWorkspaceMfaRecoveryCodeEmailPtrOutput() WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return i.ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaRecoveryCodeEmailPtrType) ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaRecoveryCodeEmailPtrOutput)
}

type WorkspaceMfaRecoveryCodeEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaRecoveryCodeEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaRecoveryCodeEmail)(nil)).Elem()
}

func (o WorkspaceMfaRecoveryCodeEmailOutput) ToWorkspaceMfaRecoveryCodeEmailOutput() WorkspaceMfaRecoveryCodeEmailOutput {
	return o
}

func (o WorkspaceMfaRecoveryCodeEmailOutput) ToWorkspaceMfaRecoveryCodeEmailOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailOutput {
	return o
}

func (o WorkspaceMfaRecoveryCodeEmailOutput) ToWorkspaceMfaRecoveryCodeEmailPtrOutput() WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return o.ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaRecoveryCodeEmailOutput) ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaRecoveryCodeEmail) *WorkspaceMfaRecoveryCodeEmail {
		return &v
	}).(WorkspaceMfaRecoveryCodeEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaRecoveryCodeEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaRecoveryCodeEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaRecoveryCodeEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaRecoveryCodeEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaRecoveryCodeEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaRecoveryCodeEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaRecoveryCodeEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMfaRecoveryCodeEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaRecoveryCodeEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaRecoveryCodeEmail)(nil)).Elem()
}

func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) ToWorkspaceMfaRecoveryCodeEmailPtrOutput() WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return o
}

func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) ToWorkspaceMfaRecoveryCodeEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaRecoveryCodeEmailPtrOutput {
	return o
}

func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) Elem() WorkspaceMfaRecoveryCodeEmailOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) WorkspaceMfaRecoveryCodeEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaRecoveryCodeEmail
		return ret
	}).(WorkspaceMfaRecoveryCodeEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaRecoveryCodeEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaRecoveryCodeEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMfaUnenrollEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceMfaUnenrollEmailInput is an input type that accepts WorkspaceMfaUnenrollEmailArgs and WorkspaceMfaUnenrollEmailOutput values.
// You can construct a concrete instance of `WorkspaceMfaUnenrollEmailInput` via:
//
//	WorkspaceMfaUnenrollEmailArgs{...}
type WorkspaceMfaUnenrollEmailInput interface {
	pulumi.Input

	ToWorkspaceMfaUnenrollEmailOutput() WorkspaceMfaUnenrollEmailOutput
	ToWorkspaceMfaUnenrollEmailOutputWithContext(context.Context) WorkspaceMfaUnenrollEmailOutput
}

type WorkspaceMfaUnenrollEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceMfaUnenrollEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaUnenrollEmail)(nil)).Elem()
}

func (i WorkspaceMfaUnenrollEmailArgs) ToWorkspaceMfaUnenrollEmailOutput() WorkspaceMfaUnenrollEmailOutput {
	return i.ToWorkspaceMfaUnenrollEmailOutputWithContext(context.Background())
}

func (i WorkspaceMfaUnenrollEmailArgs) ToWorkspaceMfaUnenrollEmailOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaUnenrollEmailOutput)
}

func (i WorkspaceMfaUnenrollEmailArgs) ToWorkspaceMfaUnenrollEmailPtrOutput() WorkspaceMfaUnenrollEmailPtrOutput {
	return i.ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceMfaUnenrollEmailArgs) ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaUnenrollEmailOutput).ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(ctx)
}

// WorkspaceMfaUnenrollEmailPtrInput is an input type that accepts WorkspaceMfaUnenrollEmailArgs, WorkspaceMfaUnenrollEmailPtr and WorkspaceMfaUnenrollEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceMfaUnenrollEmailPtrInput` via:
//
//	        WorkspaceMfaUnenrollEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMfaUnenrollEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceMfaUnenrollEmailPtrOutput() WorkspaceMfaUnenrollEmailPtrOutput
	ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(context.Context) WorkspaceMfaUnenrollEmailPtrOutput
}

type workspaceMfaUnenrollEmailPtrType WorkspaceMfaUnenrollEmailArgs

func WorkspaceMfaUnenrollEmailPtr(v *WorkspaceMfaUnenrollEmailArgs) WorkspaceMfaUnenrollEmailPtrInput {
	return (*workspaceMfaUnenrollEmailPtrType)(v)
}

func (*workspaceMfaUnenrollEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaUnenrollEmail)(nil)).Elem()
}

func (i *workspaceMfaUnenrollEmailPtrType) ToWorkspaceMfaUnenrollEmailPtrOutput() WorkspaceMfaUnenrollEmailPtrOutput {
	return i.ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceMfaUnenrollEmailPtrType) ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMfaUnenrollEmailPtrOutput)
}

type WorkspaceMfaUnenrollEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaUnenrollEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMfaUnenrollEmail)(nil)).Elem()
}

func (o WorkspaceMfaUnenrollEmailOutput) ToWorkspaceMfaUnenrollEmailOutput() WorkspaceMfaUnenrollEmailOutput {
	return o
}

func (o WorkspaceMfaUnenrollEmailOutput) ToWorkspaceMfaUnenrollEmailOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailOutput {
	return o
}

func (o WorkspaceMfaUnenrollEmailOutput) ToWorkspaceMfaUnenrollEmailPtrOutput() WorkspaceMfaUnenrollEmailPtrOutput {
	return o.ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceMfaUnenrollEmailOutput) ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMfaUnenrollEmail) *WorkspaceMfaUnenrollEmail {
		return &v
	}).(WorkspaceMfaUnenrollEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaUnenrollEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaUnenrollEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaUnenrollEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaUnenrollEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaUnenrollEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaUnenrollEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMfaUnenrollEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceMfaUnenrollEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMfaUnenrollEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMfaUnenrollEmail)(nil)).Elem()
}

func (o WorkspaceMfaUnenrollEmailPtrOutput) ToWorkspaceMfaUnenrollEmailPtrOutput() WorkspaceMfaUnenrollEmailPtrOutput {
	return o
}

func (o WorkspaceMfaUnenrollEmailPtrOutput) ToWorkspaceMfaUnenrollEmailPtrOutputWithContext(ctx context.Context) WorkspaceMfaUnenrollEmailPtrOutput {
	return o
}

func (o WorkspaceMfaUnenrollEmailPtrOutput) Elem() WorkspaceMfaUnenrollEmailOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) WorkspaceMfaUnenrollEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceMfaUnenrollEmail
		return ret
	}).(WorkspaceMfaUnenrollEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceMfaUnenrollEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceMfaUnenrollEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceMfaUnenrollEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceMfaUnenrollEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceMfaUnenrollEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceMfaUnenrollEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMfaUnenrollEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceMicrosoftSocialLogin struct {
	// The client ID of the Microsoft application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId *string `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised *bool `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl string `pulumi:"redirectUrl"`
	// The secret associated with the Microsoft application. Required when setting **`customised`** parameter to true.
	Secret *string `pulumi:"secret"`
}

// WorkspaceMicrosoftSocialLoginInput is an input type that accepts WorkspaceMicrosoftSocialLoginArgs and WorkspaceMicrosoftSocialLoginOutput values.
// You can construct a concrete instance of `WorkspaceMicrosoftSocialLoginInput` via:
//
//	WorkspaceMicrosoftSocialLoginArgs{...}
type WorkspaceMicrosoftSocialLoginInput interface {
	pulumi.Input

	ToWorkspaceMicrosoftSocialLoginOutput() WorkspaceMicrosoftSocialLoginOutput
	ToWorkspaceMicrosoftSocialLoginOutputWithContext(context.Context) WorkspaceMicrosoftSocialLoginOutput
}

type WorkspaceMicrosoftSocialLoginArgs struct {
	// The client ID of the Microsoft application to authenticate with. Required when setting **`customised`** parameter to true.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
	Customised pulumi.BoolPtrInput `pulumi:"customised"`
	// The URL to redirect to after a successful authentication.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
	// The secret associated with the Microsoft application. Required when setting **`customised`** parameter to true.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (WorkspaceMicrosoftSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMicrosoftSocialLogin)(nil)).Elem()
}

func (i WorkspaceMicrosoftSocialLoginArgs) ToWorkspaceMicrosoftSocialLoginOutput() WorkspaceMicrosoftSocialLoginOutput {
	return i.ToWorkspaceMicrosoftSocialLoginOutputWithContext(context.Background())
}

func (i WorkspaceMicrosoftSocialLoginArgs) ToWorkspaceMicrosoftSocialLoginOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMicrosoftSocialLoginOutput)
}

func (i WorkspaceMicrosoftSocialLoginArgs) ToWorkspaceMicrosoftSocialLoginPtrOutput() WorkspaceMicrosoftSocialLoginPtrOutput {
	return i.ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(context.Background())
}

func (i WorkspaceMicrosoftSocialLoginArgs) ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMicrosoftSocialLoginOutput).ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(ctx)
}

// WorkspaceMicrosoftSocialLoginPtrInput is an input type that accepts WorkspaceMicrosoftSocialLoginArgs, WorkspaceMicrosoftSocialLoginPtr and WorkspaceMicrosoftSocialLoginPtrOutput values.
// You can construct a concrete instance of `WorkspaceMicrosoftSocialLoginPtrInput` via:
//
//	        WorkspaceMicrosoftSocialLoginArgs{...}
//
//	or:
//
//	        nil
type WorkspaceMicrosoftSocialLoginPtrInput interface {
	pulumi.Input

	ToWorkspaceMicrosoftSocialLoginPtrOutput() WorkspaceMicrosoftSocialLoginPtrOutput
	ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(context.Context) WorkspaceMicrosoftSocialLoginPtrOutput
}

type workspaceMicrosoftSocialLoginPtrType WorkspaceMicrosoftSocialLoginArgs

func WorkspaceMicrosoftSocialLoginPtr(v *WorkspaceMicrosoftSocialLoginArgs) WorkspaceMicrosoftSocialLoginPtrInput {
	return (*workspaceMicrosoftSocialLoginPtrType)(v)
}

func (*workspaceMicrosoftSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMicrosoftSocialLogin)(nil)).Elem()
}

func (i *workspaceMicrosoftSocialLoginPtrType) ToWorkspaceMicrosoftSocialLoginPtrOutput() WorkspaceMicrosoftSocialLoginPtrOutput {
	return i.ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(context.Background())
}

func (i *workspaceMicrosoftSocialLoginPtrType) ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMicrosoftSocialLoginPtrOutput)
}

type WorkspaceMicrosoftSocialLoginOutput struct{ *pulumi.OutputState }

func (WorkspaceMicrosoftSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceMicrosoftSocialLogin)(nil)).Elem()
}

func (o WorkspaceMicrosoftSocialLoginOutput) ToWorkspaceMicrosoftSocialLoginOutput() WorkspaceMicrosoftSocialLoginOutput {
	return o
}

func (o WorkspaceMicrosoftSocialLoginOutput) ToWorkspaceMicrosoftSocialLoginOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginOutput {
	return o
}

func (o WorkspaceMicrosoftSocialLoginOutput) ToWorkspaceMicrosoftSocialLoginPtrOutput() WorkspaceMicrosoftSocialLoginPtrOutput {
	return o.ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(context.Background())
}

func (o WorkspaceMicrosoftSocialLoginOutput) ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceMicrosoftSocialLogin) *WorkspaceMicrosoftSocialLogin {
		return &v
	}).(WorkspaceMicrosoftSocialLoginPtrOutput)
}

// The client ID of the Microsoft application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceMicrosoftSocialLoginOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMicrosoftSocialLogin) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceMicrosoftSocialLoginOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceMicrosoftSocialLogin) *bool { return v.Customised }).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceMicrosoftSocialLoginOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceMicrosoftSocialLogin) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

// The secret associated with the Microsoft application. Required when setting **`customised`** parameter to true.
func (o WorkspaceMicrosoftSocialLoginOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceMicrosoftSocialLogin) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type WorkspaceMicrosoftSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceMicrosoftSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceMicrosoftSocialLogin)(nil)).Elem()
}

func (o WorkspaceMicrosoftSocialLoginPtrOutput) ToWorkspaceMicrosoftSocialLoginPtrOutput() WorkspaceMicrosoftSocialLoginPtrOutput {
	return o
}

func (o WorkspaceMicrosoftSocialLoginPtrOutput) ToWorkspaceMicrosoftSocialLoginPtrOutputWithContext(ctx context.Context) WorkspaceMicrosoftSocialLoginPtrOutput {
	return o
}

func (o WorkspaceMicrosoftSocialLoginPtrOutput) Elem() WorkspaceMicrosoftSocialLoginOutput {
	return o.ApplyT(func(v *WorkspaceMicrosoftSocialLogin) WorkspaceMicrosoftSocialLogin {
		if v != nil {
			return *v
		}
		var ret WorkspaceMicrosoftSocialLogin
		return ret
	}).(WorkspaceMicrosoftSocialLoginOutput)
}

// The client ID of the Microsoft application to authenticate with. Required when setting **`customised`** parameter to true.
func (o WorkspaceMicrosoftSocialLoginPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMicrosoftSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Determine whether the SSO should use customized secret and client ID. When passing true, clientId and secret are also required.
func (o WorkspaceMicrosoftSocialLoginPtrOutput) Customised() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceMicrosoftSocialLogin) *bool {
		if v == nil {
			return nil
		}
		return v.Customised
	}).(pulumi.BoolPtrOutput)
}

// The URL to redirect to after a successful authentication.
func (o WorkspaceMicrosoftSocialLoginPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMicrosoftSocialLogin) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Microsoft application. Required when setting **`customised`** parameter to true.
func (o WorkspaceMicrosoftSocialLoginPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceMicrosoftSocialLogin) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type WorkspaceNewDeviceConnectedEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceNewDeviceConnectedEmailInput is an input type that accepts WorkspaceNewDeviceConnectedEmailArgs and WorkspaceNewDeviceConnectedEmailOutput values.
// You can construct a concrete instance of `WorkspaceNewDeviceConnectedEmailInput` via:
//
//	WorkspaceNewDeviceConnectedEmailArgs{...}
type WorkspaceNewDeviceConnectedEmailInput interface {
	pulumi.Input

	ToWorkspaceNewDeviceConnectedEmailOutput() WorkspaceNewDeviceConnectedEmailOutput
	ToWorkspaceNewDeviceConnectedEmailOutputWithContext(context.Context) WorkspaceNewDeviceConnectedEmailOutput
}

type WorkspaceNewDeviceConnectedEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceNewDeviceConnectedEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNewDeviceConnectedEmail)(nil)).Elem()
}

func (i WorkspaceNewDeviceConnectedEmailArgs) ToWorkspaceNewDeviceConnectedEmailOutput() WorkspaceNewDeviceConnectedEmailOutput {
	return i.ToWorkspaceNewDeviceConnectedEmailOutputWithContext(context.Background())
}

func (i WorkspaceNewDeviceConnectedEmailArgs) ToWorkspaceNewDeviceConnectedEmailOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewDeviceConnectedEmailOutput)
}

func (i WorkspaceNewDeviceConnectedEmailArgs) ToWorkspaceNewDeviceConnectedEmailPtrOutput() WorkspaceNewDeviceConnectedEmailPtrOutput {
	return i.ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceNewDeviceConnectedEmailArgs) ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewDeviceConnectedEmailOutput).ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(ctx)
}

// WorkspaceNewDeviceConnectedEmailPtrInput is an input type that accepts WorkspaceNewDeviceConnectedEmailArgs, WorkspaceNewDeviceConnectedEmailPtr and WorkspaceNewDeviceConnectedEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceNewDeviceConnectedEmailPtrInput` via:
//
//	        WorkspaceNewDeviceConnectedEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceNewDeviceConnectedEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceNewDeviceConnectedEmailPtrOutput() WorkspaceNewDeviceConnectedEmailPtrOutput
	ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(context.Context) WorkspaceNewDeviceConnectedEmailPtrOutput
}

type workspaceNewDeviceConnectedEmailPtrType WorkspaceNewDeviceConnectedEmailArgs

func WorkspaceNewDeviceConnectedEmailPtr(v *WorkspaceNewDeviceConnectedEmailArgs) WorkspaceNewDeviceConnectedEmailPtrInput {
	return (*workspaceNewDeviceConnectedEmailPtrType)(v)
}

func (*workspaceNewDeviceConnectedEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNewDeviceConnectedEmail)(nil)).Elem()
}

func (i *workspaceNewDeviceConnectedEmailPtrType) ToWorkspaceNewDeviceConnectedEmailPtrOutput() WorkspaceNewDeviceConnectedEmailPtrOutput {
	return i.ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceNewDeviceConnectedEmailPtrType) ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewDeviceConnectedEmailPtrOutput)
}

type WorkspaceNewDeviceConnectedEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceNewDeviceConnectedEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNewDeviceConnectedEmail)(nil)).Elem()
}

func (o WorkspaceNewDeviceConnectedEmailOutput) ToWorkspaceNewDeviceConnectedEmailOutput() WorkspaceNewDeviceConnectedEmailOutput {
	return o
}

func (o WorkspaceNewDeviceConnectedEmailOutput) ToWorkspaceNewDeviceConnectedEmailOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailOutput {
	return o
}

func (o WorkspaceNewDeviceConnectedEmailOutput) ToWorkspaceNewDeviceConnectedEmailPtrOutput() WorkspaceNewDeviceConnectedEmailPtrOutput {
	return o.ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceNewDeviceConnectedEmailOutput) ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceNewDeviceConnectedEmail) *WorkspaceNewDeviceConnectedEmail {
		return &v
	}).(WorkspaceNewDeviceConnectedEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceNewDeviceConnectedEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceNewDeviceConnectedEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceNewDeviceConnectedEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceNewDeviceConnectedEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceNewDeviceConnectedEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceNewDeviceConnectedEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceNewDeviceConnectedEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceNewDeviceConnectedEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceNewDeviceConnectedEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNewDeviceConnectedEmail)(nil)).Elem()
}

func (o WorkspaceNewDeviceConnectedEmailPtrOutput) ToWorkspaceNewDeviceConnectedEmailPtrOutput() WorkspaceNewDeviceConnectedEmailPtrOutput {
	return o
}

func (o WorkspaceNewDeviceConnectedEmailPtrOutput) ToWorkspaceNewDeviceConnectedEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewDeviceConnectedEmailPtrOutput {
	return o
}

func (o WorkspaceNewDeviceConnectedEmailPtrOutput) Elem() WorkspaceNewDeviceConnectedEmailOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) WorkspaceNewDeviceConnectedEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceNewDeviceConnectedEmail
		return ret
	}).(WorkspaceNewDeviceConnectedEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceNewDeviceConnectedEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewDeviceConnectedEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceNewMfaMethodEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceNewMfaMethodEmailInput is an input type that accepts WorkspaceNewMfaMethodEmailArgs and WorkspaceNewMfaMethodEmailOutput values.
// You can construct a concrete instance of `WorkspaceNewMfaMethodEmailInput` via:
//
//	WorkspaceNewMfaMethodEmailArgs{...}
type WorkspaceNewMfaMethodEmailInput interface {
	pulumi.Input

	ToWorkspaceNewMfaMethodEmailOutput() WorkspaceNewMfaMethodEmailOutput
	ToWorkspaceNewMfaMethodEmailOutputWithContext(context.Context) WorkspaceNewMfaMethodEmailOutput
}

type WorkspaceNewMfaMethodEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceNewMfaMethodEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNewMfaMethodEmail)(nil)).Elem()
}

func (i WorkspaceNewMfaMethodEmailArgs) ToWorkspaceNewMfaMethodEmailOutput() WorkspaceNewMfaMethodEmailOutput {
	return i.ToWorkspaceNewMfaMethodEmailOutputWithContext(context.Background())
}

func (i WorkspaceNewMfaMethodEmailArgs) ToWorkspaceNewMfaMethodEmailOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewMfaMethodEmailOutput)
}

func (i WorkspaceNewMfaMethodEmailArgs) ToWorkspaceNewMfaMethodEmailPtrOutput() WorkspaceNewMfaMethodEmailPtrOutput {
	return i.ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceNewMfaMethodEmailArgs) ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewMfaMethodEmailOutput).ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(ctx)
}

// WorkspaceNewMfaMethodEmailPtrInput is an input type that accepts WorkspaceNewMfaMethodEmailArgs, WorkspaceNewMfaMethodEmailPtr and WorkspaceNewMfaMethodEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceNewMfaMethodEmailPtrInput` via:
//
//	        WorkspaceNewMfaMethodEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceNewMfaMethodEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceNewMfaMethodEmailPtrOutput() WorkspaceNewMfaMethodEmailPtrOutput
	ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(context.Context) WorkspaceNewMfaMethodEmailPtrOutput
}

type workspaceNewMfaMethodEmailPtrType WorkspaceNewMfaMethodEmailArgs

func WorkspaceNewMfaMethodEmailPtr(v *WorkspaceNewMfaMethodEmailArgs) WorkspaceNewMfaMethodEmailPtrInput {
	return (*workspaceNewMfaMethodEmailPtrType)(v)
}

func (*workspaceNewMfaMethodEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNewMfaMethodEmail)(nil)).Elem()
}

func (i *workspaceNewMfaMethodEmailPtrType) ToWorkspaceNewMfaMethodEmailPtrOutput() WorkspaceNewMfaMethodEmailPtrOutput {
	return i.ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceNewMfaMethodEmailPtrType) ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNewMfaMethodEmailPtrOutput)
}

type WorkspaceNewMfaMethodEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceNewMfaMethodEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNewMfaMethodEmail)(nil)).Elem()
}

func (o WorkspaceNewMfaMethodEmailOutput) ToWorkspaceNewMfaMethodEmailOutput() WorkspaceNewMfaMethodEmailOutput {
	return o
}

func (o WorkspaceNewMfaMethodEmailOutput) ToWorkspaceNewMfaMethodEmailOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailOutput {
	return o
}

func (o WorkspaceNewMfaMethodEmailOutput) ToWorkspaceNewMfaMethodEmailPtrOutput() WorkspaceNewMfaMethodEmailPtrOutput {
	return o.ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceNewMfaMethodEmailOutput) ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceNewMfaMethodEmail) *WorkspaceNewMfaMethodEmail {
		return &v
	}).(WorkspaceNewMfaMethodEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceNewMfaMethodEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceNewMfaMethodEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceNewMfaMethodEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceNewMfaMethodEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceNewMfaMethodEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceNewMfaMethodEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceNewMfaMethodEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceNewMfaMethodEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceNewMfaMethodEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNewMfaMethodEmail)(nil)).Elem()
}

func (o WorkspaceNewMfaMethodEmailPtrOutput) ToWorkspaceNewMfaMethodEmailPtrOutput() WorkspaceNewMfaMethodEmailPtrOutput {
	return o
}

func (o WorkspaceNewMfaMethodEmailPtrOutput) ToWorkspaceNewMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceNewMfaMethodEmailPtrOutput {
	return o
}

func (o WorkspaceNewMfaMethodEmailPtrOutput) Elem() WorkspaceNewMfaMethodEmailOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) WorkspaceNewMfaMethodEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceNewMfaMethodEmail
		return ret
	}).(WorkspaceNewMfaMethodEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceNewMfaMethodEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceNewMfaMethodEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceNewMfaMethodEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceNewMfaMethodEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceNewMfaMethodEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceNewMfaMethodEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceNewMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceOidc struct {
	// The URL to redirect to after the OIDC exchange.
	RedirectUrl string `pulumi:"redirectUrl"`
}

// WorkspaceOidcInput is an input type that accepts WorkspaceOidcArgs and WorkspaceOidcOutput values.
// You can construct a concrete instance of `WorkspaceOidcInput` via:
//
//	WorkspaceOidcArgs{...}
type WorkspaceOidcInput interface {
	pulumi.Input

	ToWorkspaceOidcOutput() WorkspaceOidcOutput
	ToWorkspaceOidcOutputWithContext(context.Context) WorkspaceOidcOutput
}

type WorkspaceOidcArgs struct {
	// The URL to redirect to after the OIDC exchange.
	RedirectUrl pulumi.StringInput `pulumi:"redirectUrl"`
}

func (WorkspaceOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceOidc)(nil)).Elem()
}

func (i WorkspaceOidcArgs) ToWorkspaceOidcOutput() WorkspaceOidcOutput {
	return i.ToWorkspaceOidcOutputWithContext(context.Background())
}

func (i WorkspaceOidcArgs) ToWorkspaceOidcOutputWithContext(ctx context.Context) WorkspaceOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOidcOutput)
}

func (i WorkspaceOidcArgs) ToWorkspaceOidcPtrOutput() WorkspaceOidcPtrOutput {
	return i.ToWorkspaceOidcPtrOutputWithContext(context.Background())
}

func (i WorkspaceOidcArgs) ToWorkspaceOidcPtrOutputWithContext(ctx context.Context) WorkspaceOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOidcOutput).ToWorkspaceOidcPtrOutputWithContext(ctx)
}

// WorkspaceOidcPtrInput is an input type that accepts WorkspaceOidcArgs, WorkspaceOidcPtr and WorkspaceOidcPtrOutput values.
// You can construct a concrete instance of `WorkspaceOidcPtrInput` via:
//
//	        WorkspaceOidcArgs{...}
//
//	or:
//
//	        nil
type WorkspaceOidcPtrInput interface {
	pulumi.Input

	ToWorkspaceOidcPtrOutput() WorkspaceOidcPtrOutput
	ToWorkspaceOidcPtrOutputWithContext(context.Context) WorkspaceOidcPtrOutput
}

type workspaceOidcPtrType WorkspaceOidcArgs

func WorkspaceOidcPtr(v *WorkspaceOidcArgs) WorkspaceOidcPtrInput {
	return (*workspaceOidcPtrType)(v)
}

func (*workspaceOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceOidc)(nil)).Elem()
}

func (i *workspaceOidcPtrType) ToWorkspaceOidcPtrOutput() WorkspaceOidcPtrOutput {
	return i.ToWorkspaceOidcPtrOutputWithContext(context.Background())
}

func (i *workspaceOidcPtrType) ToWorkspaceOidcPtrOutputWithContext(ctx context.Context) WorkspaceOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOidcPtrOutput)
}

type WorkspaceOidcOutput struct{ *pulumi.OutputState }

func (WorkspaceOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceOidc)(nil)).Elem()
}

func (o WorkspaceOidcOutput) ToWorkspaceOidcOutput() WorkspaceOidcOutput {
	return o
}

func (o WorkspaceOidcOutput) ToWorkspaceOidcOutputWithContext(ctx context.Context) WorkspaceOidcOutput {
	return o
}

func (o WorkspaceOidcOutput) ToWorkspaceOidcPtrOutput() WorkspaceOidcPtrOutput {
	return o.ToWorkspaceOidcPtrOutputWithContext(context.Background())
}

func (o WorkspaceOidcOutput) ToWorkspaceOidcPtrOutputWithContext(ctx context.Context) WorkspaceOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceOidc) *WorkspaceOidc {
		return &v
	}).(WorkspaceOidcPtrOutput)
}

// The URL to redirect to after the OIDC exchange.
func (o WorkspaceOidcOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceOidc) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

type WorkspaceOidcPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceOidc)(nil)).Elem()
}

func (o WorkspaceOidcPtrOutput) ToWorkspaceOidcPtrOutput() WorkspaceOidcPtrOutput {
	return o
}

func (o WorkspaceOidcPtrOutput) ToWorkspaceOidcPtrOutputWithContext(ctx context.Context) WorkspaceOidcPtrOutput {
	return o
}

func (o WorkspaceOidcPtrOutput) Elem() WorkspaceOidcOutput {
	return o.ApplyT(func(v *WorkspaceOidc) WorkspaceOidc {
		if v != nil {
			return *v
		}
		var ret WorkspaceOidc
		return ret
	}).(WorkspaceOidcOutput)
}

// The URL to redirect to after the OIDC exchange.
func (o WorkspaceOidcPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceOidc) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspacePasswordPolicy struct {
	AllowPassphrases bool `pulumi:"allowPassphrases"`
	// The number of historical passwords to prevent users from reusing. Set to zero to disable.
	History int `pulumi:"history"`
	// The maximum length of a password.
	MaxLength int `pulumi:"maxLength"`
	// The minimum length of a password.
	MinLength       int `pulumi:"minLength"`
	MinPhraseLength int `pulumi:"minPhraseLength"`
	// The minimum number of strength tests the password must meet.
	MinTests int `pulumi:"minTests"`
}

// WorkspacePasswordPolicyInput is an input type that accepts WorkspacePasswordPolicyArgs and WorkspacePasswordPolicyOutput values.
// You can construct a concrete instance of `WorkspacePasswordPolicyInput` via:
//
//	WorkspacePasswordPolicyArgs{...}
type WorkspacePasswordPolicyInput interface {
	pulumi.Input

	ToWorkspacePasswordPolicyOutput() WorkspacePasswordPolicyOutput
	ToWorkspacePasswordPolicyOutputWithContext(context.Context) WorkspacePasswordPolicyOutput
}

type WorkspacePasswordPolicyArgs struct {
	AllowPassphrases pulumi.BoolInput `pulumi:"allowPassphrases"`
	// The number of historical passwords to prevent users from reusing. Set to zero to disable.
	History pulumi.IntInput `pulumi:"history"`
	// The maximum length of a password.
	MaxLength pulumi.IntInput `pulumi:"maxLength"`
	// The minimum length of a password.
	MinLength       pulumi.IntInput `pulumi:"minLength"`
	MinPhraseLength pulumi.IntInput `pulumi:"minPhraseLength"`
	// The minimum number of strength tests the password must meet.
	MinTests pulumi.IntInput `pulumi:"minTests"`
}

func (WorkspacePasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePasswordPolicy)(nil)).Elem()
}

func (i WorkspacePasswordPolicyArgs) ToWorkspacePasswordPolicyOutput() WorkspacePasswordPolicyOutput {
	return i.ToWorkspacePasswordPolicyOutputWithContext(context.Background())
}

func (i WorkspacePasswordPolicyArgs) ToWorkspacePasswordPolicyOutputWithContext(ctx context.Context) WorkspacePasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePasswordPolicyOutput)
}

func (i WorkspacePasswordPolicyArgs) ToWorkspacePasswordPolicyPtrOutput() WorkspacePasswordPolicyPtrOutput {
	return i.ToWorkspacePasswordPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspacePasswordPolicyArgs) ToWorkspacePasswordPolicyPtrOutputWithContext(ctx context.Context) WorkspacePasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePasswordPolicyOutput).ToWorkspacePasswordPolicyPtrOutputWithContext(ctx)
}

// WorkspacePasswordPolicyPtrInput is an input type that accepts WorkspacePasswordPolicyArgs, WorkspacePasswordPolicyPtr and WorkspacePasswordPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspacePasswordPolicyPtrInput` via:
//
//	        WorkspacePasswordPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspacePasswordPolicyPtrInput interface {
	pulumi.Input

	ToWorkspacePasswordPolicyPtrOutput() WorkspacePasswordPolicyPtrOutput
	ToWorkspacePasswordPolicyPtrOutputWithContext(context.Context) WorkspacePasswordPolicyPtrOutput
}

type workspacePasswordPolicyPtrType WorkspacePasswordPolicyArgs

func WorkspacePasswordPolicyPtr(v *WorkspacePasswordPolicyArgs) WorkspacePasswordPolicyPtrInput {
	return (*workspacePasswordPolicyPtrType)(v)
}

func (*workspacePasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePasswordPolicy)(nil)).Elem()
}

func (i *workspacePasswordPolicyPtrType) ToWorkspacePasswordPolicyPtrOutput() WorkspacePasswordPolicyPtrOutput {
	return i.ToWorkspacePasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *workspacePasswordPolicyPtrType) ToWorkspacePasswordPolicyPtrOutputWithContext(ctx context.Context) WorkspacePasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePasswordPolicyPtrOutput)
}

type WorkspacePasswordPolicyOutput struct{ *pulumi.OutputState }

func (WorkspacePasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePasswordPolicy)(nil)).Elem()
}

func (o WorkspacePasswordPolicyOutput) ToWorkspacePasswordPolicyOutput() WorkspacePasswordPolicyOutput {
	return o
}

func (o WorkspacePasswordPolicyOutput) ToWorkspacePasswordPolicyOutputWithContext(ctx context.Context) WorkspacePasswordPolicyOutput {
	return o
}

func (o WorkspacePasswordPolicyOutput) ToWorkspacePasswordPolicyPtrOutput() WorkspacePasswordPolicyPtrOutput {
	return o.ToWorkspacePasswordPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspacePasswordPolicyOutput) ToWorkspacePasswordPolicyPtrOutputWithContext(ctx context.Context) WorkspacePasswordPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspacePasswordPolicy) *WorkspacePasswordPolicy {
		return &v
	}).(WorkspacePasswordPolicyPtrOutput)
}

func (o WorkspacePasswordPolicyOutput) AllowPassphrases() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) bool { return v.AllowPassphrases }).(pulumi.BoolOutput)
}

// The number of historical passwords to prevent users from reusing. Set to zero to disable.
func (o WorkspacePasswordPolicyOutput) History() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) int { return v.History }).(pulumi.IntOutput)
}

// The maximum length of a password.
func (o WorkspacePasswordPolicyOutput) MaxLength() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) int { return v.MaxLength }).(pulumi.IntOutput)
}

// The minimum length of a password.
func (o WorkspacePasswordPolicyOutput) MinLength() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) int { return v.MinLength }).(pulumi.IntOutput)
}

func (o WorkspacePasswordPolicyOutput) MinPhraseLength() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) int { return v.MinPhraseLength }).(pulumi.IntOutput)
}

// The minimum number of strength tests the password must meet.
func (o WorkspacePasswordPolicyOutput) MinTests() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacePasswordPolicy) int { return v.MinTests }).(pulumi.IntOutput)
}

type WorkspacePasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspacePasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePasswordPolicy)(nil)).Elem()
}

func (o WorkspacePasswordPolicyPtrOutput) ToWorkspacePasswordPolicyPtrOutput() WorkspacePasswordPolicyPtrOutput {
	return o
}

func (o WorkspacePasswordPolicyPtrOutput) ToWorkspacePasswordPolicyPtrOutputWithContext(ctx context.Context) WorkspacePasswordPolicyPtrOutput {
	return o
}

func (o WorkspacePasswordPolicyPtrOutput) Elem() WorkspacePasswordPolicyOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) WorkspacePasswordPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspacePasswordPolicy
		return ret
	}).(WorkspacePasswordPolicyOutput)
}

func (o WorkspacePasswordPolicyPtrOutput) AllowPassphrases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowPassphrases
	}).(pulumi.BoolPtrOutput)
}

// The number of historical passwords to prevent users from reusing. Set to zero to disable.
func (o WorkspacePasswordPolicyPtrOutput) History() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.History
	}).(pulumi.IntPtrOutput)
}

// The maximum length of a password.
func (o WorkspacePasswordPolicyPtrOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxLength
	}).(pulumi.IntPtrOutput)
}

// The minimum length of a password.
func (o WorkspacePasswordPolicyPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MinLength
	}).(pulumi.IntPtrOutput)
}

func (o WorkspacePasswordPolicyPtrOutput) MinPhraseLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MinPhraseLength
	}).(pulumi.IntPtrOutput)
}

// The minimum number of strength tests the password must meet.
func (o WorkspacePasswordPolicyPtrOutput) MinTests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacePasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MinTests
	}).(pulumi.IntPtrOutput)
}

type WorkspacePwnedPasswordEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspacePwnedPasswordEmailInput is an input type that accepts WorkspacePwnedPasswordEmailArgs and WorkspacePwnedPasswordEmailOutput values.
// You can construct a concrete instance of `WorkspacePwnedPasswordEmailInput` via:
//
//	WorkspacePwnedPasswordEmailArgs{...}
type WorkspacePwnedPasswordEmailInput interface {
	pulumi.Input

	ToWorkspacePwnedPasswordEmailOutput() WorkspacePwnedPasswordEmailOutput
	ToWorkspacePwnedPasswordEmailOutputWithContext(context.Context) WorkspacePwnedPasswordEmailOutput
}

type WorkspacePwnedPasswordEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspacePwnedPasswordEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePwnedPasswordEmail)(nil)).Elem()
}

func (i WorkspacePwnedPasswordEmailArgs) ToWorkspacePwnedPasswordEmailOutput() WorkspacePwnedPasswordEmailOutput {
	return i.ToWorkspacePwnedPasswordEmailOutputWithContext(context.Background())
}

func (i WorkspacePwnedPasswordEmailArgs) ToWorkspacePwnedPasswordEmailOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePwnedPasswordEmailOutput)
}

func (i WorkspacePwnedPasswordEmailArgs) ToWorkspacePwnedPasswordEmailPtrOutput() WorkspacePwnedPasswordEmailPtrOutput {
	return i.ToWorkspacePwnedPasswordEmailPtrOutputWithContext(context.Background())
}

func (i WorkspacePwnedPasswordEmailArgs) ToWorkspacePwnedPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePwnedPasswordEmailOutput).ToWorkspacePwnedPasswordEmailPtrOutputWithContext(ctx)
}

// WorkspacePwnedPasswordEmailPtrInput is an input type that accepts WorkspacePwnedPasswordEmailArgs, WorkspacePwnedPasswordEmailPtr and WorkspacePwnedPasswordEmailPtrOutput values.
// You can construct a concrete instance of `WorkspacePwnedPasswordEmailPtrInput` via:
//
//	        WorkspacePwnedPasswordEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspacePwnedPasswordEmailPtrInput interface {
	pulumi.Input

	ToWorkspacePwnedPasswordEmailPtrOutput() WorkspacePwnedPasswordEmailPtrOutput
	ToWorkspacePwnedPasswordEmailPtrOutputWithContext(context.Context) WorkspacePwnedPasswordEmailPtrOutput
}

type workspacePwnedPasswordEmailPtrType WorkspacePwnedPasswordEmailArgs

func WorkspacePwnedPasswordEmailPtr(v *WorkspacePwnedPasswordEmailArgs) WorkspacePwnedPasswordEmailPtrInput {
	return (*workspacePwnedPasswordEmailPtrType)(v)
}

func (*workspacePwnedPasswordEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePwnedPasswordEmail)(nil)).Elem()
}

func (i *workspacePwnedPasswordEmailPtrType) ToWorkspacePwnedPasswordEmailPtrOutput() WorkspacePwnedPasswordEmailPtrOutput {
	return i.ToWorkspacePwnedPasswordEmailPtrOutputWithContext(context.Background())
}

func (i *workspacePwnedPasswordEmailPtrType) ToWorkspacePwnedPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePwnedPasswordEmailPtrOutput)
}

type WorkspacePwnedPasswordEmailOutput struct{ *pulumi.OutputState }

func (WorkspacePwnedPasswordEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePwnedPasswordEmail)(nil)).Elem()
}

func (o WorkspacePwnedPasswordEmailOutput) ToWorkspacePwnedPasswordEmailOutput() WorkspacePwnedPasswordEmailOutput {
	return o
}

func (o WorkspacePwnedPasswordEmailOutput) ToWorkspacePwnedPasswordEmailOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailOutput {
	return o
}

func (o WorkspacePwnedPasswordEmailOutput) ToWorkspacePwnedPasswordEmailPtrOutput() WorkspacePwnedPasswordEmailPtrOutput {
	return o.ToWorkspacePwnedPasswordEmailPtrOutputWithContext(context.Background())
}

func (o WorkspacePwnedPasswordEmailOutput) ToWorkspacePwnedPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspacePwnedPasswordEmail) *WorkspacePwnedPasswordEmail {
		return &v
	}).(WorkspacePwnedPasswordEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspacePwnedPasswordEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspacePwnedPasswordEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspacePwnedPasswordEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspacePwnedPasswordEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspacePwnedPasswordEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspacePwnedPasswordEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePwnedPasswordEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspacePwnedPasswordEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspacePwnedPasswordEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePwnedPasswordEmail)(nil)).Elem()
}

func (o WorkspacePwnedPasswordEmailPtrOutput) ToWorkspacePwnedPasswordEmailPtrOutput() WorkspacePwnedPasswordEmailPtrOutput {
	return o
}

func (o WorkspacePwnedPasswordEmailPtrOutput) ToWorkspacePwnedPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspacePwnedPasswordEmailPtrOutput {
	return o
}

func (o WorkspacePwnedPasswordEmailPtrOutput) Elem() WorkspacePwnedPasswordEmailOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) WorkspacePwnedPasswordEmail {
		if v != nil {
			return *v
		}
		var ret WorkspacePwnedPasswordEmail
		return ret
	}).(WorkspacePwnedPasswordEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspacePwnedPasswordEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspacePwnedPasswordEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspacePwnedPasswordEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspacePwnedPasswordEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspacePwnedPasswordEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspacePwnedPasswordEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePwnedPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceRemoveMfaMethodEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceRemoveMfaMethodEmailInput is an input type that accepts WorkspaceRemoveMfaMethodEmailArgs and WorkspaceRemoveMfaMethodEmailOutput values.
// You can construct a concrete instance of `WorkspaceRemoveMfaMethodEmailInput` via:
//
//	WorkspaceRemoveMfaMethodEmailArgs{...}
type WorkspaceRemoveMfaMethodEmailInput interface {
	pulumi.Input

	ToWorkspaceRemoveMfaMethodEmailOutput() WorkspaceRemoveMfaMethodEmailOutput
	ToWorkspaceRemoveMfaMethodEmailOutputWithContext(context.Context) WorkspaceRemoveMfaMethodEmailOutput
}

type WorkspaceRemoveMfaMethodEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceRemoveMfaMethodEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRemoveMfaMethodEmail)(nil)).Elem()
}

func (i WorkspaceRemoveMfaMethodEmailArgs) ToWorkspaceRemoveMfaMethodEmailOutput() WorkspaceRemoveMfaMethodEmailOutput {
	return i.ToWorkspaceRemoveMfaMethodEmailOutputWithContext(context.Background())
}

func (i WorkspaceRemoveMfaMethodEmailArgs) ToWorkspaceRemoveMfaMethodEmailOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRemoveMfaMethodEmailOutput)
}

func (i WorkspaceRemoveMfaMethodEmailArgs) ToWorkspaceRemoveMfaMethodEmailPtrOutput() WorkspaceRemoveMfaMethodEmailPtrOutput {
	return i.ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceRemoveMfaMethodEmailArgs) ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRemoveMfaMethodEmailOutput).ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(ctx)
}

// WorkspaceRemoveMfaMethodEmailPtrInput is an input type that accepts WorkspaceRemoveMfaMethodEmailArgs, WorkspaceRemoveMfaMethodEmailPtr and WorkspaceRemoveMfaMethodEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceRemoveMfaMethodEmailPtrInput` via:
//
//	        WorkspaceRemoveMfaMethodEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceRemoveMfaMethodEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceRemoveMfaMethodEmailPtrOutput() WorkspaceRemoveMfaMethodEmailPtrOutput
	ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(context.Context) WorkspaceRemoveMfaMethodEmailPtrOutput
}

type workspaceRemoveMfaMethodEmailPtrType WorkspaceRemoveMfaMethodEmailArgs

func WorkspaceRemoveMfaMethodEmailPtr(v *WorkspaceRemoveMfaMethodEmailArgs) WorkspaceRemoveMfaMethodEmailPtrInput {
	return (*workspaceRemoveMfaMethodEmailPtrType)(v)
}

func (*workspaceRemoveMfaMethodEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRemoveMfaMethodEmail)(nil)).Elem()
}

func (i *workspaceRemoveMfaMethodEmailPtrType) ToWorkspaceRemoveMfaMethodEmailPtrOutput() WorkspaceRemoveMfaMethodEmailPtrOutput {
	return i.ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceRemoveMfaMethodEmailPtrType) ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRemoveMfaMethodEmailPtrOutput)
}

type WorkspaceRemoveMfaMethodEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceRemoveMfaMethodEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRemoveMfaMethodEmail)(nil)).Elem()
}

func (o WorkspaceRemoveMfaMethodEmailOutput) ToWorkspaceRemoveMfaMethodEmailOutput() WorkspaceRemoveMfaMethodEmailOutput {
	return o
}

func (o WorkspaceRemoveMfaMethodEmailOutput) ToWorkspaceRemoveMfaMethodEmailOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailOutput {
	return o
}

func (o WorkspaceRemoveMfaMethodEmailOutput) ToWorkspaceRemoveMfaMethodEmailPtrOutput() WorkspaceRemoveMfaMethodEmailPtrOutput {
	return o.ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceRemoveMfaMethodEmailOutput) ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceRemoveMfaMethodEmail) *WorkspaceRemoveMfaMethodEmail {
		return &v
	}).(WorkspaceRemoveMfaMethodEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceRemoveMfaMethodEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceRemoveMfaMethodEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceRemoveMfaMethodEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceRemoveMfaMethodEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceRemoveMfaMethodEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceRemoveMfaMethodEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRemoveMfaMethodEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceRemoveMfaMethodEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceRemoveMfaMethodEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRemoveMfaMethodEmail)(nil)).Elem()
}

func (o WorkspaceRemoveMfaMethodEmailPtrOutput) ToWorkspaceRemoveMfaMethodEmailPtrOutput() WorkspaceRemoveMfaMethodEmailPtrOutput {
	return o
}

func (o WorkspaceRemoveMfaMethodEmailPtrOutput) ToWorkspaceRemoveMfaMethodEmailPtrOutputWithContext(ctx context.Context) WorkspaceRemoveMfaMethodEmailPtrOutput {
	return o
}

func (o WorkspaceRemoveMfaMethodEmailPtrOutput) Elem() WorkspaceRemoveMfaMethodEmailOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) WorkspaceRemoveMfaMethodEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceRemoveMfaMethodEmail
		return ret
	}).(WorkspaceRemoveMfaMethodEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceRemoveMfaMethodEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRemoveMfaMethodEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceResetPasswordEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceResetPasswordEmailInput is an input type that accepts WorkspaceResetPasswordEmailArgs and WorkspaceResetPasswordEmailOutput values.
// You can construct a concrete instance of `WorkspaceResetPasswordEmailInput` via:
//
//	WorkspaceResetPasswordEmailArgs{...}
type WorkspaceResetPasswordEmailInput interface {
	pulumi.Input

	ToWorkspaceResetPasswordEmailOutput() WorkspaceResetPasswordEmailOutput
	ToWorkspaceResetPasswordEmailOutputWithContext(context.Context) WorkspaceResetPasswordEmailOutput
}

type WorkspaceResetPasswordEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceResetPasswordEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResetPasswordEmail)(nil)).Elem()
}

func (i WorkspaceResetPasswordEmailArgs) ToWorkspaceResetPasswordEmailOutput() WorkspaceResetPasswordEmailOutput {
	return i.ToWorkspaceResetPasswordEmailOutputWithContext(context.Background())
}

func (i WorkspaceResetPasswordEmailArgs) ToWorkspaceResetPasswordEmailOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPasswordEmailOutput)
}

func (i WorkspaceResetPasswordEmailArgs) ToWorkspaceResetPasswordEmailPtrOutput() WorkspaceResetPasswordEmailPtrOutput {
	return i.ToWorkspaceResetPasswordEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceResetPasswordEmailArgs) ToWorkspaceResetPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPasswordEmailOutput).ToWorkspaceResetPasswordEmailPtrOutputWithContext(ctx)
}

// WorkspaceResetPasswordEmailPtrInput is an input type that accepts WorkspaceResetPasswordEmailArgs, WorkspaceResetPasswordEmailPtr and WorkspaceResetPasswordEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceResetPasswordEmailPtrInput` via:
//
//	        WorkspaceResetPasswordEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceResetPasswordEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceResetPasswordEmailPtrOutput() WorkspaceResetPasswordEmailPtrOutput
	ToWorkspaceResetPasswordEmailPtrOutputWithContext(context.Context) WorkspaceResetPasswordEmailPtrOutput
}

type workspaceResetPasswordEmailPtrType WorkspaceResetPasswordEmailArgs

func WorkspaceResetPasswordEmailPtr(v *WorkspaceResetPasswordEmailArgs) WorkspaceResetPasswordEmailPtrInput {
	return (*workspaceResetPasswordEmailPtrType)(v)
}

func (*workspaceResetPasswordEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResetPasswordEmail)(nil)).Elem()
}

func (i *workspaceResetPasswordEmailPtrType) ToWorkspaceResetPasswordEmailPtrOutput() WorkspaceResetPasswordEmailPtrOutput {
	return i.ToWorkspaceResetPasswordEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceResetPasswordEmailPtrType) ToWorkspaceResetPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPasswordEmailPtrOutput)
}

type WorkspaceResetPasswordEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceResetPasswordEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResetPasswordEmail)(nil)).Elem()
}

func (o WorkspaceResetPasswordEmailOutput) ToWorkspaceResetPasswordEmailOutput() WorkspaceResetPasswordEmailOutput {
	return o
}

func (o WorkspaceResetPasswordEmailOutput) ToWorkspaceResetPasswordEmailOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailOutput {
	return o
}

func (o WorkspaceResetPasswordEmailOutput) ToWorkspaceResetPasswordEmailPtrOutput() WorkspaceResetPasswordEmailPtrOutput {
	return o.ToWorkspaceResetPasswordEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceResetPasswordEmailOutput) ToWorkspaceResetPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceResetPasswordEmail) *WorkspaceResetPasswordEmail {
		return &v
	}).(WorkspaceResetPasswordEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceResetPasswordEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceResetPasswordEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceResetPasswordEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceResetPasswordEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceResetPasswordEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceResetPasswordEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResetPasswordEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceResetPasswordEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceResetPasswordEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResetPasswordEmail)(nil)).Elem()
}

func (o WorkspaceResetPasswordEmailPtrOutput) ToWorkspaceResetPasswordEmailPtrOutput() WorkspaceResetPasswordEmailPtrOutput {
	return o
}

func (o WorkspaceResetPasswordEmailPtrOutput) ToWorkspaceResetPasswordEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPasswordEmailPtrOutput {
	return o
}

func (o WorkspaceResetPasswordEmailPtrOutput) Elem() WorkspaceResetPasswordEmailOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) WorkspaceResetPasswordEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceResetPasswordEmail
		return ret
	}).(WorkspaceResetPasswordEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceResetPasswordEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceResetPasswordEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceResetPasswordEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceResetPasswordEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceResetPasswordEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceResetPasswordEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPasswordEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceResetPhoneNumberEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceResetPhoneNumberEmailInput is an input type that accepts WorkspaceResetPhoneNumberEmailArgs and WorkspaceResetPhoneNumberEmailOutput values.
// You can construct a concrete instance of `WorkspaceResetPhoneNumberEmailInput` via:
//
//	WorkspaceResetPhoneNumberEmailArgs{...}
type WorkspaceResetPhoneNumberEmailInput interface {
	pulumi.Input

	ToWorkspaceResetPhoneNumberEmailOutput() WorkspaceResetPhoneNumberEmailOutput
	ToWorkspaceResetPhoneNumberEmailOutputWithContext(context.Context) WorkspaceResetPhoneNumberEmailOutput
}

type WorkspaceResetPhoneNumberEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceResetPhoneNumberEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResetPhoneNumberEmail)(nil)).Elem()
}

func (i WorkspaceResetPhoneNumberEmailArgs) ToWorkspaceResetPhoneNumberEmailOutput() WorkspaceResetPhoneNumberEmailOutput {
	return i.ToWorkspaceResetPhoneNumberEmailOutputWithContext(context.Background())
}

func (i WorkspaceResetPhoneNumberEmailArgs) ToWorkspaceResetPhoneNumberEmailOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPhoneNumberEmailOutput)
}

func (i WorkspaceResetPhoneNumberEmailArgs) ToWorkspaceResetPhoneNumberEmailPtrOutput() WorkspaceResetPhoneNumberEmailPtrOutput {
	return i.ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceResetPhoneNumberEmailArgs) ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPhoneNumberEmailOutput).ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(ctx)
}

// WorkspaceResetPhoneNumberEmailPtrInput is an input type that accepts WorkspaceResetPhoneNumberEmailArgs, WorkspaceResetPhoneNumberEmailPtr and WorkspaceResetPhoneNumberEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceResetPhoneNumberEmailPtrInput` via:
//
//	        WorkspaceResetPhoneNumberEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceResetPhoneNumberEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceResetPhoneNumberEmailPtrOutput() WorkspaceResetPhoneNumberEmailPtrOutput
	ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(context.Context) WorkspaceResetPhoneNumberEmailPtrOutput
}

type workspaceResetPhoneNumberEmailPtrType WorkspaceResetPhoneNumberEmailArgs

func WorkspaceResetPhoneNumberEmailPtr(v *WorkspaceResetPhoneNumberEmailArgs) WorkspaceResetPhoneNumberEmailPtrInput {
	return (*workspaceResetPhoneNumberEmailPtrType)(v)
}

func (*workspaceResetPhoneNumberEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResetPhoneNumberEmail)(nil)).Elem()
}

func (i *workspaceResetPhoneNumberEmailPtrType) ToWorkspaceResetPhoneNumberEmailPtrOutput() WorkspaceResetPhoneNumberEmailPtrOutput {
	return i.ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceResetPhoneNumberEmailPtrType) ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResetPhoneNumberEmailPtrOutput)
}

type WorkspaceResetPhoneNumberEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceResetPhoneNumberEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResetPhoneNumberEmail)(nil)).Elem()
}

func (o WorkspaceResetPhoneNumberEmailOutput) ToWorkspaceResetPhoneNumberEmailOutput() WorkspaceResetPhoneNumberEmailOutput {
	return o
}

func (o WorkspaceResetPhoneNumberEmailOutput) ToWorkspaceResetPhoneNumberEmailOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailOutput {
	return o
}

func (o WorkspaceResetPhoneNumberEmailOutput) ToWorkspaceResetPhoneNumberEmailPtrOutput() WorkspaceResetPhoneNumberEmailPtrOutput {
	return o.ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceResetPhoneNumberEmailOutput) ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceResetPhoneNumberEmail) *WorkspaceResetPhoneNumberEmail {
		return &v
	}).(WorkspaceResetPhoneNumberEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceResetPhoneNumberEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceResetPhoneNumberEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceResetPhoneNumberEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceResetPhoneNumberEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceResetPhoneNumberEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceResetPhoneNumberEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResetPhoneNumberEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceResetPhoneNumberEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceResetPhoneNumberEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResetPhoneNumberEmail)(nil)).Elem()
}

func (o WorkspaceResetPhoneNumberEmailPtrOutput) ToWorkspaceResetPhoneNumberEmailPtrOutput() WorkspaceResetPhoneNumberEmailPtrOutput {
	return o
}

func (o WorkspaceResetPhoneNumberEmailPtrOutput) ToWorkspaceResetPhoneNumberEmailPtrOutputWithContext(ctx context.Context) WorkspaceResetPhoneNumberEmailPtrOutput {
	return o
}

func (o WorkspaceResetPhoneNumberEmailPtrOutput) Elem() WorkspaceResetPhoneNumberEmailOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) WorkspaceResetPhoneNumberEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceResetPhoneNumberEmail
		return ret
	}).(WorkspaceResetPhoneNumberEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceResetPhoneNumberEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResetPhoneNumberEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceSaml struct {
	// The ACS URL for the SAML authentication flow.
	AcsUrl string `pulumi:"acsUrl"`
	// The URL to redirect to after the SAML exchange.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The name of the service provider that will be displayed to users.
	SpEntityId string `pulumi:"spEntityId"`
}

// WorkspaceSamlInput is an input type that accepts WorkspaceSamlArgs and WorkspaceSamlOutput values.
// You can construct a concrete instance of `WorkspaceSamlInput` via:
//
//	WorkspaceSamlArgs{...}
type WorkspaceSamlInput interface {
	pulumi.Input

	ToWorkspaceSamlOutput() WorkspaceSamlOutput
	ToWorkspaceSamlOutputWithContext(context.Context) WorkspaceSamlOutput
}

type WorkspaceSamlArgs struct {
	// The ACS URL for the SAML authentication flow.
	AcsUrl pulumi.StringInput `pulumi:"acsUrl"`
	// The URL to redirect to after the SAML exchange.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The name of the service provider that will be displayed to users.
	SpEntityId pulumi.StringInput `pulumi:"spEntityId"`
}

func (WorkspaceSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSaml)(nil)).Elem()
}

func (i WorkspaceSamlArgs) ToWorkspaceSamlOutput() WorkspaceSamlOutput {
	return i.ToWorkspaceSamlOutputWithContext(context.Background())
}

func (i WorkspaceSamlArgs) ToWorkspaceSamlOutputWithContext(ctx context.Context) WorkspaceSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlOutput)
}

func (i WorkspaceSamlArgs) ToWorkspaceSamlPtrOutput() WorkspaceSamlPtrOutput {
	return i.ToWorkspaceSamlPtrOutputWithContext(context.Background())
}

func (i WorkspaceSamlArgs) ToWorkspaceSamlPtrOutputWithContext(ctx context.Context) WorkspaceSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlOutput).ToWorkspaceSamlPtrOutputWithContext(ctx)
}

// WorkspaceSamlPtrInput is an input type that accepts WorkspaceSamlArgs, WorkspaceSamlPtr and WorkspaceSamlPtrOutput values.
// You can construct a concrete instance of `WorkspaceSamlPtrInput` via:
//
//	        WorkspaceSamlArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSamlPtrInput interface {
	pulumi.Input

	ToWorkspaceSamlPtrOutput() WorkspaceSamlPtrOutput
	ToWorkspaceSamlPtrOutputWithContext(context.Context) WorkspaceSamlPtrOutput
}

type workspaceSamlPtrType WorkspaceSamlArgs

func WorkspaceSamlPtr(v *WorkspaceSamlArgs) WorkspaceSamlPtrInput {
	return (*workspaceSamlPtrType)(v)
}

func (*workspaceSamlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSaml)(nil)).Elem()
}

func (i *workspaceSamlPtrType) ToWorkspaceSamlPtrOutput() WorkspaceSamlPtrOutput {
	return i.ToWorkspaceSamlPtrOutputWithContext(context.Background())
}

func (i *workspaceSamlPtrType) ToWorkspaceSamlPtrOutputWithContext(ctx context.Context) WorkspaceSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlPtrOutput)
}

type WorkspaceSamlOutput struct{ *pulumi.OutputState }

func (WorkspaceSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSaml)(nil)).Elem()
}

func (o WorkspaceSamlOutput) ToWorkspaceSamlOutput() WorkspaceSamlOutput {
	return o
}

func (o WorkspaceSamlOutput) ToWorkspaceSamlOutputWithContext(ctx context.Context) WorkspaceSamlOutput {
	return o
}

func (o WorkspaceSamlOutput) ToWorkspaceSamlPtrOutput() WorkspaceSamlPtrOutput {
	return o.ToWorkspaceSamlPtrOutputWithContext(context.Background())
}

func (o WorkspaceSamlOutput) ToWorkspaceSamlPtrOutputWithContext(ctx context.Context) WorkspaceSamlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSaml) *WorkspaceSaml {
		return &v
	}).(WorkspaceSamlPtrOutput)
}

// The ACS URL for the SAML authentication flow.
func (o WorkspaceSamlOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSaml) string { return v.AcsUrl }).(pulumi.StringOutput)
}

// The URL to redirect to after the SAML exchange.
func (o WorkspaceSamlOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSaml) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The name of the service provider that will be displayed to users.
func (o WorkspaceSamlOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSaml) string { return v.SpEntityId }).(pulumi.StringOutput)
}

type WorkspaceSamlPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSamlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSaml)(nil)).Elem()
}

func (o WorkspaceSamlPtrOutput) ToWorkspaceSamlPtrOutput() WorkspaceSamlPtrOutput {
	return o
}

func (o WorkspaceSamlPtrOutput) ToWorkspaceSamlPtrOutputWithContext(ctx context.Context) WorkspaceSamlPtrOutput {
	return o
}

func (o WorkspaceSamlPtrOutput) Elem() WorkspaceSamlOutput {
	return o.ApplyT(func(v *WorkspaceSaml) WorkspaceSaml {
		if v != nil {
			return *v
		}
		var ret WorkspaceSaml
		return ret
	}).(WorkspaceSamlOutput)
}

// The ACS URL for the SAML authentication flow.
func (o WorkspaceSamlPtrOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSaml) *string {
		if v == nil {
			return nil
		}
		return &v.AcsUrl
	}).(pulumi.StringPtrOutput)
}

// The URL to redirect to after the SAML exchange.
func (o WorkspaceSamlPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSaml) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The name of the service provider that will be displayed to users.
func (o WorkspaceSamlPtrOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSaml) *string {
		if v == nil {
			return nil
		}
		return &v.SpEntityId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceSmsAuthenticationEnabledEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceSmsAuthenticationEnabledEmailInput is an input type that accepts WorkspaceSmsAuthenticationEnabledEmailArgs and WorkspaceSmsAuthenticationEnabledEmailOutput values.
// You can construct a concrete instance of `WorkspaceSmsAuthenticationEnabledEmailInput` via:
//
//	WorkspaceSmsAuthenticationEnabledEmailArgs{...}
type WorkspaceSmsAuthenticationEnabledEmailInput interface {
	pulumi.Input

	ToWorkspaceSmsAuthenticationEnabledEmailOutput() WorkspaceSmsAuthenticationEnabledEmailOutput
	ToWorkspaceSmsAuthenticationEnabledEmailOutputWithContext(context.Context) WorkspaceSmsAuthenticationEnabledEmailOutput
}

type WorkspaceSmsAuthenticationEnabledEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceSmsAuthenticationEnabledEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSmsAuthenticationEnabledEmail)(nil)).Elem()
}

func (i WorkspaceSmsAuthenticationEnabledEmailArgs) ToWorkspaceSmsAuthenticationEnabledEmailOutput() WorkspaceSmsAuthenticationEnabledEmailOutput {
	return i.ToWorkspaceSmsAuthenticationEnabledEmailOutputWithContext(context.Background())
}

func (i WorkspaceSmsAuthenticationEnabledEmailArgs) ToWorkspaceSmsAuthenticationEnabledEmailOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSmsAuthenticationEnabledEmailOutput)
}

func (i WorkspaceSmsAuthenticationEnabledEmailArgs) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutput() WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return i.ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceSmsAuthenticationEnabledEmailArgs) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSmsAuthenticationEnabledEmailOutput).ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(ctx)
}

// WorkspaceSmsAuthenticationEnabledEmailPtrInput is an input type that accepts WorkspaceSmsAuthenticationEnabledEmailArgs, WorkspaceSmsAuthenticationEnabledEmailPtr and WorkspaceSmsAuthenticationEnabledEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceSmsAuthenticationEnabledEmailPtrInput` via:
//
//	        WorkspaceSmsAuthenticationEnabledEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSmsAuthenticationEnabledEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceSmsAuthenticationEnabledEmailPtrOutput() WorkspaceSmsAuthenticationEnabledEmailPtrOutput
	ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(context.Context) WorkspaceSmsAuthenticationEnabledEmailPtrOutput
}

type workspaceSmsAuthenticationEnabledEmailPtrType WorkspaceSmsAuthenticationEnabledEmailArgs

func WorkspaceSmsAuthenticationEnabledEmailPtr(v *WorkspaceSmsAuthenticationEnabledEmailArgs) WorkspaceSmsAuthenticationEnabledEmailPtrInput {
	return (*workspaceSmsAuthenticationEnabledEmailPtrType)(v)
}

func (*workspaceSmsAuthenticationEnabledEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSmsAuthenticationEnabledEmail)(nil)).Elem()
}

func (i *workspaceSmsAuthenticationEnabledEmailPtrType) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutput() WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return i.ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceSmsAuthenticationEnabledEmailPtrType) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSmsAuthenticationEnabledEmailPtrOutput)
}

type WorkspaceSmsAuthenticationEnabledEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceSmsAuthenticationEnabledEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSmsAuthenticationEnabledEmail)(nil)).Elem()
}

func (o WorkspaceSmsAuthenticationEnabledEmailOutput) ToWorkspaceSmsAuthenticationEnabledEmailOutput() WorkspaceSmsAuthenticationEnabledEmailOutput {
	return o
}

func (o WorkspaceSmsAuthenticationEnabledEmailOutput) ToWorkspaceSmsAuthenticationEnabledEmailOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailOutput {
	return o
}

func (o WorkspaceSmsAuthenticationEnabledEmailOutput) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutput() WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return o.ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceSmsAuthenticationEnabledEmailOutput) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSmsAuthenticationEnabledEmail) *WorkspaceSmsAuthenticationEnabledEmail {
		return &v
	}).(WorkspaceSmsAuthenticationEnabledEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceSmsAuthenticationEnabledEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSmsAuthenticationEnabledEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceSmsAuthenticationEnabledEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSmsAuthenticationEnabledEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSmsAuthenticationEnabledEmail)(nil)).Elem()
}

func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutput() WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return o
}

func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) ToWorkspaceSmsAuthenticationEnabledEmailPtrOutputWithContext(ctx context.Context) WorkspaceSmsAuthenticationEnabledEmailPtrOutput {
	return o
}

func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) Elem() WorkspaceSmsAuthenticationEnabledEmailOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) WorkspaceSmsAuthenticationEnabledEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceSmsAuthenticationEnabledEmail
		return ret
	}).(WorkspaceSmsAuthenticationEnabledEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceSmsAuthenticationEnabledEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSmsAuthenticationEnabledEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceSsoDomainPolicy struct {
	// Whether to allow users to add their own email domain without validating the domain through DNS.
	AllowVerifiedUsersToAddDomains *bool `pulumi:"allowVerifiedUsersToAddDomains"`
	// Whether to allow users to sign in even via SSO even if the associated domain has not been validated through DNS.
	BypassDomainCrossValidation *bool `pulumi:"bypassDomainCrossValidation"`
	// Whether to automatically mark new SSO domains as validated, without validating the domain through DNS.
	SkipDomainVerification *bool `pulumi:"skipDomainVerification"`
}

// WorkspaceSsoDomainPolicyInput is an input type that accepts WorkspaceSsoDomainPolicyArgs and WorkspaceSsoDomainPolicyOutput values.
// You can construct a concrete instance of `WorkspaceSsoDomainPolicyInput` via:
//
//	WorkspaceSsoDomainPolicyArgs{...}
type WorkspaceSsoDomainPolicyInput interface {
	pulumi.Input

	ToWorkspaceSsoDomainPolicyOutput() WorkspaceSsoDomainPolicyOutput
	ToWorkspaceSsoDomainPolicyOutputWithContext(context.Context) WorkspaceSsoDomainPolicyOutput
}

type WorkspaceSsoDomainPolicyArgs struct {
	// Whether to allow users to add their own email domain without validating the domain through DNS.
	AllowVerifiedUsersToAddDomains pulumi.BoolPtrInput `pulumi:"allowVerifiedUsersToAddDomains"`
	// Whether to allow users to sign in even via SSO even if the associated domain has not been validated through DNS.
	BypassDomainCrossValidation pulumi.BoolPtrInput `pulumi:"bypassDomainCrossValidation"`
	// Whether to automatically mark new SSO domains as validated, without validating the domain through DNS.
	SkipDomainVerification pulumi.BoolPtrInput `pulumi:"skipDomainVerification"`
}

func (WorkspaceSsoDomainPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSsoDomainPolicy)(nil)).Elem()
}

func (i WorkspaceSsoDomainPolicyArgs) ToWorkspaceSsoDomainPolicyOutput() WorkspaceSsoDomainPolicyOutput {
	return i.ToWorkspaceSsoDomainPolicyOutputWithContext(context.Background())
}

func (i WorkspaceSsoDomainPolicyArgs) ToWorkspaceSsoDomainPolicyOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoDomainPolicyOutput)
}

func (i WorkspaceSsoDomainPolicyArgs) ToWorkspaceSsoDomainPolicyPtrOutput() WorkspaceSsoDomainPolicyPtrOutput {
	return i.ToWorkspaceSsoDomainPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceSsoDomainPolicyArgs) ToWorkspaceSsoDomainPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoDomainPolicyOutput).ToWorkspaceSsoDomainPolicyPtrOutputWithContext(ctx)
}

// WorkspaceSsoDomainPolicyPtrInput is an input type that accepts WorkspaceSsoDomainPolicyArgs, WorkspaceSsoDomainPolicyPtr and WorkspaceSsoDomainPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceSsoDomainPolicyPtrInput` via:
//
//	        WorkspaceSsoDomainPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSsoDomainPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceSsoDomainPolicyPtrOutput() WorkspaceSsoDomainPolicyPtrOutput
	ToWorkspaceSsoDomainPolicyPtrOutputWithContext(context.Context) WorkspaceSsoDomainPolicyPtrOutput
}

type workspaceSsoDomainPolicyPtrType WorkspaceSsoDomainPolicyArgs

func WorkspaceSsoDomainPolicyPtr(v *WorkspaceSsoDomainPolicyArgs) WorkspaceSsoDomainPolicyPtrInput {
	return (*workspaceSsoDomainPolicyPtrType)(v)
}

func (*workspaceSsoDomainPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSsoDomainPolicy)(nil)).Elem()
}

func (i *workspaceSsoDomainPolicyPtrType) ToWorkspaceSsoDomainPolicyPtrOutput() WorkspaceSsoDomainPolicyPtrOutput {
	return i.ToWorkspaceSsoDomainPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceSsoDomainPolicyPtrType) ToWorkspaceSsoDomainPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoDomainPolicyPtrOutput)
}

type WorkspaceSsoDomainPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceSsoDomainPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSsoDomainPolicy)(nil)).Elem()
}

func (o WorkspaceSsoDomainPolicyOutput) ToWorkspaceSsoDomainPolicyOutput() WorkspaceSsoDomainPolicyOutput {
	return o
}

func (o WorkspaceSsoDomainPolicyOutput) ToWorkspaceSsoDomainPolicyOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyOutput {
	return o
}

func (o WorkspaceSsoDomainPolicyOutput) ToWorkspaceSsoDomainPolicyPtrOutput() WorkspaceSsoDomainPolicyPtrOutput {
	return o.ToWorkspaceSsoDomainPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceSsoDomainPolicyOutput) ToWorkspaceSsoDomainPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSsoDomainPolicy) *WorkspaceSsoDomainPolicy {
		return &v
	}).(WorkspaceSsoDomainPolicyPtrOutput)
}

// Whether to allow users to add their own email domain without validating the domain through DNS.
func (o WorkspaceSsoDomainPolicyOutput) AllowVerifiedUsersToAddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceSsoDomainPolicy) *bool { return v.AllowVerifiedUsersToAddDomains }).(pulumi.BoolPtrOutput)
}

// Whether to allow users to sign in even via SSO even if the associated domain has not been validated through DNS.
func (o WorkspaceSsoDomainPolicyOutput) BypassDomainCrossValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceSsoDomainPolicy) *bool { return v.BypassDomainCrossValidation }).(pulumi.BoolPtrOutput)
}

// Whether to automatically mark new SSO domains as validated, without validating the domain through DNS.
func (o WorkspaceSsoDomainPolicyOutput) SkipDomainVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceSsoDomainPolicy) *bool { return v.SkipDomainVerification }).(pulumi.BoolPtrOutput)
}

type WorkspaceSsoDomainPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSsoDomainPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSsoDomainPolicy)(nil)).Elem()
}

func (o WorkspaceSsoDomainPolicyPtrOutput) ToWorkspaceSsoDomainPolicyPtrOutput() WorkspaceSsoDomainPolicyPtrOutput {
	return o
}

func (o WorkspaceSsoDomainPolicyPtrOutput) ToWorkspaceSsoDomainPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoDomainPolicyPtrOutput {
	return o
}

func (o WorkspaceSsoDomainPolicyPtrOutput) Elem() WorkspaceSsoDomainPolicyOutput {
	return o.ApplyT(func(v *WorkspaceSsoDomainPolicy) WorkspaceSsoDomainPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceSsoDomainPolicy
		return ret
	}).(WorkspaceSsoDomainPolicyOutput)
}

// Whether to allow users to add their own email domain without validating the domain through DNS.
func (o WorkspaceSsoDomainPolicyPtrOutput) AllowVerifiedUsersToAddDomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceSsoDomainPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVerifiedUsersToAddDomains
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow users to sign in even via SSO even if the associated domain has not been validated through DNS.
func (o WorkspaceSsoDomainPolicyPtrOutput) BypassDomainCrossValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceSsoDomainPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.BypassDomainCrossValidation
	}).(pulumi.BoolPtrOutput)
}

// Whether to automatically mark new SSO domains as validated, without validating the domain through DNS.
func (o WorkspaceSsoDomainPolicyPtrOutput) SkipDomainVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceSsoDomainPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.SkipDomainVerification
	}).(pulumi.BoolPtrOutput)
}

type WorkspaceSsoMultiTenantPolicy struct {
	// Strategy for logging in nonexisting users that match SSO configurations for multiple tenants when no tenant has been specified. Either BLOCK or FIRST_CREATED.
	UnspecifiedTenantStrategy *string `pulumi:"unspecifiedTenantStrategy"`
	// Whether users with existing accounts that match SSO configurations for multiple tenants should be logged in using the SSO for their active (last logged into) account, or whether the unspecified tenant strategy should apply.
	UseActiveTenant *bool `pulumi:"useActiveTenant"`
}

// WorkspaceSsoMultiTenantPolicyInput is an input type that accepts WorkspaceSsoMultiTenantPolicyArgs and WorkspaceSsoMultiTenantPolicyOutput values.
// You can construct a concrete instance of `WorkspaceSsoMultiTenantPolicyInput` via:
//
//	WorkspaceSsoMultiTenantPolicyArgs{...}
type WorkspaceSsoMultiTenantPolicyInput interface {
	pulumi.Input

	ToWorkspaceSsoMultiTenantPolicyOutput() WorkspaceSsoMultiTenantPolicyOutput
	ToWorkspaceSsoMultiTenantPolicyOutputWithContext(context.Context) WorkspaceSsoMultiTenantPolicyOutput
}

type WorkspaceSsoMultiTenantPolicyArgs struct {
	// Strategy for logging in nonexisting users that match SSO configurations for multiple tenants when no tenant has been specified. Either BLOCK or FIRST_CREATED.
	UnspecifiedTenantStrategy pulumi.StringPtrInput `pulumi:"unspecifiedTenantStrategy"`
	// Whether users with existing accounts that match SSO configurations for multiple tenants should be logged in using the SSO for their active (last logged into) account, or whether the unspecified tenant strategy should apply.
	UseActiveTenant pulumi.BoolPtrInput `pulumi:"useActiveTenant"`
}

func (WorkspaceSsoMultiTenantPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSsoMultiTenantPolicy)(nil)).Elem()
}

func (i WorkspaceSsoMultiTenantPolicyArgs) ToWorkspaceSsoMultiTenantPolicyOutput() WorkspaceSsoMultiTenantPolicyOutput {
	return i.ToWorkspaceSsoMultiTenantPolicyOutputWithContext(context.Background())
}

func (i WorkspaceSsoMultiTenantPolicyArgs) ToWorkspaceSsoMultiTenantPolicyOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoMultiTenantPolicyOutput)
}

func (i WorkspaceSsoMultiTenantPolicyArgs) ToWorkspaceSsoMultiTenantPolicyPtrOutput() WorkspaceSsoMultiTenantPolicyPtrOutput {
	return i.ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(context.Background())
}

func (i WorkspaceSsoMultiTenantPolicyArgs) ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoMultiTenantPolicyOutput).ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(ctx)
}

// WorkspaceSsoMultiTenantPolicyPtrInput is an input type that accepts WorkspaceSsoMultiTenantPolicyArgs, WorkspaceSsoMultiTenantPolicyPtr and WorkspaceSsoMultiTenantPolicyPtrOutput values.
// You can construct a concrete instance of `WorkspaceSsoMultiTenantPolicyPtrInput` via:
//
//	        WorkspaceSsoMultiTenantPolicyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSsoMultiTenantPolicyPtrInput interface {
	pulumi.Input

	ToWorkspaceSsoMultiTenantPolicyPtrOutput() WorkspaceSsoMultiTenantPolicyPtrOutput
	ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(context.Context) WorkspaceSsoMultiTenantPolicyPtrOutput
}

type workspaceSsoMultiTenantPolicyPtrType WorkspaceSsoMultiTenantPolicyArgs

func WorkspaceSsoMultiTenantPolicyPtr(v *WorkspaceSsoMultiTenantPolicyArgs) WorkspaceSsoMultiTenantPolicyPtrInput {
	return (*workspaceSsoMultiTenantPolicyPtrType)(v)
}

func (*workspaceSsoMultiTenantPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSsoMultiTenantPolicy)(nil)).Elem()
}

func (i *workspaceSsoMultiTenantPolicyPtrType) ToWorkspaceSsoMultiTenantPolicyPtrOutput() WorkspaceSsoMultiTenantPolicyPtrOutput {
	return i.ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(context.Background())
}

func (i *workspaceSsoMultiTenantPolicyPtrType) ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSsoMultiTenantPolicyPtrOutput)
}

type WorkspaceSsoMultiTenantPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceSsoMultiTenantPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSsoMultiTenantPolicy)(nil)).Elem()
}

func (o WorkspaceSsoMultiTenantPolicyOutput) ToWorkspaceSsoMultiTenantPolicyOutput() WorkspaceSsoMultiTenantPolicyOutput {
	return o
}

func (o WorkspaceSsoMultiTenantPolicyOutput) ToWorkspaceSsoMultiTenantPolicyOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyOutput {
	return o
}

func (o WorkspaceSsoMultiTenantPolicyOutput) ToWorkspaceSsoMultiTenantPolicyPtrOutput() WorkspaceSsoMultiTenantPolicyPtrOutput {
	return o.ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(context.Background())
}

func (o WorkspaceSsoMultiTenantPolicyOutput) ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSsoMultiTenantPolicy) *WorkspaceSsoMultiTenantPolicy {
		return &v
	}).(WorkspaceSsoMultiTenantPolicyPtrOutput)
}

// Strategy for logging in nonexisting users that match SSO configurations for multiple tenants when no tenant has been specified. Either BLOCK or FIRST_CREATED.
func (o WorkspaceSsoMultiTenantPolicyOutput) UnspecifiedTenantStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSsoMultiTenantPolicy) *string { return v.UnspecifiedTenantStrategy }).(pulumi.StringPtrOutput)
}

// Whether users with existing accounts that match SSO configurations for multiple tenants should be logged in using the SSO for their active (last logged into) account, or whether the unspecified tenant strategy should apply.
func (o WorkspaceSsoMultiTenantPolicyOutput) UseActiveTenant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceSsoMultiTenantPolicy) *bool { return v.UseActiveTenant }).(pulumi.BoolPtrOutput)
}

type WorkspaceSsoMultiTenantPolicyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSsoMultiTenantPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSsoMultiTenantPolicy)(nil)).Elem()
}

func (o WorkspaceSsoMultiTenantPolicyPtrOutput) ToWorkspaceSsoMultiTenantPolicyPtrOutput() WorkspaceSsoMultiTenantPolicyPtrOutput {
	return o
}

func (o WorkspaceSsoMultiTenantPolicyPtrOutput) ToWorkspaceSsoMultiTenantPolicyPtrOutputWithContext(ctx context.Context) WorkspaceSsoMultiTenantPolicyPtrOutput {
	return o
}

func (o WorkspaceSsoMultiTenantPolicyPtrOutput) Elem() WorkspaceSsoMultiTenantPolicyOutput {
	return o.ApplyT(func(v *WorkspaceSsoMultiTenantPolicy) WorkspaceSsoMultiTenantPolicy {
		if v != nil {
			return *v
		}
		var ret WorkspaceSsoMultiTenantPolicy
		return ret
	}).(WorkspaceSsoMultiTenantPolicyOutput)
}

// Strategy for logging in nonexisting users that match SSO configurations for multiple tenants when no tenant has been specified. Either BLOCK or FIRST_CREATED.
func (o WorkspaceSsoMultiTenantPolicyPtrOutput) UnspecifiedTenantStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSsoMultiTenantPolicy) *string {
		if v == nil {
			return nil
		}
		return v.UnspecifiedTenantStrategy
	}).(pulumi.StringPtrOutput)
}

// Whether users with existing accounts that match SSO configurations for multiple tenants should be logged in using the SSO for their active (last logged into) account, or whether the unspecified tenant strategy should apply.
func (o WorkspaceSsoMultiTenantPolicyPtrOutput) UseActiveTenant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceSsoMultiTenantPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.UseActiveTenant
	}).(pulumi.BoolPtrOutput)
}

type WorkspaceSuspiciousIpEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceSuspiciousIpEmailInput is an input type that accepts WorkspaceSuspiciousIpEmailArgs and WorkspaceSuspiciousIpEmailOutput values.
// You can construct a concrete instance of `WorkspaceSuspiciousIpEmailInput` via:
//
//	WorkspaceSuspiciousIpEmailArgs{...}
type WorkspaceSuspiciousIpEmailInput interface {
	pulumi.Input

	ToWorkspaceSuspiciousIpEmailOutput() WorkspaceSuspiciousIpEmailOutput
	ToWorkspaceSuspiciousIpEmailOutputWithContext(context.Context) WorkspaceSuspiciousIpEmailOutput
}

type WorkspaceSuspiciousIpEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceSuspiciousIpEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSuspiciousIpEmail)(nil)).Elem()
}

func (i WorkspaceSuspiciousIpEmailArgs) ToWorkspaceSuspiciousIpEmailOutput() WorkspaceSuspiciousIpEmailOutput {
	return i.ToWorkspaceSuspiciousIpEmailOutputWithContext(context.Background())
}

func (i WorkspaceSuspiciousIpEmailArgs) ToWorkspaceSuspiciousIpEmailOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSuspiciousIpEmailOutput)
}

func (i WorkspaceSuspiciousIpEmailArgs) ToWorkspaceSuspiciousIpEmailPtrOutput() WorkspaceSuspiciousIpEmailPtrOutput {
	return i.ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceSuspiciousIpEmailArgs) ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSuspiciousIpEmailOutput).ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(ctx)
}

// WorkspaceSuspiciousIpEmailPtrInput is an input type that accepts WorkspaceSuspiciousIpEmailArgs, WorkspaceSuspiciousIpEmailPtr and WorkspaceSuspiciousIpEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceSuspiciousIpEmailPtrInput` via:
//
//	        WorkspaceSuspiciousIpEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSuspiciousIpEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceSuspiciousIpEmailPtrOutput() WorkspaceSuspiciousIpEmailPtrOutput
	ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(context.Context) WorkspaceSuspiciousIpEmailPtrOutput
}

type workspaceSuspiciousIpEmailPtrType WorkspaceSuspiciousIpEmailArgs

func WorkspaceSuspiciousIpEmailPtr(v *WorkspaceSuspiciousIpEmailArgs) WorkspaceSuspiciousIpEmailPtrInput {
	return (*workspaceSuspiciousIpEmailPtrType)(v)
}

func (*workspaceSuspiciousIpEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSuspiciousIpEmail)(nil)).Elem()
}

func (i *workspaceSuspiciousIpEmailPtrType) ToWorkspaceSuspiciousIpEmailPtrOutput() WorkspaceSuspiciousIpEmailPtrOutput {
	return i.ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceSuspiciousIpEmailPtrType) ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSuspiciousIpEmailPtrOutput)
}

type WorkspaceSuspiciousIpEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceSuspiciousIpEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSuspiciousIpEmail)(nil)).Elem()
}

func (o WorkspaceSuspiciousIpEmailOutput) ToWorkspaceSuspiciousIpEmailOutput() WorkspaceSuspiciousIpEmailOutput {
	return o
}

func (o WorkspaceSuspiciousIpEmailOutput) ToWorkspaceSuspiciousIpEmailOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailOutput {
	return o
}

func (o WorkspaceSuspiciousIpEmailOutput) ToWorkspaceSuspiciousIpEmailPtrOutput() WorkspaceSuspiciousIpEmailPtrOutput {
	return o.ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceSuspiciousIpEmailOutput) ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSuspiciousIpEmail) *WorkspaceSuspiciousIpEmail {
		return &v
	}).(WorkspaceSuspiciousIpEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceSuspiciousIpEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceSuspiciousIpEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceSuspiciousIpEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceSuspiciousIpEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceSuspiciousIpEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceSuspiciousIpEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceSuspiciousIpEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceSuspiciousIpEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSuspiciousIpEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSuspiciousIpEmail)(nil)).Elem()
}

func (o WorkspaceSuspiciousIpEmailPtrOutput) ToWorkspaceSuspiciousIpEmailPtrOutput() WorkspaceSuspiciousIpEmailPtrOutput {
	return o
}

func (o WorkspaceSuspiciousIpEmailPtrOutput) ToWorkspaceSuspiciousIpEmailPtrOutputWithContext(ctx context.Context) WorkspaceSuspiciousIpEmailPtrOutput {
	return o
}

func (o WorkspaceSuspiciousIpEmailPtrOutput) Elem() WorkspaceSuspiciousIpEmailOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) WorkspaceSuspiciousIpEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceSuspiciousIpEmail
		return ret
	}).(WorkspaceSuspiciousIpEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceSuspiciousIpEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceSuspiciousIpEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceSuspiciousIpEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceSuspiciousIpEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceSuspiciousIpEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceSuspiciousIpEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSuspiciousIpEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceUserActivationEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceUserActivationEmailInput is an input type that accepts WorkspaceUserActivationEmailArgs and WorkspaceUserActivationEmailOutput values.
// You can construct a concrete instance of `WorkspaceUserActivationEmailInput` via:
//
//	WorkspaceUserActivationEmailArgs{...}
type WorkspaceUserActivationEmailInput interface {
	pulumi.Input

	ToWorkspaceUserActivationEmailOutput() WorkspaceUserActivationEmailOutput
	ToWorkspaceUserActivationEmailOutputWithContext(context.Context) WorkspaceUserActivationEmailOutput
}

type WorkspaceUserActivationEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceUserActivationEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserActivationEmail)(nil)).Elem()
}

func (i WorkspaceUserActivationEmailArgs) ToWorkspaceUserActivationEmailOutput() WorkspaceUserActivationEmailOutput {
	return i.ToWorkspaceUserActivationEmailOutputWithContext(context.Background())
}

func (i WorkspaceUserActivationEmailArgs) ToWorkspaceUserActivationEmailOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserActivationEmailOutput)
}

func (i WorkspaceUserActivationEmailArgs) ToWorkspaceUserActivationEmailPtrOutput() WorkspaceUserActivationEmailPtrOutput {
	return i.ToWorkspaceUserActivationEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceUserActivationEmailArgs) ToWorkspaceUserActivationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserActivationEmailOutput).ToWorkspaceUserActivationEmailPtrOutputWithContext(ctx)
}

// WorkspaceUserActivationEmailPtrInput is an input type that accepts WorkspaceUserActivationEmailArgs, WorkspaceUserActivationEmailPtr and WorkspaceUserActivationEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceUserActivationEmailPtrInput` via:
//
//	        WorkspaceUserActivationEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceUserActivationEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceUserActivationEmailPtrOutput() WorkspaceUserActivationEmailPtrOutput
	ToWorkspaceUserActivationEmailPtrOutputWithContext(context.Context) WorkspaceUserActivationEmailPtrOutput
}

type workspaceUserActivationEmailPtrType WorkspaceUserActivationEmailArgs

func WorkspaceUserActivationEmailPtr(v *WorkspaceUserActivationEmailArgs) WorkspaceUserActivationEmailPtrInput {
	return (*workspaceUserActivationEmailPtrType)(v)
}

func (*workspaceUserActivationEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserActivationEmail)(nil)).Elem()
}

func (i *workspaceUserActivationEmailPtrType) ToWorkspaceUserActivationEmailPtrOutput() WorkspaceUserActivationEmailPtrOutput {
	return i.ToWorkspaceUserActivationEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceUserActivationEmailPtrType) ToWorkspaceUserActivationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserActivationEmailPtrOutput)
}

type WorkspaceUserActivationEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceUserActivationEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserActivationEmail)(nil)).Elem()
}

func (o WorkspaceUserActivationEmailOutput) ToWorkspaceUserActivationEmailOutput() WorkspaceUserActivationEmailOutput {
	return o
}

func (o WorkspaceUserActivationEmailOutput) ToWorkspaceUserActivationEmailOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailOutput {
	return o
}

func (o WorkspaceUserActivationEmailOutput) ToWorkspaceUserActivationEmailPtrOutput() WorkspaceUserActivationEmailPtrOutput {
	return o.ToWorkspaceUserActivationEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceUserActivationEmailOutput) ToWorkspaceUserActivationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceUserActivationEmail) *WorkspaceUserActivationEmail {
		return &v
	}).(WorkspaceUserActivationEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserActivationEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserActivationEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserActivationEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserActivationEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserActivationEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserActivationEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserActivationEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceUserActivationEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceUserActivationEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserActivationEmail)(nil)).Elem()
}

func (o WorkspaceUserActivationEmailPtrOutput) ToWorkspaceUserActivationEmailPtrOutput() WorkspaceUserActivationEmailPtrOutput {
	return o
}

func (o WorkspaceUserActivationEmailPtrOutput) ToWorkspaceUserActivationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserActivationEmailPtrOutput {
	return o
}

func (o WorkspaceUserActivationEmailPtrOutput) Elem() WorkspaceUserActivationEmailOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) WorkspaceUserActivationEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceUserActivationEmail
		return ret
	}).(WorkspaceUserActivationEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserActivationEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserActivationEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserActivationEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserActivationEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserActivationEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserActivationEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserActivationEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceUserInvitationEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceUserInvitationEmailInput is an input type that accepts WorkspaceUserInvitationEmailArgs and WorkspaceUserInvitationEmailOutput values.
// You can construct a concrete instance of `WorkspaceUserInvitationEmailInput` via:
//
//	WorkspaceUserInvitationEmailArgs{...}
type WorkspaceUserInvitationEmailInput interface {
	pulumi.Input

	ToWorkspaceUserInvitationEmailOutput() WorkspaceUserInvitationEmailOutput
	ToWorkspaceUserInvitationEmailOutputWithContext(context.Context) WorkspaceUserInvitationEmailOutput
}

type WorkspaceUserInvitationEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceUserInvitationEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserInvitationEmail)(nil)).Elem()
}

func (i WorkspaceUserInvitationEmailArgs) ToWorkspaceUserInvitationEmailOutput() WorkspaceUserInvitationEmailOutput {
	return i.ToWorkspaceUserInvitationEmailOutputWithContext(context.Background())
}

func (i WorkspaceUserInvitationEmailArgs) ToWorkspaceUserInvitationEmailOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserInvitationEmailOutput)
}

func (i WorkspaceUserInvitationEmailArgs) ToWorkspaceUserInvitationEmailPtrOutput() WorkspaceUserInvitationEmailPtrOutput {
	return i.ToWorkspaceUserInvitationEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceUserInvitationEmailArgs) ToWorkspaceUserInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserInvitationEmailOutput).ToWorkspaceUserInvitationEmailPtrOutputWithContext(ctx)
}

// WorkspaceUserInvitationEmailPtrInput is an input type that accepts WorkspaceUserInvitationEmailArgs, WorkspaceUserInvitationEmailPtr and WorkspaceUserInvitationEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceUserInvitationEmailPtrInput` via:
//
//	        WorkspaceUserInvitationEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceUserInvitationEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceUserInvitationEmailPtrOutput() WorkspaceUserInvitationEmailPtrOutput
	ToWorkspaceUserInvitationEmailPtrOutputWithContext(context.Context) WorkspaceUserInvitationEmailPtrOutput
}

type workspaceUserInvitationEmailPtrType WorkspaceUserInvitationEmailArgs

func WorkspaceUserInvitationEmailPtr(v *WorkspaceUserInvitationEmailArgs) WorkspaceUserInvitationEmailPtrInput {
	return (*workspaceUserInvitationEmailPtrType)(v)
}

func (*workspaceUserInvitationEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserInvitationEmail)(nil)).Elem()
}

func (i *workspaceUserInvitationEmailPtrType) ToWorkspaceUserInvitationEmailPtrOutput() WorkspaceUserInvitationEmailPtrOutput {
	return i.ToWorkspaceUserInvitationEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceUserInvitationEmailPtrType) ToWorkspaceUserInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserInvitationEmailPtrOutput)
}

type WorkspaceUserInvitationEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceUserInvitationEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserInvitationEmail)(nil)).Elem()
}

func (o WorkspaceUserInvitationEmailOutput) ToWorkspaceUserInvitationEmailOutput() WorkspaceUserInvitationEmailOutput {
	return o
}

func (o WorkspaceUserInvitationEmailOutput) ToWorkspaceUserInvitationEmailOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailOutput {
	return o
}

func (o WorkspaceUserInvitationEmailOutput) ToWorkspaceUserInvitationEmailPtrOutput() WorkspaceUserInvitationEmailPtrOutput {
	return o.ToWorkspaceUserInvitationEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceUserInvitationEmailOutput) ToWorkspaceUserInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceUserInvitationEmail) *WorkspaceUserInvitationEmail {
		return &v
	}).(WorkspaceUserInvitationEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserInvitationEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserInvitationEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserInvitationEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserInvitationEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserInvitationEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserInvitationEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserInvitationEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceUserInvitationEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceUserInvitationEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserInvitationEmail)(nil)).Elem()
}

func (o WorkspaceUserInvitationEmailPtrOutput) ToWorkspaceUserInvitationEmailPtrOutput() WorkspaceUserInvitationEmailPtrOutput {
	return o
}

func (o WorkspaceUserInvitationEmailPtrOutput) ToWorkspaceUserInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserInvitationEmailPtrOutput {
	return o
}

func (o WorkspaceUserInvitationEmailPtrOutput) Elem() WorkspaceUserInvitationEmailOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) WorkspaceUserInvitationEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceUserInvitationEmail
		return ret
	}).(WorkspaceUserInvitationEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserInvitationEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserInvitationEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserInvitationEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserInvitationEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserInvitationEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserInvitationEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

type WorkspaceUserUsedInvitationEmail struct {
	// The address to use in the "From" header of the email.
	FromAddress string `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName string `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate string `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject string `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl *string `pulumi:"successRedirectUrl"`
}

// WorkspaceUserUsedInvitationEmailInput is an input type that accepts WorkspaceUserUsedInvitationEmailArgs and WorkspaceUserUsedInvitationEmailOutput values.
// You can construct a concrete instance of `WorkspaceUserUsedInvitationEmailInput` via:
//
//	WorkspaceUserUsedInvitationEmailArgs{...}
type WorkspaceUserUsedInvitationEmailInput interface {
	pulumi.Input

	ToWorkspaceUserUsedInvitationEmailOutput() WorkspaceUserUsedInvitationEmailOutput
	ToWorkspaceUserUsedInvitationEmailOutputWithContext(context.Context) WorkspaceUserUsedInvitationEmailOutput
}

type WorkspaceUserUsedInvitationEmailArgs struct {
	// The address to use in the "From" header of the email.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The name to use in the "From" header of the email.
	FromName pulumi.StringInput `pulumi:"fromName"`
	// The HTML template to use in the email.
	HtmlTemplate pulumi.StringInput `pulumi:"htmlTemplate"`
	// The redirect URL to use, if applicable.
	//
	//     Access this value as "\{\{redirectURL\}\}" in the template.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The subject of the email.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The success redirect URL to use, if applicable.
	SuccessRedirectUrl pulumi.StringPtrInput `pulumi:"successRedirectUrl"`
}

func (WorkspaceUserUsedInvitationEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserUsedInvitationEmail)(nil)).Elem()
}

func (i WorkspaceUserUsedInvitationEmailArgs) ToWorkspaceUserUsedInvitationEmailOutput() WorkspaceUserUsedInvitationEmailOutput {
	return i.ToWorkspaceUserUsedInvitationEmailOutputWithContext(context.Background())
}

func (i WorkspaceUserUsedInvitationEmailArgs) ToWorkspaceUserUsedInvitationEmailOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserUsedInvitationEmailOutput)
}

func (i WorkspaceUserUsedInvitationEmailArgs) ToWorkspaceUserUsedInvitationEmailPtrOutput() WorkspaceUserUsedInvitationEmailPtrOutput {
	return i.ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(context.Background())
}

func (i WorkspaceUserUsedInvitationEmailArgs) ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserUsedInvitationEmailOutput).ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(ctx)
}

// WorkspaceUserUsedInvitationEmailPtrInput is an input type that accepts WorkspaceUserUsedInvitationEmailArgs, WorkspaceUserUsedInvitationEmailPtr and WorkspaceUserUsedInvitationEmailPtrOutput values.
// You can construct a concrete instance of `WorkspaceUserUsedInvitationEmailPtrInput` via:
//
//	        WorkspaceUserUsedInvitationEmailArgs{...}
//
//	or:
//
//	        nil
type WorkspaceUserUsedInvitationEmailPtrInput interface {
	pulumi.Input

	ToWorkspaceUserUsedInvitationEmailPtrOutput() WorkspaceUserUsedInvitationEmailPtrOutput
	ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(context.Context) WorkspaceUserUsedInvitationEmailPtrOutput
}

type workspaceUserUsedInvitationEmailPtrType WorkspaceUserUsedInvitationEmailArgs

func WorkspaceUserUsedInvitationEmailPtr(v *WorkspaceUserUsedInvitationEmailArgs) WorkspaceUserUsedInvitationEmailPtrInput {
	return (*workspaceUserUsedInvitationEmailPtrType)(v)
}

func (*workspaceUserUsedInvitationEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserUsedInvitationEmail)(nil)).Elem()
}

func (i *workspaceUserUsedInvitationEmailPtrType) ToWorkspaceUserUsedInvitationEmailPtrOutput() WorkspaceUserUsedInvitationEmailPtrOutput {
	return i.ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(context.Background())
}

func (i *workspaceUserUsedInvitationEmailPtrType) ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserUsedInvitationEmailPtrOutput)
}

type WorkspaceUserUsedInvitationEmailOutput struct{ *pulumi.OutputState }

func (WorkspaceUserUsedInvitationEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceUserUsedInvitationEmail)(nil)).Elem()
}

func (o WorkspaceUserUsedInvitationEmailOutput) ToWorkspaceUserUsedInvitationEmailOutput() WorkspaceUserUsedInvitationEmailOutput {
	return o
}

func (o WorkspaceUserUsedInvitationEmailOutput) ToWorkspaceUserUsedInvitationEmailOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailOutput {
	return o
}

func (o WorkspaceUserUsedInvitationEmailOutput) ToWorkspaceUserUsedInvitationEmailPtrOutput() WorkspaceUserUsedInvitationEmailPtrOutput {
	return o.ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(context.Background())
}

func (o WorkspaceUserUsedInvitationEmailOutput) ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceUserUsedInvitationEmail) *WorkspaceUserUsedInvitationEmail {
		return &v
	}).(WorkspaceUserUsedInvitationEmailPtrOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserUsedInvitationEmailOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) string { return v.FromAddress }).(pulumi.StringOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserUsedInvitationEmailOutput) FromName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) string { return v.FromName }).(pulumi.StringOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserUsedInvitationEmailOutput) HtmlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) string { return v.HtmlTemplate }).(pulumi.StringOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserUsedInvitationEmailOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserUsedInvitationEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) string { return v.Subject }).(pulumi.StringOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserUsedInvitationEmailOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceUserUsedInvitationEmail) *string { return v.SuccessRedirectUrl }).(pulumi.StringPtrOutput)
}

type WorkspaceUserUsedInvitationEmailPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceUserUsedInvitationEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserUsedInvitationEmail)(nil)).Elem()
}

func (o WorkspaceUserUsedInvitationEmailPtrOutput) ToWorkspaceUserUsedInvitationEmailPtrOutput() WorkspaceUserUsedInvitationEmailPtrOutput {
	return o
}

func (o WorkspaceUserUsedInvitationEmailPtrOutput) ToWorkspaceUserUsedInvitationEmailPtrOutputWithContext(ctx context.Context) WorkspaceUserUsedInvitationEmailPtrOutput {
	return o
}

func (o WorkspaceUserUsedInvitationEmailPtrOutput) Elem() WorkspaceUserUsedInvitationEmailOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) WorkspaceUserUsedInvitationEmail {
		if v != nil {
			return *v
		}
		var ret WorkspaceUserUsedInvitationEmail
		return ret
	}).(WorkspaceUserUsedInvitationEmailOutput)
}

// The address to use in the "From" header of the email.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// The name to use in the "From" header of the email.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.FromName
	}).(pulumi.StringPtrOutput)
}

// The HTML template to use in the email.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) HtmlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlTemplate
	}).(pulumi.StringPtrOutput)
}

// The redirect URL to use, if applicable.
//
//	Access this value as "\{\{redirectURL\}\}" in the template.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// The subject of the email.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The success redirect URL to use, if applicable.
func (o WorkspaceUserUsedInvitationEmailPtrOutput) SuccessRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceUserUsedInvitationEmail) *string {
		if v == nil {
			return nil
		}
		return v.SuccessRedirectUrl
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalInput)(nil)).Elem(), WorkspaceAdminPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPtrInput)(nil)).Elem(), WorkspaceAdminPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteInput)(nil)).Elem(), WorkspaceAdminPortalPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPalettePtrInput)(nil)).Elem(), WorkspaceAdminPortalPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalPtrInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalErrorInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalErrorArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalInfoInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalInfoArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalPrimaryInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalPrimaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSecondaryInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalSecondaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSuccessInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalSuccessArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalSuccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalWarningInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteAdminPortalWarningArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteAdminPortalWarningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteErrorInput)(nil)).Elem(), WorkspaceAdminPortalPaletteErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteErrorArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteInfoInput)(nil)).Elem(), WorkspaceAdminPortalPaletteInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteInfoArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxPtrInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxErrorInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxErrorArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxInfoInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxInfoArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxPrimaryInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxPrimaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSecondaryInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxSecondaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSuccessInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxSuccessArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxSuccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxWarningInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteLoginBoxWarningArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteLoginBoxWarningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPalettePrimaryInput)(nil)).Elem(), WorkspaceAdminPortalPalettePrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPalettePrimaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPalettePrimaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteSecondaryInput)(nil)).Elem(), WorkspaceAdminPortalPaletteSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteSecondaryArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteSecondaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteSuccessInput)(nil)).Elem(), WorkspaceAdminPortalPaletteSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteSuccessArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteSuccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteWarningInput)(nil)).Elem(), WorkspaceAdminPortalPaletteWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAdminPortalPaletteWarningArrayInput)(nil)).Elem(), WorkspaceAdminPortalPaletteWarningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAuthPolicyInput)(nil)).Elem(), WorkspaceAuthPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAuthPolicyPtrInput)(nil)).Elem(), WorkspaceAuthPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBotDetectionEmailInput)(nil)).Elem(), WorkspaceBotDetectionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBotDetectionEmailPtrInput)(nil)).Elem(), WorkspaceBotDetectionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBruteForceProtectionEmailInput)(nil)).Elem(), WorkspaceBruteForceProtectionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBruteForceProtectionEmailPtrInput)(nil)).Elem(), WorkspaceBruteForceProtectionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBulkTenantsInvitesEmailInput)(nil)).Elem(), WorkspaceBulkTenantsInvitesEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceBulkTenantsInvitesEmailPtrInput)(nil)).Elem(), WorkspaceBulkTenantsInvitesEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCaptchaPolicyInput)(nil)).Elem(), WorkspaceCaptchaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCaptchaPolicyPtrInput)(nil)).Elem(), WorkspaceCaptchaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceEmailVerificationEmailInput)(nil)).Elem(), WorkspaceEmailVerificationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceEmailVerificationEmailPtrInput)(nil)).Elem(), WorkspaceEmailVerificationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceFacebookSocialLoginInput)(nil)).Elem(), WorkspaceFacebookSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceFacebookSocialLoginPtrInput)(nil)).Elem(), WorkspaceFacebookSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGithubSocialLoginInput)(nil)).Elem(), WorkspaceGithubSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGithubSocialLoginPtrInput)(nil)).Elem(), WorkspaceGithubSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGoogleSocialLoginInput)(nil)).Elem(), WorkspaceGoogleSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGoogleSocialLoginPtrInput)(nil)).Elem(), WorkspaceGoogleSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceHostedLoginInput)(nil)).Elem(), WorkspaceHostedLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceHostedLoginPtrInput)(nil)).Elem(), WorkspaceHostedLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceImpossibleTravelEmailInput)(nil)).Elem(), WorkspaceImpossibleTravelEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceImpossibleTravelEmailPtrInput)(nil)).Elem(), WorkspaceImpossibleTravelEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceLockoutPolicyInput)(nil)).Elem(), WorkspaceLockoutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceLockoutPolicyPtrInput)(nil)).Elem(), WorkspaceLockoutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMagicCodeEmailInput)(nil)).Elem(), WorkspaceMagicCodeEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMagicCodeEmailPtrInput)(nil)).Elem(), WorkspaceMagicCodeEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMagicLinkEmailInput)(nil)).Elem(), WorkspaceMagicLinkEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMagicLinkEmailPtrInput)(nil)).Elem(), WorkspaceMagicLinkEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaAuthenticationAppInput)(nil)).Elem(), WorkspaceMfaAuthenticationAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaAuthenticationAppPtrInput)(nil)).Elem(), WorkspaceMfaAuthenticationAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaEnrollEmailInput)(nil)).Elem(), WorkspaceMfaEnrollEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaEnrollEmailPtrInput)(nil)).Elem(), WorkspaceMfaEnrollEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaOtcEmailInput)(nil)).Elem(), WorkspaceMfaOtcEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaOtcEmailPtrInput)(nil)).Elem(), WorkspaceMfaOtcEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaPolicyInput)(nil)).Elem(), WorkspaceMfaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaPolicyPtrInput)(nil)).Elem(), WorkspaceMfaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaRecoveryCodeEmailInput)(nil)).Elem(), WorkspaceMfaRecoveryCodeEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaRecoveryCodeEmailPtrInput)(nil)).Elem(), WorkspaceMfaRecoveryCodeEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaUnenrollEmailInput)(nil)).Elem(), WorkspaceMfaUnenrollEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMfaUnenrollEmailPtrInput)(nil)).Elem(), WorkspaceMfaUnenrollEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMicrosoftSocialLoginInput)(nil)).Elem(), WorkspaceMicrosoftSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMicrosoftSocialLoginPtrInput)(nil)).Elem(), WorkspaceMicrosoftSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNewDeviceConnectedEmailInput)(nil)).Elem(), WorkspaceNewDeviceConnectedEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNewDeviceConnectedEmailPtrInput)(nil)).Elem(), WorkspaceNewDeviceConnectedEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNewMfaMethodEmailInput)(nil)).Elem(), WorkspaceNewMfaMethodEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNewMfaMethodEmailPtrInput)(nil)).Elem(), WorkspaceNewMfaMethodEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceOidcInput)(nil)).Elem(), WorkspaceOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceOidcPtrInput)(nil)).Elem(), WorkspaceOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePasswordPolicyInput)(nil)).Elem(), WorkspacePasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePasswordPolicyPtrInput)(nil)).Elem(), WorkspacePasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePwnedPasswordEmailInput)(nil)).Elem(), WorkspacePwnedPasswordEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePwnedPasswordEmailPtrInput)(nil)).Elem(), WorkspacePwnedPasswordEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRemoveMfaMethodEmailInput)(nil)).Elem(), WorkspaceRemoveMfaMethodEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRemoveMfaMethodEmailPtrInput)(nil)).Elem(), WorkspaceRemoveMfaMethodEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceResetPasswordEmailInput)(nil)).Elem(), WorkspaceResetPasswordEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceResetPasswordEmailPtrInput)(nil)).Elem(), WorkspaceResetPasswordEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceResetPhoneNumberEmailInput)(nil)).Elem(), WorkspaceResetPhoneNumberEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceResetPhoneNumberEmailPtrInput)(nil)).Elem(), WorkspaceResetPhoneNumberEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSamlInput)(nil)).Elem(), WorkspaceSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSamlPtrInput)(nil)).Elem(), WorkspaceSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSmsAuthenticationEnabledEmailInput)(nil)).Elem(), WorkspaceSmsAuthenticationEnabledEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSmsAuthenticationEnabledEmailPtrInput)(nil)).Elem(), WorkspaceSmsAuthenticationEnabledEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSsoDomainPolicyInput)(nil)).Elem(), WorkspaceSsoDomainPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSsoDomainPolicyPtrInput)(nil)).Elem(), WorkspaceSsoDomainPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSsoMultiTenantPolicyInput)(nil)).Elem(), WorkspaceSsoMultiTenantPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSsoMultiTenantPolicyPtrInput)(nil)).Elem(), WorkspaceSsoMultiTenantPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSuspiciousIpEmailInput)(nil)).Elem(), WorkspaceSuspiciousIpEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSuspiciousIpEmailPtrInput)(nil)).Elem(), WorkspaceSuspiciousIpEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserActivationEmailInput)(nil)).Elem(), WorkspaceUserActivationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserActivationEmailPtrInput)(nil)).Elem(), WorkspaceUserActivationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserInvitationEmailInput)(nil)).Elem(), WorkspaceUserInvitationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserInvitationEmailPtrInput)(nil)).Elem(), WorkspaceUserInvitationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserUsedInvitationEmailInput)(nil)).Elem(), WorkspaceUserUsedInvitationEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserUsedInvitationEmailPtrInput)(nil)).Elem(), WorkspaceUserUsedInvitationEmailArgs{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPalettePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalErrorOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalErrorArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalInfoOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalInfoArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalPrimaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalPrimaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalSecondaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalSecondaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalSuccessOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalSuccessArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalWarningOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteAdminPortalWarningArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteErrorOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteErrorArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteInfoOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteInfoArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxErrorOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxErrorArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxInfoOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxInfoArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxPrimaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxPrimaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxSecondaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxSecondaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxSuccessOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxSuccessArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxWarningOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteLoginBoxWarningArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPalettePrimaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPalettePrimaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteSecondaryOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteSecondaryArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteSuccessOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteSuccessArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteWarningOutput{})
	pulumi.RegisterOutputType(WorkspaceAdminPortalPaletteWarningArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceAuthPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceAuthPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceBotDetectionEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceBotDetectionEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceBruteForceProtectionEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceBruteForceProtectionEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceBulkTenantsInvitesEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceBulkTenantsInvitesEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceCaptchaPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceCaptchaPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceEmailVerificationEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceEmailVerificationEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceFacebookSocialLoginOutput{})
	pulumi.RegisterOutputType(WorkspaceFacebookSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceGithubSocialLoginOutput{})
	pulumi.RegisterOutputType(WorkspaceGithubSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceGoogleSocialLoginOutput{})
	pulumi.RegisterOutputType(WorkspaceGoogleSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceHostedLoginOutput{})
	pulumi.RegisterOutputType(WorkspaceHostedLoginPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceImpossibleTravelEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceImpossibleTravelEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceLockoutPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceLockoutPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMagicCodeEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMagicCodeEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMagicLinkEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMagicLinkEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaAuthenticationAppOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaAuthenticationAppPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaEnrollEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaEnrollEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaOtcEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaOtcEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaRecoveryCodeEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaRecoveryCodeEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaUnenrollEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceMfaUnenrollEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceMicrosoftSocialLoginOutput{})
	pulumi.RegisterOutputType(WorkspaceMicrosoftSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceNewDeviceConnectedEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceNewDeviceConnectedEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceNewMfaMethodEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceNewMfaMethodEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceOidcOutput{})
	pulumi.RegisterOutputType(WorkspaceOidcPtrOutput{})
	pulumi.RegisterOutputType(WorkspacePasswordPolicyOutput{})
	pulumi.RegisterOutputType(WorkspacePasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspacePwnedPasswordEmailOutput{})
	pulumi.RegisterOutputType(WorkspacePwnedPasswordEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceRemoveMfaMethodEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceRemoveMfaMethodEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceResetPasswordEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceResetPasswordEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceResetPhoneNumberEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceResetPhoneNumberEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSamlOutput{})
	pulumi.RegisterOutputType(WorkspaceSamlPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSmsAuthenticationEnabledEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceSmsAuthenticationEnabledEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSsoDomainPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceSsoDomainPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSsoMultiTenantPolicyOutput{})
	pulumi.RegisterOutputType(WorkspaceSsoMultiTenantPolicyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSuspiciousIpEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceSuspiciousIpEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceUserActivationEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceUserActivationEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceUserInvitationEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceUserInvitationEmailPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceUserUsedInvitationEmailOutput{})
	pulumi.RegisterOutputType(WorkspaceUserUsedInvitationEmailPtrOutput{})
}
