// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package frontegg

import (
	"context"
	"reflect"

	"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/nrf110/pulumi-frontegg/sdk/go/frontegg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			readUsers, err := frontegg.LookupPermission(ctx, &frontegg.LookupPermissionArgs{
//				Key: "fe.secure.read.users",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("permissionId", readUsers.Id)
//			return nil
//		})
//	}
//
// ```
func LookupPermission(ctx *pulumi.Context, args *LookupPermissionArgs, opts ...pulumi.InvokeOption) (*LookupPermissionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPermissionResult
	err := ctx.Invoke("frontegg:index/getPermission:getPermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermission.
type LookupPermissionArgs struct {
	// A human-readable identifier for the permission.
	Key string `pulumi:"key"`
}

// A collection of values returned by getPermission.
type LookupPermissionResult struct {
	// The identifier of the category to which this permission belongs.
	CategoryId string `pulumi:"categoryId"`
	// The timestamp at which the permission was created.
	CreatedAt string `pulumi:"createdAt"`
	// A human-readable description of the permission.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A human-readable identifier for the permission.
	Key string `pulumi:"key"`
	// A human-readable name for the permission.
	Name string `pulumi:"name"`
}

func LookupPermissionOutput(ctx *pulumi.Context, args LookupPermissionOutputArgs, opts ...pulumi.InvokeOption) LookupPermissionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPermissionResultOutput, error) {
			args := v.(LookupPermissionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("frontegg:index/getPermission:getPermission", args, LookupPermissionResultOutput{}, options).(LookupPermissionResultOutput), nil
		}).(LookupPermissionResultOutput)
}

// A collection of arguments for invoking getPermission.
type LookupPermissionOutputArgs struct {
	// A human-readable identifier for the permission.
	Key pulumi.StringInput `pulumi:"key"`
}

func (LookupPermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionArgs)(nil)).Elem()
}

// A collection of values returned by getPermission.
type LookupPermissionResultOutput struct{ *pulumi.OutputState }

func (LookupPermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPermissionResult)(nil)).Elem()
}

func (o LookupPermissionResultOutput) ToLookupPermissionResultOutput() LookupPermissionResultOutput {
	return o
}

func (o LookupPermissionResultOutput) ToLookupPermissionResultOutputWithContext(ctx context.Context) LookupPermissionResultOutput {
	return o
}

// The identifier of the category to which this permission belongs.
func (o LookupPermissionResultOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.CategoryId }).(pulumi.StringOutput)
}

// The timestamp at which the permission was created.
func (o LookupPermissionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human-readable description of the permission.
func (o LookupPermissionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

// A human-readable identifier for the permission.
func (o LookupPermissionResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.Key }).(pulumi.StringOutput)
}

// A human-readable name for the permission.
func (o LookupPermissionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPermissionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPermissionResultOutput{})
}
