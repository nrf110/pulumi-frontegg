// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Frontegg
{
    /// <summary>
    /// Configures a Frontegg Email provider.
    /// </summary>
    [FronteggResourceType("frontegg:index/emailProvider:EmailProvider")]
    public partial class EmailProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp at which the permission was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Required for Mailgun (required only for Mailgun).
        /// </summary>
        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        /// <summary>
        /// Provider ID (required only for AWS SES).
        /// </summary>
        [Output("providerId")]
        public Output<string?> ProviderId { get; private set; } = null!;

        /// <summary>
        /// Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
        /// </summary>
        [Output("providerName")]
        public Output<string> ProviderName { get; private set; } = null!;

        /// <summary>
        /// Required for AWS SES or Mailgun.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// A secret to be included with the event.
        /// </summary>
        [Output("secret")]
        public Output<string> Secret { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which the permission was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a EmailProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmailProvider(string name, EmailProviderArgs args, CustomResourceOptions? options = null)
            : base("frontegg:index/emailProvider:EmailProvider", name, args ?? new EmailProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmailProvider(string name, Input<string> id, EmailProviderState? state = null, CustomResourceOptions? options = null)
            : base("frontegg:index/emailProvider:EmailProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmailProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmailProvider Get(string name, Input<string> id, EmailProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new EmailProvider(name, id, state, options);
        }
    }

    public sealed class EmailProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required for Mailgun (required only for Mailgun).
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Provider ID (required only for AWS SES).
        /// </summary>
        [Input("providerId")]
        public Input<string>? ProviderId { get; set; }

        /// <summary>
        /// Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
        /// </summary>
        [Input("providerName", required: true)]
        public Input<string> ProviderName { get; set; } = null!;

        /// <summary>
        /// Required for AWS SES or Mailgun.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A secret to be included with the event.
        /// </summary>
        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        public EmailProviderArgs()
        {
        }
        public static new EmailProviderArgs Empty => new EmailProviderArgs();
    }

    public sealed class EmailProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp at which the permission was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Required for Mailgun (required only for Mailgun).
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Provider ID (required only for AWS SES).
        /// </summary>
        [Input("providerId")]
        public Input<string>? ProviderId { get; set; }

        /// <summary>
        /// Name of the email provider (If the provider is changed, the old provider's configuration will be deleted).
        /// </summary>
        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        /// <summary>
        /// Required for AWS SES or Mailgun.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A secret to be included with the event.
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        /// <summary>
        /// The timestamp at which the permission was updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public EmailProviderState()
        {
        }
        public static new EmailProviderState Empty => new EmailProviderState();
    }
}
