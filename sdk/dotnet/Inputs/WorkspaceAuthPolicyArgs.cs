// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Frontegg.Inputs
{

    public sealed class WorkspaceAuthPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether users are allowed to sign up.
        /// </summary>
        [Input("allowSignups", required: true)]
        public Input<bool> AllowSignups { get; set; } = null!;

        /// <summary>
        /// Allow tenants to invite new users via an invitation link.
        /// </summary>
        [Input("allowTenantInvitations", required: true)]
        public Input<bool> AllowTenantInvitations { get; set; } = null!;

        /// <summary>
        /// Whether unverified users are allowed to log in.
        /// </summary>
        [Input("allowUnverifiedUsers", required: true)]
        public Input<bool> AllowUnverifiedUsers { get; set; } = null!;

        /// <summary>
        /// The authentication strategy to use for people logging in.
        /// 
        /// 	Must be one of "EmailAndPassword", "Code", "MagicLink", "NoLocalAuthentication", "SmsCode"
        /// </summary>
        [Input("authStrategy", required: true)]
        public Input<string> AuthStrategy { get; set; } = null!;

        /// <summary>
        /// Whether users can create API tokens.
        /// </summary>
        [Input("enableApiTokens", required: true)]
        public Input<bool> EnableApiTokens { get; set; } = null!;

        /// <summary>
        /// Whether granular roles and permissions are enabled.
        /// </summary>
        [Input("enableRoles", required: true)]
        public Input<bool> EnableRoles { get; set; } = null!;

        /// <summary>
        /// The expiration time for the JWT access tokens issued by Frontegg.
        /// </summary>
        [Input("jwtAccessTokenExpiration", required: true)]
        public Input<int> JwtAccessTokenExpiration { get; set; } = null!;

        /// <summary>
        /// The algorithm Frontegg uses to sign JWT tokens.
        /// </summary>
        [Input("jwtAlgorithm")]
        public Input<string>? JwtAlgorithm { get; set; }

        /// <summary>
        /// The public key that Frontegg uses to sign JWT tokens.
        /// </summary>
        [Input("jwtPublicKey")]
        public Input<string>? JwtPublicKey { get; set; }

        /// <summary>
        /// The expiration time for the JWT refresh tokens issued by Frontegg.
        /// </summary>
        [Input("jwtRefreshTokenExpiration", required: true)]
        public Input<int> JwtRefreshTokenExpiration { get; set; } = null!;

        /// <summary>
        /// Type of tokens users will be able to generate.
        /// 							Must be one of "ClientCredentials" or "AccessToken".
        /// </summary>
        [Input("machineToMachineAuthStrategy")]
        public Input<string>? MachineToMachineAuthStrategy { get; set; }

        /// <summary>
        /// The SameSite policy to use for Frontegg cookies.
        /// 
        /// 	Must be one of "none", "lax", or "strict".
        /// </summary>
        [Input("sameSiteCookiePolicy", required: true)]
        public Input<string> SameSiteCookiePolicy { get; set; } = null!;

        public WorkspaceAuthPolicyArgs()
        {
        }
        public static new WorkspaceAuthPolicyArgs Empty => new WorkspaceAuthPolicyArgs();
    }
}
