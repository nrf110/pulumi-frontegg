// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Frontegg
{
    public static class GetPermission
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Frontegg = Pulumi.Frontegg;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var readUsers = Frontegg.GetPermission.Invoke(new()
        ///     {
        ///         Key = "fe.secure.read.users",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["permissionId"] = readUsers.Apply(getPermissionResult =&gt; getPermissionResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPermissionResult> InvokeAsync(GetPermissionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPermissionResult>("frontegg:index/getPermission:getPermission", args ?? new GetPermissionArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Frontegg = Pulumi.Frontegg;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var readUsers = Frontegg.GetPermission.Invoke(new()
        ///     {
        ///         Key = "fe.secure.read.users",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["permissionId"] = readUsers.Apply(getPermissionResult =&gt; getPermissionResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPermissionResult> Invoke(GetPermissionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionResult>("frontegg:index/getPermission:getPermission", args ?? new GetPermissionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Frontegg = Pulumi.Frontegg;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var readUsers = Frontegg.GetPermission.Invoke(new()
        ///     {
        ///         Key = "fe.secure.read.users",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["permissionId"] = readUsers.Apply(getPermissionResult =&gt; getPermissionResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPermissionResult> Invoke(GetPermissionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionResult>("frontegg:index/getPermission:getPermission", args ?? new GetPermissionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPermissionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human-readable identifier for the permission.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        public GetPermissionArgs()
        {
        }
        public static new GetPermissionArgs Empty => new GetPermissionArgs();
    }

    public sealed class GetPermissionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human-readable identifier for the permission.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public GetPermissionInvokeArgs()
        {
        }
        public static new GetPermissionInvokeArgs Empty => new GetPermissionInvokeArgs();
    }


    [OutputType]
    public sealed class GetPermissionResult
    {
        /// <summary>
        /// The identifier of the category to which this permission belongs.
        /// </summary>
        public readonly string CategoryId;
        /// <summary>
        /// The timestamp at which the permission was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// A human-readable description of the permission.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A human-readable identifier for the permission.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A human-readable name for the permission.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetPermissionResult(
            string categoryId,

            string createdAt,

            string description,

            string id,

            string key,

            string name)
        {
            CategoryId = categoryId;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Key = key;
            Name = name;
        }
    }
}
