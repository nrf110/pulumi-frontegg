// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Frontegg.Outputs
{

    [OutputType]
    public sealed class WorkspaceAdminPortal
    {
        /// <summary>
        /// Enable access to account settings in the admin portal.
        /// </summary>
        public readonly bool EnableAccountSettings;
        /// <summary>
        /// Enable access to API tokens in the admin portal.
        /// </summary>
        public readonly bool EnableApiTokens;
        /// <summary>
        /// Enable access to audit logs in the admin portal.
        /// </summary>
        public readonly bool EnableAuditLogs;
        /// <summary>
        /// Enable access to groups in the admin portal.
        /// </summary>
        public readonly bool EnableGroups;
        /// <summary>
        /// Enable access to personal API tokens in the admin portal.
        /// </summary>
        public readonly bool EnablePersonalApiTokens;
        /// <summary>
        /// Enable access to privacy settings in the admin portal.
        /// </summary>
        public readonly bool EnablePrivacy;
        /// <summary>
        /// Enable access to profile settings in the admin portal.
        /// </summary>
        public readonly bool EnableProfile;
        /// <summary>
        /// Enable access to provisioning settings in the admin portal.
        /// </summary>
        public readonly bool EnableProvisioning;
        /// <summary>
        /// Enable access to roles and permissions in the admin portal.
        /// </summary>
        public readonly bool EnableRoles;
        /// <summary>
        /// Enable access to security settings in the admin portal.
        /// </summary>
        public readonly bool EnableSecurity;
        /// <summary>
        /// Enable access to SSO settings in the admin portal.
        /// </summary>
        public readonly bool EnableSso;
        /// <summary>
        /// Enable access to subscription settings in the admin portal.
        /// </summary>
        public readonly bool EnableSubscriptions;
        /// <summary>
        /// Enable access to usage information in the admin portal.
        /// </summary>
        public readonly bool EnableUsage;
        /// <summary>
        /// Enable access to user management in the admin portal.
        /// </summary>
        public readonly bool EnableUsers;
        /// <summary>
        /// Enable access to webhooks in the admin portal.
        /// </summary>
        public readonly bool EnableWebhooks;
        /// <summary>
        /// Configures the color palette for the admin portal.
        /// </summary>
        public readonly Outputs.WorkspaceAdminPortalPalette? Palette;
        /// <summary>
        /// Configures the color palette for the admin portal.
        /// </summary>
        public readonly Outputs.WorkspaceAdminPortalPaletteAdminPortal? PaletteAdminPortal;
        /// <summary>
        /// Configures the color palette for the admin portal.
        /// </summary>
        public readonly Outputs.WorkspaceAdminPortalPaletteLoginBox? PaletteLoginBox;

        [OutputConstructor]
        private WorkspaceAdminPortal(
            bool enableAccountSettings,

            bool enableApiTokens,

            bool enableAuditLogs,

            bool enableGroups,

            bool enablePersonalApiTokens,

            bool enablePrivacy,

            bool enableProfile,

            bool enableProvisioning,

            bool enableRoles,

            bool enableSecurity,

            bool enableSso,

            bool enableSubscriptions,

            bool enableUsage,

            bool enableUsers,

            bool enableWebhooks,

            Outputs.WorkspaceAdminPortalPalette? palette,

            Outputs.WorkspaceAdminPortalPaletteAdminPortal? paletteAdminPortal,

            Outputs.WorkspaceAdminPortalPaletteLoginBox? paletteLoginBox)
        {
            EnableAccountSettings = enableAccountSettings;
            EnableApiTokens = enableApiTokens;
            EnableAuditLogs = enableAuditLogs;
            EnableGroups = enableGroups;
            EnablePersonalApiTokens = enablePersonalApiTokens;
            EnablePrivacy = enablePrivacy;
            EnableProfile = enableProfile;
            EnableProvisioning = enableProvisioning;
            EnableRoles = enableRoles;
            EnableSecurity = enableSecurity;
            EnableSso = enableSso;
            EnableSubscriptions = enableSubscriptions;
            EnableUsage = enableUsage;
            EnableUsers = enableUsers;
            EnableWebhooks = enableWebhooks;
            Palette = palette;
            PaletteAdminPortal = paletteAdminPortal;
            PaletteLoginBox = paletteLoginBox;
        }
    }
}
